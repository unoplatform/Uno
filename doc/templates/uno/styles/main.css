@import url("https://fonts.googleapis.com/css?family=Open+Sans:500,600,700,800,400italic,700italic,400");
@import url("https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css");
:target::before {
  content: '';
  display: block;
  margin-top: -130px;
  height: 130px;
  width: 1px; }

body {
  font-family: 'Open Sans', sans-serif;
  color: #242424; }
  body mark {
    background: rgba(21, 155, 255, 0.25); }
  body .toc {
    background-color: transparent; }

.row:before {
  content: none; }

.row:after {
  content: ''; }

a {
  color: #159bff; }
  a:hover, a:active {
    color: #242424; }

h1 {
  font-size: 40px;
  font-weight: 600;
  text-transform: none; }
  @media only screen and (max-width: 767px) {
    h1 {
      font-size: 32px; } }

h2 {
  font-size: 34px;
  font-weight: 600;
  text-transform: none; }
  @media only screen and (max-width: 767px) {
    h2 {
      font-size: 28px; } }

h3 {
  font-size: 28px;
  font-weight: 600;
  text-transform: none; }
  @media only screen and (max-width: 767px) {
    h3 {
      font-size: 22px; } }

@media screen {
  pre {
    overflow: auto; }
    pre > code {
      white-space: pre; } }

.container {
  width: 100%; }

#breadcrumb {
  padding: 0 32px; }

.breadcrumb {
  white-space: inherit; }

.body-content .article {
  margin-right: 0; }

@media only screen and (min-width: 769px) {
  .sidefilter {
    width: 24%; } }

@media (min-width: 769px) and (max-width: 991px) {
  .sidefilter {
    width: 30%; } }

@media only screen and (min-width: 769px) {
  .article.grid-right {
    margin-left: 26%; } }

@media (min-width: 769px) and (max-width: 991px) {
  .article.grid-right {
    margin-left: 32%; } }

.sidetoc {
  top: 180px;
  background-color: white !important; }
  @media only screen and (min-width: 769px) {
    .sidetoc {
      width: 24%; } }
  @media (min-width: 769px) and (max-width: 991px) {
    .sidetoc {
      width: 30%; } }
  .sidetoc .nav > li {
    line-height: 1.79; }
    .sidetoc .nav > li a {
      color: #242424; }
  .sidetoc .nav > li.active > a {
    color: #242424;
    font-weight: bold; }
    .sidetoc .nav > li.active > a:hover {
      color: #000; }
  .sidetoc .toc .nav > li.filtered > ul, .sidetoc .toc .nav > li.in > ul {
    display: block; }
    @media only screen and (max-width: 768px) {
      .sidetoc .toc .nav > li.filtered > ul, .sidetoc .toc .nav > li.in > ul {
        display: grid; } }
  @media only screen and (max-width: 768px) {
    .sidetoc .toc li:after {
      display: none; } }
  .sidetoc .toc .nav > li > .expand-stub::before {
    font-family: 'Glyphicons Halflings', 'ui-sans-serif';
    content: '\e258';
    font-size: 0.8em; }
  .sidetoc .toc .nav > li.in > .expand-stub::before {
    font-family: 'Glyphicons Halflings', 'ui-sans-serif';
    display: inline-block;
    content: '\e258';
    font-size: 0.8em;
    transform: rotate(90deg); }
  .sidetoc .toc ul ul > li > a:before {
    content: ''; }
  .sidetoc .toc ul {
    padding-left: 5px;
    text-align: left; }
    @media only screen and (max-width: 768px) {
      .sidetoc .toc ul {
        text-align: left; } }
    .sidetoc .toc ul li a {
      padding-left: 5px; }
  @media only screen and (max-width: 768px) {
    .sidetoc .toc {
      margin-left: 0; }
      .sidetoc .toc ul {
        margin: 0; }
        .sidetoc .toc ul li a {
          margin: 0; } }

@media only screen and (max-width: 767px) {
  .sidenav {
    position: fixed;
    width: 100%;
    z-index: 999; } }

.front-page article section {
  margin-left: auto; }

.front-page p {
  margin: 20px auto; }

.front-page .subnav,
.front-page .sideaffix,
.front-page .footer {
  display: none; }

.front-page .body-content {
  width: 100%;
  padding: 0;
  overflow: hidden; }
  .front-page .body-content .article {
    margin: 0 !important; }
    .front-page .body-content .article > [class*='col'] {
      width: auto;
      padding: 0;
      float: none; }

.front-page .button {
  display: inline-block; }
  .front-page .button a {
    display: inline-block;
    padding: 7px 17px;
    font-size: 20px;
    font-weight: bold;
    box-shadow: 0 2px 4px 0 rgba(31, 31, 31, 0.25);
    border-radius: 8px;
    transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out; }
  .front-page .button.white a {
    background: #fff;
    color: #242424; }
    .front-page .button.white a:hover {
      background: #7a67f8;
      color: #fff; }
  .front-page .button.turquoise a {
    background: #7a67f8;
    color: #fff; }
    .front-page .button.turquoise a:hover {
      background: #654ff7; }

.front-page .intro {
  padding: 100px 15px 60px;
  text-align: center;
  font-size: 18px;
  position: relative; }
  @media screen and (min-width: 768px) {
    .front-page .intro {
      padding: 200px 15px 120px; } }
  .front-page .intro h1 {
    font-size: 36px;
    text-transform: none;
    font-weight: 600;
    width: auto;
    max-width: 100%;
    margin: 0 auto;
    letter-spacing: normal; }
    @media screen and (min-width: 768px) {
      .front-page .intro h1 {
        font-size: 44px; } }
  .front-page .intro p {
    width: 100%;
    font-size: 22px; }
  .front-page .intro strong {
    font-weight: bold; }
  .front-page .intro .button a {
    margin-top: 20px; }

.front-page .headerboxes {
  display: flex;
  flex-wrap: wrap;
  padding: 40px 15px;
  background-color: #f4f2f3; }
  @media screen and (min-width: 768px) {
    .front-page .headerboxes {
      padding: 80px 15px; } }
  .front-page .headerboxes .headerbox {
    margin: 40px auto; }
  .front-page .headerboxes .headerbox-inner {
    padding: 0;
    height: 100%; }
  .front-page .headerboxes h2 {
    font-size: 30px;
    font-weight: 600;
    text-transform: none; }
    .front-page .headerboxes h2 .anchorjs-link {
      display: none; }
  .front-page .headerboxes p {
    font-size: 16px;
    font-weight: 600; }
  .front-page .headerboxes .icon {
    margin: 0; }


.sideaffix {
  overflow: auto; }
  .sideaffix .affix ul > li.active > ul, .sideaffix .affix ul > li.active > a:before, .sideaffix .affix ul > li > a:hover:before {
    white-space: normal; }
  .sideaffix .contribution-link {
    font-size: 16px !important; }
  .sideaffix #affix {
    font-size: 16px;
    font-weight: 600;
    line-height: 1.5;
    height: auto; }
    .sideaffix #affix a {
      color: #242424; }
    .sideaffix #affix ul > li.active > a {
      font-weight: bold; }
      .sideaffix #affix ul > li.active > a:before {
        color: #242424; }
      .sideaffix #affix ul > li.active > a ul > li.active > a {
        font-weight: bold; }
        .sideaffix #affix ul > li.active > a ul > li.active > a:before {
          color: #242424; }
    .sideaffix #affix ul ul > li > a:before {
      top: 2px; }
    .sideaffix #affix li:last-child {
      padding-bottom: 16px;
      margin-bottom: 0; }
    .sideaffix #affix .title {
      text-transform: none;
      font-size: 20px; }
    .sideaffix #affix .level1::before {
      width: 75%;
      border-top: 1px solid #c4c4c4; }
    .sideaffix #affix .level1::after {
      width: 75%;
      border-top: 1px solid #c4c4c4; }

.alert {
  background-color: transparent;
  border-color: #c4c4c4;
  color: #242424;
  padding: 16px 16px;
  transition: transform .2s; }

.alert-hover:hover {
  transform: scale(1.05);
  border-color: #159bff;
  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.2); }
  .alert-hover:hover h4 {
    color: #159bff; }


/**
 * General notes:
 * This file is modifying the elementor menu as simply as it can. The selector are a bit hard to
 * understand because we cannot add class or ids on the menu.
 *
 * This is a modified version of the css in the header.scss file from the main website.
 * It was modified as little as possible, but they are quite different.
 *
 * Pixel are preferred as unit since the body font size is not the same as the website.
 * This causes relative units (em, rem) to behave differently.
 */
@media (min-width: 980px) {
  .visibility-opacity-transition, #header-container nav > ul > li.has-children > ul, #header-container nav > ul > li.has-children > ul ul {
    visibility: hidden;
    list-style: none;
    transition: visibility 100ms, opacity 100ms ease-in-out;
    opacity: 0; } }

#header-container {
  display: flex;
  position: fixed;
  background: #fff;
  width: 100%;
  min-height: 75px;
  padding: 16px 32px;
  border-bottom: 1px solid #f4f2f3;
  justify-content: space-between;
  z-index: 9999; }
  #header-container::after, #header-container::before {
    content: none; }
  #header-container #menu-menu-principal {
    float: right;
    list-style: none; }
    @media (max-width: 1023.98px) {
      #header-container #menu-menu-principal {
        width: 100%; } }
    @media (min-width: 980px) {
      #header-container #menu-menu-principal {
        display: flex; } }
  #header-container #header-logo-container {
    width: 36px;
    vertical-align: middle; }
    #header-container #header-logo-container img {
      width: 100%; }
    @media (min-width: 980px) {
      #header-container #header-logo-container {
        width: 120px; } }
  #header-container .navbar-toggle {
    padding: 0;
    margin: 10px 0;
    display: none !important; }
    #header-container .navbar-toggle .icon-bar {
      background: #242424;
      width: 20px; }
    #header-container .navbar-toggle .icon-bar + .icon-bar {
      margin-top: 3px; }
    @media (max-width: 979px) {
      #header-container .navbar-toggle {
        display: block !important; } }
  #header-container .navbar-brand {
    height: auto; }
  #header-container nav {
    /**
     * Top level menu items
     */ }
    #header-container nav a {
      padding: 10px;
      font-size: 16px;
      font-weight: 600;
      font-stretch: normal;
      font-style: normal;
      line-height: 16px;
      letter-spacing: normal;
      text-transform: uppercase;
      color: #242424; }
      #header-container nav a:hover, #header-container nav a:focus {
        border-radius: 4px;
        background-color: rgba(103, 229, 173, 0.2); }
    #header-container nav > ul > li {
      margin: 0 16px;
      align-self: center;
      /**
       * has-children means there is a submenu
       */
      /**
       * row-menu : the row menu class puts the first element of the menu in a row
       *            instead of a column (default). This makes it possible to have
       *            multiple columns side by side by add the row-menu class in wordpress.
       */ }
      #header-container nav > ul > li.has-children {
        position: relative; }
        #header-container nav > ul > li.has-children > ul {
          width: inherit; }
          @media (min-width: 980px) {
            #header-container nav > ul > li.has-children > ul {
              display: flex;
              position: absolute;
              padding: 24px 48px;
              top: 170% !important;
              left: -100% !important;
              flex-direction: column;
              border-radius: 4px;
              box-shadow: 0 0 20px 2px rgba(36, 36, 36, 0.2);
              background-color: #fff; } }
          #header-container nav > ul > li.has-children > ul li {
            display: flex; }
          #header-container nav > ul > li.has-children > ul a {
            font-size: 14px;
            font-weight: 400;
            line-height: 20px;
            text-transform: none;
            transition: 0s; }
          #header-container nav > ul > li.has-children > ul .column-title {
            flex-direction: column; }
            #header-container nav > ul > li.has-children > ul .column-title > a {
              cursor: default;
              font-weight: 700;
              line-height: normal !important;
              color: #242424; }
              #header-container nav > ul > li.has-children > ul .column-title > a:hover, #header-container nav > ul > li.has-children > ul .column-title > a:focus {
                background-color: transparent; }
            #header-container nav > ul > li.has-children > ul .column-title ul {
              width: 192px;
              padding: 0; }
          #header-container nav > ul > li.has-children > ul ul {
            display: flex;
            position: inherit;
            flex-direction: column; }
            #header-container nav > ul > li.has-children > ul ul a {
              border-left: 0; }
        #header-container nav > ul > li.has-children:hover > ul {
          visibility: visible;
          opacity: 1;
          /**
           * This selector makes sure the submenu of a submenu appears under it
           * instead of on hover. This is to displays submenus as columns.
           */ }
          #header-container nav > ul > li.has-children:hover > ul:not([style*="display: none;"]) .has-children ul {
            visibility: visible;
            opacity: 1; }
      #header-container nav > ul > li.row-menu > ul {
        flex-direction: row; }
  #header-container .get-started-btn a {
    display: block;
    border: none;
    border-radius: 8px;
    margin-left: 0;
    padding: 8px 32px;
    font-size: 16px;
    font-weight: 700;
    min-width: 125px;
    text-align: center;
    text-transform: none;
    color: #242424;
    background-color: #67e5ad;
    background: linear-gradient(to top, #159bff 50%, #67e5ad 50%);
    background-size: 100% 200%;
    background-position: left top;
    transition: all 0.5s cubic-bezier(0.69, 0.04, 0.9, 0.65); }
    #header-container .get-started-btn a:hover {
      color: #fff;
      background-position: bottom left; }

@media (max-width: 979px) {
  #navbar {
    overflow: auto !important;
    position: fixed;
    width: 100%;
    margin: 0;
    padding: 0;
    top: 75px;
    left: 0;
    text-align: left;
    background: #fff; }
    #navbar.collapse {
      display: none !important; }
    #navbar.collapse.in {
      display: block !important; }
    #navbar .menu {
      display: block;
      margin: 0;
      padding: 0 0 10px 0; }
      #navbar .menu li {
        display: block;
        padding: 0; }
        #navbar .menu li.has-children {
          position: relative; }
          #navbar .menu li.has-children ul {
            position: relative;
            max-height: 0;
            padding: 0;
            overflow: hidden;
            transition: all .5s ease; }
          #navbar .menu li.has-children.open ul {
            max-height: 1500px; }
      #navbar .menu a {
        display: block;
        padding: 10px 25px;
        line-height: 1.4;
        font-weight: 700; } }

.subnav {
  position: fixed;
  top: 75px;
  width: 100%;
  z-index: 999;
  background-color: #f8f8f8; }

:root {
  --docsearch-primary-color: #159bff !important;
  --docsearch-logo-color: #159bff !important; }

.sidefilter {
  background-color: transparent;
  height: 60px;
  padding: 10px; }
  .sidefilter .DocSearch-Button {
    background: transparent;
    border: 2px inset #242424;
    border-radius: 6px;
    margin: 0;
    min-height: 45px;
    padding: 10px;
    width: 100%; }
  .sidefilter .DocSearch-Button:active, .sidefilter .DocSearch-Button:focus, .sidefilter .DocSearch-Button:hover {
    border: 2px solid #159bff;
    box-shadow: none; }
  .sidefilter .DocSearch-Button .DocSearch-Search-Icon {
    display: none; }
  .sidefilter .DocSearch-Button-Placeholder {
    color: #757575;
    font-family: "Open Sans", sans-serif;
    font-size: 14px;
    line-height: 20px;
    padding: 10px;
    display: block; }

.DocSearch.DocSearch-Container {
  z-index: 9999; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
