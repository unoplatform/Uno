parameters:
  poolName: ''
  artifactsToDownload:
    - "NugetPackages-Artifacts-generic"
    - "NugetPackages-Artifacts-netcoremobile"
    - "NugetPackages-Artifacts-reference"
    - "NugetPackages-Artifacts-skia"
    - "NugetPackages-Artifacts-wasm"
    
jobs:
- job: Generate_Packages
  displayName: 'Pack NuGet'

  dependsOn:
  - generic_win_build
  - netcoremobile_win_build
  - skia_package_build
  - wasm_package_build
  - reference_package_build

  pool: ${{ parameters.poolName }}

  strategy:
    matrix:
      UWP:
        UNO_UWP_BUILD: true
        XAML_FLAVOR_BUILD: UWP 

      WinUI:
        UNO_UWP_BUILD: false
        XAML_FLAVOR_BUILD: WinUI 

  variables:
    CombinedConfiguration: Release|Any CPU
    CI_Build: true

    # Disable .NET 5 build on CI for package generation
    # Build validation is performed on other jobs
    UnoUIDisableNet7Build: true

    # This is required to be able to use hard links as much as possible
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget

  steps:
  - checkout: self
    clean: true

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  - template: templates/download-winui-converted-tree.yml

  - template: templates/gitversion.yml

  - ${{ each artifact in parameters.artifactsToDownload }}:
      - task: DownloadBuildArtifacts@0
        displayName: Download build artifact ${{ artifact }}
        inputs:
          artifactName: ${{ artifact }}
          downloadPath: '$(Agent.WorkFolder)' 

  - task: ExtractFiles@1
    displayName: Restore binaries structure
    inputs:
      archiveFilePatterns: '$(Agent.WorkFolder)/NugetPackages-Artifacts*/*-bin-$(XAML_FLAVOR_BUILD).zip' 
      destinationFolder: $(build.sourcesdirectory)
      cleanDestinationFolder: false
      overwriteExistingFiles: true

  - task: MSBuild@1
    inputs:
      solution: Build/Uno.UI.Build.csproj
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r /m /v:m /t:GeneratePackages "/p:CombinedConfiguration=$(CombinedConfiguration)" /detailedsummary /bl:$(build.artifactstagingdirectory)/build-$(GitVersion.FullSemVer)-generate-packages.binlog
      clean: false
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: CopyFiles@2
    displayName: Copy built packages
    condition: always()
    inputs:
      SourceFolder: $(build.sourcesdirectory)/Build
      Contents: '*.nupkg'
      TargetFolder: $(build.artifactstagingdirectory)/vslatest
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: CopyFiles@2
    displayName: Copy generic build packages
    condition: always()
    inputs:
      SourceFolder: $(Agent.WorkFolder)/
      Contents: |
        NugetPackages-Artifacts*/vslatest*/*.nupkg
        NugetPackages-Artifacts*/vslatest*/*.vsix
      TargetFolder: $(build.artifactstagingdirectory)/vslatest
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: true

  - task: PowerShell@2
    displayName: Authenticode Sign Packages
    inputs:
      filePath: build/Sign-Package.ps1
    env:
      SignClientUser: $(SignClientUser)
      SignClientSecret: $(SignClientSecret)
      SignPackageName: "Uno Platform"
      SignPackageDescription: "The Uno Platform"
      ArtifactDirectory: $(build.artifactstagingdirectory)/vslatest
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

  - task: PublishBuildArtifacts@1
    condition: always()
    retryCountOnTaskFailure: 3
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: NugetPackages
      ArtifactType: Container
