parameters:
  vmImage: ''
  xCodeRootTest: ''
  XamarinSDKVersionTest: ''
  xCodeRootBuild: ''
  XamarinSDKVersionBuild: ''

  # Align with SnapShotTestGenerator.GroupCount
  SNAPSHOT_GROUPS:
  - key: '00'
    value: '01'
  - key: '01'
    value: '02'
  - key: '02'
    value: '03'
  - key: '03'
    value: '04'
  - key: '04'
    value: '05'

jobs:
- job: iOS_Build
  displayName: 'Build iOS Samples App UI Tests'

  dependsOn: Pipeline_Validations

  pool:
    vmImage: ${{ parameters.vmImage }}

  variables:
    CI_Build: true
    SourceLinkEnabled: falses
    NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages

  steps:
  - checkout: self
    clean: true

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  - template: templates/dotnet-install.yml
  - template: templates/optimize-roslyn-mono.yml

  - template: templates/ios-build-select-version.yml
    parameters:
      xCodeRoot: ${{ parameters.xCodeRootBuild }}
      XamarinSDKVersion: ${{ parameters.XamarinSDKVersionBuild }}

  - bash: |
      $(build.sourcesdirectory)/build/test-scripts/ios-uitest-build.sh

    displayName: Build iOS App for UI Tests

    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/SamplesApp/SamplesApp.iOS/bin/iPhoneSimulator/Release/SamplesApp.app
      Contents: '**'
      TargetFolder: $(build.artifactstagingdirectory)/SamplesApp.app
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    retryCountOnTaskFailure: 3
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: ios-uitest-build
      ArtifactType: Container

- template: .azure-devops-ios-tests-run.yml
  parameters:
    nugetPackages: $(NUGET_PACKAGES)
    JobName: 'iOS_Automated_Tests_Group_01'
    JobDisplayName: 'iOS Automated Tests Group 01'
    JobTimeoutInMinutes: 90
    vmImage: ${{ parameters.vmImageTest }}
    UITEST_SNAPSHOTS_ONLY: false
    UITEST_AUTOMATED_GROUP: 1
    UITEST_TEST_TIMEOUT: '270000'
    UITEST_ALLOW_RERUN: 'true'
    xCodeRoot: ${{ parameters.xCodeRootTest }}
    XamarinSDKVersion: ${{ parameters.XamarinSDKVersionTest }}

- template: .azure-devops-ios-tests-run.yml
  parameters:
    nugetPackages: $(NUGET_PACKAGES)
    JobName: 'iOS_Automated_Tests_Group_02'
    JobDisplayName: 'iOS Automated Tests Group 02'
    JobTimeoutInMinutes: 90
    vmImage: ${{ parameters.vmImageTest }}
    UITEST_SNAPSHOTS_ONLY: false
    UITEST_AUTOMATED_GROUP: 2
    UITEST_TEST_TIMEOUT: '270000'
    UITEST_ALLOW_RERUN: 'true'
    xCodeRoot: ${{ parameters.xCodeRootTest }}
    XamarinSDKVersion: ${{ parameters.XamarinSDKVersionTest }}

- template: .azure-devops-ios-tests-run.yml
  parameters:
    nugetPackages: $(NUGET_PACKAGES)
    JobName: 'iOS_Automated_Tests_Group_03'
    JobDisplayName: 'iOS Automated Tests Group 03'
    JobTimeoutInMinutes: 90
    vmImage: ${{ parameters.vmImageTest }}
    UITEST_SNAPSHOTS_ONLY: false
    UITEST_AUTOMATED_GROUP: 3
    UITEST_TEST_TIMEOUT: '270000'
    UITEST_ALLOW_RERUN: 'true'
    xCodeRoot: ${{ parameters.xCodeRootTest }}
    XamarinSDKVersion: ${{ parameters.XamarinSDKVersionTest }}

##
## Runtime tests
##
- template: .azure-devops-ios-tests-run.yml
  parameters:
    nugetPackages: $(NUGET_PACKAGES)
    JobName: 'iOS_Automated_Tests_Runtime_Tests_group_0'
    JobDisplayName: 'iOS Automated Runtime Tests Group 0'
    JobTimeoutInMinutes: 60
    vmImage: ${{ parameters.vmImageTest }}
    UITEST_SNAPSHOTS_ONLY: false
    UITEST_TEST_TIMEOUT: '3600000'
    UITEST_AUTOMATED_GROUP: 4
    UITEST_RUNTIME_TEST_GROUP: 0
    UITEST_RUNTIME_TEST_GROUP_COUNT: 3
    UITEST_ALLOW_RERUN: 'false'
    xCodeRoot: ${{ parameters.xCodeRootTest }}
    XamarinSDKVersion: ${{ parameters.XamarinSDKVersionTest }}

- template: .azure-devops-ios-tests-run.yml
  parameters:
    nugetPackages: $(NUGET_PACKAGES)
    JobName: 'iOS_Automated_Tests_Runtime_Tests_group_1'
    JobDisplayName: 'iOS Automated Runtime Tests Group 1'
    JobTimeoutInMinutes: 60
    vmImage: ${{ parameters.vmImageTest }}
    UITEST_SNAPSHOTS_ONLY: false
    UITEST_TEST_TIMEOUT: '3600000'
    UITEST_AUTOMATED_GROUP: 4
    UITEST_RUNTIME_TEST_GROUP: 1
    UITEST_RUNTIME_TEST_GROUP_COUNT: 3
    UITEST_ALLOW_RERUN: 'false'
    xCodeRoot: ${{ parameters.xCodeRootTest }}
    XamarinSDKVersion: ${{ parameters.XamarinSDKVersionTest }}

- template: .azure-devops-ios-tests-run.yml
  parameters:
    nugetPackages: $(NUGET_PACKAGES)
    JobName: 'iOS_Automated_Tests_Runtime_Tests_group_2'
    JobDisplayName: 'iOS Automated Runtime Tests Group 2'
    JobTimeoutInMinutes: 60
    vmImage: ${{ parameters.vmImageTest }}
    UITEST_SNAPSHOTS_ONLY: false
    UITEST_TEST_TIMEOUT: '3600000'
    UITEST_AUTOMATED_GROUP: 4
    UITEST_RUNTIME_TEST_GROUP: 2
    UITEST_RUNTIME_TEST_GROUP_COUNT: 3
    UITEST_ALLOW_RERUN: 'false'
    xCodeRoot: ${{ parameters.xCodeRootTest }}
    XamarinSDKVersion: ${{ parameters.XamarinSDKVersionTest }}

# Disabled for benchmkarks timeout
# - template: .azure-devops-ios-tests-run.yml
#   parameters:
#     nugetPackages: $(NUGET_PACKAGES)
#     JobName: 'iOS_Automated_Tests_Benchmarks'
#     JobDisplayName: 'iOS Automated Benchmarks'
#     JobTimeoutInMinutes: 40
#     vmImage: ${{ parameters.vmImageTest }}
#     UITEST_SNAPSHOTS_ONLY: false
#     UITEST_AUTOMATED_GROUP: Benchmarks
#     xCodeRoot: ${{ parameters.xCodeRootTest }}
#     XamarinSDKVersion: ${{ parameters.XamarinSDKVersionTest }}

- ${{ each snapshotGroup in parameters.SNAPSHOT_GROUPS }}:
  - template: .azure-devops-ios-tests-run.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)
      JobName: 'iOS_Snapshot_Tests_Group_${{ snapshotGroup.value }}'
      JobDisplayName: 'iOS Snapshot Tests Group ${{ snapshotGroup.value }}'
      JobTimeoutInMinutes: 45
      vmImage: ${{ parameters.vmImageTest }}
      UITEST_SNAPSHOTS_ONLY: true
      UITEST_SNAPSHOTS_GROUP: ${{ snapshotGroup.key }}
      UITEST_TEST_TIMEOUT: '270000'
      UITEST_ALLOW_RERUN: 'true'
      xCodeRoot: ${{ parameters.xCodeRootTest }}
      XamarinSDKVersion: ${{ parameters.XamarinSDKVersionTest }}
