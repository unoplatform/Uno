parameters:
  vmMacOSImage: ''
  vmWindowsImage: ''
  xCodeRoot: ''
  XamarinSDKVersion: ''

jobs:

- job: Android_Build_Net6_For_Tests
  displayName: 'Android UI Tests (Net6 Build)'

  pool:
    vmImage: ${{ parameters.vmMacOSImage }}

  dependsOn: Pipeline_Validations

  variables:
    CI_Build: true
    SourceLinkEnabled: false
    NUGET_PACKAGES: $(Agent.WorkFolder)/.nuget

  steps:
  - checkout: self
    clean: true

  - template: templates/dotnet6-install-mac.yml

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  - bash: |
      cd $(build.sourcesdirectory)/src/SamplesApp/SamplesApp.net6mobile
      dotnet publish -f net6.0-android -c Release
    displayName: Build Android samples app

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/SamplesApp/SamplesApp.net6mobile/bin/Release/net6.0-android/publish
      Contents: 'uno.platform.unosampleapp-Signed.apk'
      TargetFolder: $(build.artifactstagingdirectory)/android
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uitests-android-net6-build
      ArtifactType: Container

- job: Android_Build_For_Tests
  displayName: 'Android UI Tests (Build)'

  pool:
    vmImage: ${{ parameters.vmMacOSImage }}

  dependsOn: Pipeline_Validations

  variables:
    CI_Build: true
    SourceLinkEnabled: false
    NUGET_PACKAGES: $(Agent.WorkFolder)/.nuget
    VS_MSBUILD: '/Applications/Visual Studio.app/Contents/Resources/lib/monodevelop/bin/MSBuild/Current/bin/msbuild.dll'

  steps:
  - checkout: self
    clean: true

  - template: templates/dotnet-install.yml
  - template: templates/jdk-setup.yml

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  - script: |
      mono '$(VS_MSBUILD)' '$(build.sourcesdirectory)/src/SamplesApp/SamplesApp.Droid/SamplesApp.Droid.csproj' /m /r /p:Configuration=Release /p:IsUiAutomationMappingEnabled=true /p:AndroidBuildApplicationPackage=True /p:AndroidUseLatestPlatformSdk=true /bl:$(build.artifactstagingdirectory)/android-sampleapp.binlog
    displayName: Build Android App


  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/SamplesApp/SamplesApp.Droid/bin/Release/
      Contents: 'uno.platform.unosampleapp-Signed.apk'
      TargetFolder: $(build.artifactstagingdirectory)/android
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uitests-android-build
      ArtifactType: Container

- job: Android_Tests
  displayName: 'Android UI Tests (Run)'
  dependsOn:
  - Android_Build_For_Tests
  - Android_Build_Net6_For_Tests
  - SamplesApp_UITests_Build

  timeoutInMinutes: 120
  variables:
    CI_Build: true
    SourceLinkEnabled: false
    NUGET_PACKAGES: $(Agent.WorkFolder)/.nuget

  pool:
    vmImage: ${{ parameters.vmMacOSImage }}

  strategy:
    matrix:
      # Most tests pass, will be enabled in a later PR
      #Android_5.0:
      #  ANDROID_SIMULATOR_APILEVEL: 21
      #  UITEST_TEST_MODE_NAME: Automated

      Android_9.0_Group_01:
        ANDROID_SIMULATOR_APILEVEL: 28
        UITEST_TEST_MODE_NAME: Automated
        UNO_UITEST_BUCKET_ID: 1 ## Note: Align with UNO_UITEST_BUCKET_COUNT
        SAMPLEAPP_ARTIFACT_NAME: uitests-android-build
        TARGETPLATFORM_NAME: xamarin
        FAILBUILD_ON_FAILURE: true
        ALLOW_RERUN: true

      Android_9.0_Group_02:
        ANDROID_SIMULATOR_APILEVEL: 28
        UITEST_TEST_MODE_NAME: Automated
        UNO_UITEST_BUCKET_ID: 2 ## Note: Align with UNO_UITEST_BUCKET_COUNT
        SAMPLEAPP_ARTIFACT_NAME: uitests-android-build
        TARGETPLATFORM_NAME: xamarin
        FAILBUILD_ON_FAILURE: true
        ALLOW_RERUN: true

      Android_9.0_Group_03:
        ANDROID_SIMULATOR_APILEVEL: 28
        UITEST_TEST_MODE_NAME: Automated
        UNO_UITEST_BUCKET_ID: 3 ## Note: Align with UNO_UITEST_BUCKET_COUNT
        SAMPLEAPP_ARTIFACT_NAME: uitests-android-build
        TARGETPLATFORM_NAME: xamarin
        FAILBUILD_ON_FAILURE: true
        ALLOW_RERUN: true

      Android_9.0_Snapshots:
        ANDROID_SIMULATOR_APILEVEL: 28
        UITEST_TEST_MODE_NAME: Snapshots
        UNO_UITEST_BUCKET_ID: Snapshots
        SAMPLEAPP_ARTIFACT_NAME: uitests-android-build
        TARGETPLATFORM_NAME: xamarin
        FAILBUILD_ON_FAILURE: true
        ALLOW_RERUN: true

      Android_9.0_RuntimeTests:
        ANDROID_SIMULATOR_APILEVEL: 28
        UITEST_TEST_MODE_NAME: RuntimeTests
        UNO_UITEST_BUCKET_ID: RuntimeTests
        SAMPLEAPP_ARTIFACT_NAME: uitests-android-build
        TARGETPLATFORM_NAME: xamarin
        FAILBUILD_ON_FAILURE: true
        ALLOW_RERUN: false

      Android_9.0_RuntimeTests_Net6:
        ANDROID_SIMULATOR_APILEVEL: 28
        UITEST_TEST_MODE_NAME: RuntimeTests
        UNO_UITEST_BUCKET_ID: RuntimeTests
        SAMPLEAPP_ARTIFACT_NAME: uitests-android-net6-build
        TARGETPLATFORM_NAME: net6
        ALLOW_RERUN: false
        FAILBUILD_ON_FAILURE: false # false until https://github.com/unoplatform/uno/issues/5873 and https://github.com/dotnet/runtime/pull/55681 are released 

      # Android 10 testing is disabled because of https://github.com/microsoft/appcenter/issues/1451
      # Android_10.0:
      #   ANDROID_SIMULATOR_APILEVEL: 29
      #   UITEST_TEST_MODE_NAME: Automated

  steps:
  - checkout: self
    clean: true

  - task: DownloadBuildArtifacts@0
    inputs:
        artifactName: $(SAMPLEAPP_ARTIFACT_NAME)
        downloadPath: '$(build.sourcesdirectory)/build'

  - task: DownloadBuildArtifacts@0
    displayName: 'Download iOS SamplesApp UnitTests'
    inputs:
        artifactName: samplesapp-uitest-binaries
        downloadPath: '$(build.sourcesdirectory)/build'

  - task: DownloadBuildArtifacts@0
    condition: gt(variables['System.JobAttempt'], 1)
    continueOnError: true
    displayName: Download previous test runs failed tests
    inputs:
        artifactName: uitests-failure-results
        downloadPath: '$(build.sourcesdirectory)/build'

  - template: templates/optimize-roslyn-mono.yml

  - template: templates/dotnet-install.yml

  - template: templates/ios-build-select-version.yml
    parameters:
      xCodeRoot: ${{ parameters.xCodeRoot }}
      XamarinSDKVersion: ${{ parameters.XamarinSDKVersion }}

  ## First tests run (https://github.com/unoplatform/uno/issues/6714)
  - bash: |
      $(build.sourcesdirectory)/build/android-uitest-run.sh

    displayName: Run Android Tests

    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"
      ANDROID_SIMULATOR_APILEVEL: $(ANDROID_SIMULATOR_APILEVEL)
      UITEST_TEST_MODE_NAME: "$(UITEST_TEST_MODE_NAME)"
      UNO_UITEST_BUCKET_ID: "$(UNO_UITEST_BUCKET_ID)"
      SAMPLEAPP_ARTIFACT_NAME: "$(SAMPLEAPP_ARTIFACT_NAME)"
      TARGETPLATFORM_NAME: "$(TARGETPLATFORM_NAME)"
 
  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunTitle: 'Android $(ANDROID_SIMULATOR_APILEVEL) $(UITEST_TEST_MODE_NAME)/$(UNO_UITEST_BUCKET_ID)/$(TARGETPLATFORM_NAME) Test Run'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/build/TestResult-original.xml'
      # don't fail on failed tests, second run will do it
      # see https://github.com/unoplatform/uno/issues/6714
      failTaskOnFailedTests: false

  ## Second tests run (https://github.com/unoplatform/uno/issues/6714)
  - bash: |
      $(build.sourcesdirectory)/build/android-uitest-run.sh

    displayName: Run Android Tests
    condition: eq(variables.ALLOW_RERUN, 'true')

    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"
      ANDROID_SIMULATOR_APILEVEL: $(ANDROID_SIMULATOR_APILEVEL)
      UITEST_TEST_MODE_NAME: "$(UITEST_TEST_MODE_NAME)"
      UNO_UITEST_BUCKET_ID: "$(UNO_UITEST_BUCKET_ID)"
      SAMPLEAPP_ARTIFACT_NAME: "$(SAMPLEAPP_ARTIFACT_NAME)"
      TARGETPLATFORM_NAME: "$(TARGETPLATFORM_NAME)"
 
  - task: PublishTestResults@2
    condition: eq(variables.ALLOW_RERUN, 'true')
    inputs:
      testRunTitle: 'Android $(ANDROID_SIMULATOR_APILEVEL) $(UITEST_TEST_MODE_NAME)/$(UNO_UITEST_BUCKET_ID)/$(TARGETPLATFORM_NAME) Test ReRun'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/build/TestResult-original.xml'
      failTaskOnFailedTests: $(FAILBUILD_ON_FAILURE)
  ## end second run

  - task: PublishTestResults@2
    condition: always()
    inputs:
      testResultsFiles: '$(build.sourcesdirectory)/build/RuntimeTestResults*.xml'
      testRunTitle: 'Android $(ANDROID_SIMULATOR_APILEVEL) $(TARGETPLATFORM_NAME) Runtime Tests Run'
      testResultsFormat: 'NUnit'
      failTaskOnFailedTests: $(FAILBUILD_ON_FAILURE)

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uitests-results
      ArtifactType: Container

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.sourcesdirectory)/build/uitests-failure-results
      ArtifactName: uitests-failure-results
      ArtifactType: Container
