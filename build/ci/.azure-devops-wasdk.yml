parameters:
  vmImage: ''

jobs:
- job: WASDK_Build
  displayName: 'Build WinAppSDK Samples App'

  pool: ${{ parameters.poolName }}

  variables:
    CombinedConfiguration: Release|Any CPU
    CI_Build: true

    # Use pre-defined local nuget cache for restore
    NUGET_PACKAGES: 'C:\NugetPackages'

    # Only build for NetPrevious
    UnoDisableNetCurrentMobile: true
    UnoDisableNetCurrent: true

  steps:
  - checkout: self

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  - template: templates/gitversion.yml
  - template: templates/dotnet-install.yml

  # Required until Uno.Xaml can build without all targets enabled
  - template: templates/jdk-setup.yml

  - task: MSBuild@1
    inputs:
      solution: src\SamplesApp\SamplesApp.Windows\SamplesApp.Windows.csproj
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r /t:Publish /m /v:m /p:Configuration=Release /p:RuntimeIdentifier=win10-x64 /p:GenerateAppxPackageOnBuild=true /detailedsummary /bl:$(build.artifactstagingdirectory)/build-wasdk.binlog
      clean: false
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: CopyFiles@2
    condition: always()
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/SamplesApp/SamplesApp.Windows/bin/Release/net7.0-windows10.0.19041.0/win10-x64/AppPackages
      Contents: '**'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    retryCountOnTaskFailure: 3
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: WinAppSDK-Package
      ArtifactType: Container
