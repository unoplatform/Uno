parameters:
  vmImage: ''
  xCodeRoot: ''
  XamarinSDKVersion: ''

jobs:

- job: macOS_Tests_Build
  displayName: 'macOS Samples App Build'

  variables:
    CI_Build: true
    SourceLinkEnabled: false
    NUGET_PACKAGES: $(build.sourcesdirectory)/.nuget
    XCODE_ROOT: /Applications/Xcode_10.3.app
    
  dependsOn: Pipeline_Validations

  pool:
    vmImage: ${{ parameters.vmImage }}

  steps:
  - checkout: self
    clean: true
    
  - template: templates/dotnet-install.yml
  - template: templates/optimize-roslyn-mono.yml

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  - template: templates/ios-build-select-version.yml
    parameters:
      xCodeRoot: ${{ parameters.xCodeRoot }}
      XamarinSDKVersion: ${{ parameters.XamarinSDKVersion }}

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 4.7.0
      checkLatest: false

  - task: MSBuild@1
    inputs:
      solution: src/SamplesApp/SamplesApp.macOS/SamplesApp.macOS.csproj
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r /p:Configuration=Debug /p:EnableCodeSigning=false /p:UseHardenedRuntime=false /detailedsummary /bl:$(build.artifactstagingdirectory)/build-macos.binlog
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: CopyFiles@2
    displayName: 'Copy macOS artifacts'
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/SamplesApp/SamplesApp.macOS/bin/Debug
      Contents: '**/*.*'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-macos-artifacts
      ArtifactType: Container

##
## macOS
##

- job: macOS_Screenshot_Tests
  displayName: 'macOS Samples App Snapshot Tests'
  timeoutInMinutes: 60

  #pool: ${{ parameters.poolName }}
  pool:
    vmImage: ${{ parameters.vmImage }}

  dependsOn: macOS_Tests_Build

  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
        artifactName: uno-macos-artifacts
        downloadPath: '$(build.sourcesdirectory)/build'

  - bash: |
        cd $(build.sourcesdirectory)/build/uno-macos-artifacts
        chmod +x ./SamplesApp.macOS.app/Contents/MacOS/SamplesApp.macOS
        sudo spctl --master-disable
        sudo xattr -d -r com.apple.quarantine SamplesApp.macOS.app
        /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -f SamplesApp.macOS.app
        open -n ./SamplesApp.macOS.app --stderr out.txt --args --auto-screenshots=$(build.artifactstagingdirectory)/screenshots/macos-screenshots

    displayName: Run macOS UI Snapshot Tests

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uitests-results
      ArtifactType: Container

- job: macOS_Runtime_Tests_Build
  displayName: 'macOS Samples App Runtime Tests'
  timeoutInMinutes: 30

  #pool: ${{ parameters.poolName }}
  pool:
    vmImage: ${{ parameters.vmImage }}

  dependsOn: macOS_Tests_Build

  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
        artifactName: uno-macos-artifacts
        downloadPath: '$(build.sourcesdirectory)/build'

  - bash: |
        cd $(build.sourcesdirectory)/build/uno-macos-artifacts
        chmod +x ./SamplesApp.macOS.app/Contents/MacOS/SamplesApp.macOS
        sudo spctl --master-disable
        sudo xattr -d -r com.apple.quarantine SamplesApp.macOS.app
        open -n ./SamplesApp.macOS.app --stderr out.txt --args --runtime-tests


    displayName: Run macOS Runtime Tests

  - task: PublishTestResults@2
    condition: always()
    inputs:
      testRunTitle: 'macOS Runtime Tests'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/build/macos-runtime-tests-results.xml'
      failTaskOnFailedTests: true
