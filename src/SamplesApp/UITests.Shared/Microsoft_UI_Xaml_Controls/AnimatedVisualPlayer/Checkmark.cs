//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.1.240821.1+077322fa26
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile Checkmark.lottie
//       
//       Input file:
//           Checkmark.lottie (2345 bytes created 13:06+01:00 Jan 23 2025)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   202 |
// |--------------------------+-------|
// | Expression animators     |    17 |
// | KeyFrame animators       |    33 |
// | Reference parameters     |    17 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     1 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |    17 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |    12 |
// | ShapeVisuals             |    12 |
// |--------------------------+-------|
// | ContainerShapes          |     - |
// | CompositionSpriteShapes  |    13 |
// |--------------------------+-------|
// | Brushes                  |     3 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using Microsoft.UI.Xaml.Controls;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Foundation;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        Comp 1
    // Frame rate:  29.9700012207031 fps
    // Frame count: 45.0000018328876
    // Duration:    1501.5 mS
    sealed class Checkmark
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 1.502 seconds.
        internal const long c_durationTicks = 15015015;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new Checkmark_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 45.0000018328876;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 29.9700012207031;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(15015015);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 45.0000018328876;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

		public void Update(AnimatedVisualPlayer player) => throw new NotImplementedException();
		public void Load() => throw new NotImplementedException();
		public void Unload() => throw new NotImplementedException();
		public void Play(double fromProgress, double toProgress, bool looped) => throw new NotImplementedException();
		public void Stop() => throw new NotImplementedException();
		public void Pause() => throw new NotImplementedException();
		public void Resume() => throw new NotImplementedException();
		public void SetProgress(double progress) => throw new NotImplementedException();
		public Size Measure(Size availableSize) => throw new NotImplementedException();

		sealed class Checkmark_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 15015015;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CompositionColorBrush _animatedColorBrush_TransparentWhite_to_TransparentWhite;
            CompositionColorBrush _colorBrush_AlmostDodgerBlue_FF149BD6;
            CompositionEllipseGeometry _ellipse_0_0;
            CompositionEllipseGeometry _ellipse_0_1;
            CompositionEllipseGeometry _ellipse_0_2;
            CompositionEllipseGeometry _ellipse_0_3;
            CompositionPath _path;
            CompositionPathGeometry _pathGeometry_0;
            CompositionPathGeometry _pathGeometry_1;
            CompositionPathGeometry _pathGeometry_2;
            CompositionPathGeometry _pathGeometry_3;
            CompositionPathGeometry _pathGeometry_4;
            CompositionPathGeometry _pathGeometry_5;
            CompositionPathGeometry _pathGeometry_6;
            CompositionPathGeometry _pathGeometry_7;
            CompositionPathGeometry _pathGeometry_8;
            CompositionSpriteShape _spriteShape_06;
            CompositionSpriteShape _spriteShape_07;
            CompositionSpriteShape _spriteShape_08;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            CubicBezierEasingFunction _cubicBezierEasingFunction_4;
            CubicBezierEasingFunction _cubicBezierEasingFunction_5;
            InsetClip _insetClip_0;
            ScalarKeyFrameAnimation _opacityScalarAnimation_1_to_0p3_0;
            ScalarKeyFrameAnimation _opacityScalarAnimation_1_to_0p3_1;
            ScalarKeyFrameAnimation _tEndScalarAnimation_0_to_1_0;
            ScalarKeyFrameAnimation _tEndScalarAnimation_0_to_1_1;
            ScalarKeyFrameAnimation _tStartScalarAnimation_0_to_1_0;
            ScalarKeyFrameAnimation _tStartScalarAnimation_0_to_1_1;
            ShapeVisual _shapeVisual_01;
            ShapeVisual _shapeVisual_02;
            ShapeVisual _shapeVisual_03;
            ShapeVisual _shapeVisual_04;
            ShapeVisual _shapeVisual_08;
            ShapeVisual _shapeVisual_09;
            ShapeVisual _shapeVisual_10;
            ShapeVisual _shapeVisual_11;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation;
            Vector2KeyFrameAnimation _radiusVector2Animation_1;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InterpolationColorSpace = CompositionColorSpace.Rgb;
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:0.6959,0.6959, Offset:<236.888, 240.258>
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-76.4260025F, 37.9990005F));
                    builder.AddLine(new Vector2(12.0559998F, 114.073997F));
                    builder.AddLine(new Vector2(169.990997F, -68.6350021F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-230F, 4F));
                    builder.AddLine(new Vector2(214F, 4F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentWhite_to_TransparentWhite()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xFF, 0xFF, 0xFF), StepThenHoldEasingFunction());
                // Frame 24.
                // TransparentWhite
                result.InsertKeyFrame(0.533333302F, Color.FromArgb(0x00, 0xFF, 0xFF, 0xFF), HoldThenStepEasingFunction());
                // Frame 25.
                // White
                result.InsertKeyFrame(0.555555522F, Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF), CubicBezierEasingFunction_5());
                // Frame 29.
                // White
                result.InsertKeyFrame(0.644444406F, Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF), CubicBezierEasingFunction_5());
                // Frame 38.
                // TransparentWhite
                result.InsertKeyFrame(0.844444454F, Color.FromArgb(0x00, 0xFF, 0xFF, 0xFF), CubicBezierEasingFunction_5());
                return result;
            }

            CompositionColorBrush AnimatedColorBrush_TransparentWhite_to_TransparentWhite()
            {
                if (_animatedColorBrush_TransparentWhite_to_TransparentWhite != null) { return _animatedColorBrush_TransparentWhite_to_TransparentWhite; }
                var result = _animatedColorBrush_TransparentWhite_to_TransparentWhite = _c.CreateColorBrush();
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostDodgerBlue_FF149BD6()
            {
                return (_colorBrush_AlmostDodgerBlue_FF149BD6 == null)
                    ? _colorBrush_AlmostDodgerBlue_FF149BD6 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x14, 0x9B, 0xD6))
                    : _colorBrush_AlmostDodgerBlue_FF149BD6;
            }

            // - Layer aggregator
            // Scale:0.6959,0.6959, Offset:<236.888, 240.258>
            CompositionColorBrush ColorBrush_White()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
            }

            // - Layer aggregator
            // Scale:0.8,0.8, Offset:<256, 256>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_0_0()
            {
                if (_ellipse_0_0 != null) { return _ellipse_0_0; }
                var result = _ellipse_0_0 = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(0F, 0F);
                return result;
            }

            // - - PreComp layer: firefly
            // - Shape tree root for layer: Shape Layer 1
            // Offset:<256, 256>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_0_1()
            {
                if (_ellipse_0_1 != null) { return _ellipse_0_1; }
                var result = _ellipse_0_1 = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(0F, 0F);
                return result;
            }

            // - - PreComp layer: firefly
            // - Shape tree root for layer: Shape Layer 1
            // Offset:<256, 256>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_0_2()
            {
                if (_ellipse_0_2 != null) { return _ellipse_0_2; }
                var result = _ellipse_0_2 = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(0F, 0F);
                return result;
            }

            // - - PreComp layer: firefly
            // - Shape tree root for layer: Shape Layer 1
            // Offset:<256, 256>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_0_3()
            {
                if (_ellipse_0_3 != null) { return _ellipse_0_3; }
                var result = _ellipse_0_3 = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(0F, 0F);
                return result;
            }

            CompositionPath Path()
            {
                if (_path != null) { return _path; }
                var result = _path = new CompositionPath(Geometry_1());
                return result;
            }

            // - Layer aggregator
            // Scale:0.6959,0.6959, Offset:<236.888, 240.258>
            CompositionPathGeometry PathGeometry_0()
            {
                if (_pathGeometry_0 != null) { return _pathGeometry_0; }
                var result = _pathGeometry_0 = _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
                return result;
            }

            CompositionPathGeometry PathGeometry_1()
            {
                if (_pathGeometry_1 != null) { return _pathGeometry_1; }
                var result = _pathGeometry_1 = _c.CreatePathGeometry(Path());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_1, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_1);
                BindProperty(_pathGeometry_1, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_1);
                return result;
            }

            CompositionPathGeometry PathGeometry_2()
            {
                if (_pathGeometry_2 != null) { return _pathGeometry_2; }
                var result = _pathGeometry_2 = _c.CreatePathGeometry(Path());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_2, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_2);
                BindProperty(_pathGeometry_2, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_2);
                return result;
            }

            CompositionPathGeometry PathGeometry_3()
            {
                if (_pathGeometry_3 != null) { return _pathGeometry_3; }
                var result = _pathGeometry_3 = _c.CreatePathGeometry(Path());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_3, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_3);
                BindProperty(_pathGeometry_3, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_3);
                return result;
            }

            CompositionPathGeometry PathGeometry_4()
            {
                if (_pathGeometry_4 != null) { return _pathGeometry_4; }
                var result = _pathGeometry_4 = _c.CreatePathGeometry(Path());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_4, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_4);
                BindProperty(_pathGeometry_4, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_4);
                return result;
            }

            CompositionPathGeometry PathGeometry_5()
            {
                if (_pathGeometry_5 != null) { return _pathGeometry_5; }
                var result = _pathGeometry_5 = _c.CreatePathGeometry(Path());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_5, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_5);
                BindProperty(_pathGeometry_5, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_5);
                return result;
            }

            CompositionPathGeometry PathGeometry_6()
            {
                if (_pathGeometry_6 != null) { return _pathGeometry_6; }
                var result = _pathGeometry_6 = _c.CreatePathGeometry(Path());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_6, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_6);
                BindProperty(_pathGeometry_6, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_6);
                return result;
            }

            CompositionPathGeometry PathGeometry_7()
            {
                if (_pathGeometry_7 != null) { return _pathGeometry_7; }
                var result = _pathGeometry_7 = _c.CreatePathGeometry(Path());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_7, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_7);
                BindProperty(_pathGeometry_7, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_7);
                return result;
            }

            CompositionPathGeometry PathGeometry_8()
            {
                if (_pathGeometry_8 != null) { return _pathGeometry_8; }
                var result = _pathGeometry_8 = _c.CreatePathGeometry(Path());
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                BindProperty(_pathGeometry_8, "TrimStart", "Min(my.TStart,my.TEnd)", "my", _pathGeometry_8);
                BindProperty(_pathGeometry_8, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", _pathGeometry_8);
                return result;
            }

            // Layer aggregator
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<260.7936, 258.792>, Rotation:-0.011598425070025746 degrees,
                // Scale:<0.8, 0.8>
                var geometry = Ellipse_0_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.800000012F, 0F, 0F, 0.800000012F, 260.79361F, 258.791992F), ColorBrush_AlmostDodgerBlue_FF149BD6());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<232.0167, 247.9129>, Scale:<0.6959, 0.6959>
                var result = CreateSpriteShape(PathGeometry_0(), new Matrix3x2(0.695900023F, 0F, 0F, 0.695900023F, 232.016693F, 247.912903F));;
                result.StrokeBrush = ColorBrush_White();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 35F;
                return result;
            }

            // - PreComp layer: trait 2
            // Opacity for layer: Shape Layer 1
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<256, 256>
                var result = CreateSpriteShape(PathGeometry_1(), new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF149BD6();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 70F;
                return result;
            }

            // - PreComp layer: trait 2
            // Opacity for layer: Shape Layer 1
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<256, 256>
                var result = CreateSpriteShape(PathGeometry_2(), new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF149BD6();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 70F;
                return result;
            }

            // - PreComp layer: trait 2
            // Opacity for layer: Shape Layer 1
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<256, 256>
                var result = CreateSpriteShape(PathGeometry_3(), new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF149BD6();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 70F;
                return result;
            }

            // - PreComp layer: trait 2
            // Opacity for layer: Shape Layer 1
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<256, 256>
                var result = CreateSpriteShape(PathGeometry_4(), new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF149BD6();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 70F;
                return result;
            }

            // - PreComp layer: firefly
            // Shape tree root for layer: Shape Layer 1
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<256, 256>
                var geometry = Ellipse_0_1();
                if (_spriteShape_06 != null) { return _spriteShape_06; }
                var result = _spriteShape_06 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F), AnimatedColorBrush_TransparentWhite_to_TransparentWhite());;
                return result;
            }

            // - PreComp layer: firefly
            // Shape tree root for layer: Shape Layer 1
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<256, 256>
                var geometry = Ellipse_0_2();
                if (_spriteShape_07 != null) { return _spriteShape_07; }
                var result = _spriteShape_07 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F), AnimatedColorBrush_TransparentWhite_to_TransparentWhite());;
                return result;
            }

            // - PreComp layer: firefly
            // Shape tree root for layer: Shape Layer 1
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<256, 256>
                var geometry = Ellipse_0_3();
                if (_spriteShape_08 != null) { return _spriteShape_08; }
                var result = _spriteShape_08 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F), AnimatedColorBrush_TransparentWhite_to_TransparentWhite());;
                return result;
            }

            // - PreComp layer: trait
            // Opacity for layer: Shape Layer 1
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<256, 256>
                var result = CreateSpriteShape(PathGeometry_5(), new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF149BD6();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 70F;
                return result;
            }

            // - PreComp layer: trait
            // Opacity for layer: Shape Layer 1
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<256, 256>
                var result = CreateSpriteShape(PathGeometry_6(), new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF149BD6();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 70F;
                return result;
            }

            // - PreComp layer: trait
            // Opacity for layer: Shape Layer 1
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<256, 256>
                var result = CreateSpriteShape(PathGeometry_7(), new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF149BD6();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 70F;
                return result;
            }

            // - PreComp layer: trait
            // Opacity for layer: Shape Layer 1
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<256, 256>
                var result = CreateSpriteShape(PathGeometry_8(), new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F));;
                result.StrokeBrush = ColorBrush_AlmostDodgerBlue_FF149BD6();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 70F;
                return result;
            }

            // Transforms for trait 2 Scale(0.19512,0.19512,0),
            // RotationDegrees(-45.60599899291992), Offset(160.72198,-142.794,0)
            ContainerVisual ContainerVisual_00()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<346.08496, 113.953125>, Rotation:{X:0 Y:-0 Z:-0.38756385 W:0.9218429},
                // Scale:<0.19512, 0.19512>
                result.TransformMatrix = new Matrix4x4(0.136503726F, -0.139422208F, 0F, 0F, 0.139422208F, 0.136503726F, 0F, 0F, 0F, 0F, 0F, 0F, 346.084961F, 113.953125F, 0F, 1F);
                // Opacity for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_01());
                return result;
            }

            // Transforms for trait 2 Scale(0.19512,0.19512,0),
            // RotationDegrees(-135.2050018310547), Offset(-151.136,-144.29001,0)
            ContainerVisual ContainerVisual_01()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<105.116745, 182.3505>, Rotation:{X:0 Y:0 Z:0.92456263 W:-0.38103005},
                // Scale:<0.19511999, 0.19511999>
                result.TransformMatrix = new Matrix4x4(-0.138463438F, -0.137476146F, 0F, 0F, 0.137476146F, -0.138463438F, 0F, 0F, 0F, 0F, 0F, 0F, 105.116745F, 182.350494F, 0F, 1F);
                // Opacity for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_02());
                return result;
            }

            // Transforms for trait 2 Scale(-0.19512,0.19512,0),
            // RotationDegrees(-45.60599899291992), Offset(-150.465,146.59799,0)
            ContainerVisual ContainerVisual_02()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<104.78787, 331.96097>, Rotation:{X:0.38756385 Y:0.9218429 Z:0 W:0},
                // Scale:<0.19512, 0.19512>
                result.TransformMatrix = new Matrix4x4(-0.136503726F, 0.139422208F, 0F, 0F, 0.139422208F, 0.136503726F, 0F, 0F, 0F, 0F, 0F, 0F, 104.787872F, 331.960968F, 0F, 1F);
                // Opacity for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_03());
                return result;
            }

            // Transforms for trait 2 Scale(-0.19512,0.19512,0),
            // RotationDegrees(-135.2050018310547), Offset(154.86499,150.53,0)
            ContainerVisual ContainerVisual_03()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<340.22446, 406.7827>, Rotation:{X:0.92456263 Y:0.38103005 Z:0 W:0},
                // Scale:<0.19511999, 0.19511999>
                result.TransformMatrix = new Matrix4x4(0.138463438F, 0.137476146F, 0F, 0F, 0.137476146F, -0.138463438F, 0F, 0F, 0F, 0F, 0F, 0F, 340.224457F, 406.782715F, 0F, 1F);
                // Opacity for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_04());
                return result;
            }

            // Transforms for firefly Scale(0.3,0.3,0), RotationDegrees(-45.707000732421875),
            // Offset(140.89401,-105.039,0)
            ContainerVisual ContainerVisual_04()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<288.29068, 152.30118>, Rotation:{X:0 Y:-0 Z:-0.3883762 W:0.92150086},
                // Scale:<0.3, 0.3>
                result.TransformMatrix = new Matrix4x4(0.209498361F, -0.214733422F, 0F, 0F, 0.214733422F, 0.209498361F, 0F, 0F, 0F, 0F, 0F, 0F, 288.29068F, 152.301178F, 0F, 1F);
                // Shape tree root for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_05());
                return result;
            }

            // Transforms for firefly Scale(0.2,0.2,0), RotationDegrees(-72.47100067138672),
            // Offset(103.412994,-105.088,0)
            ContainerVisual ContainerVisual_05()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<295.16965, 184.31367>, Rotation:{X:0 Y:-0 Z:-0.5911056 W:0.8065942},
                // Scale:<0.2, 0.2>
                result.TransformMatrix = new Matrix4x4(0.060237702F, -0.190712929F, 0F, 0F, 0.190712929F, 0.060237702F, 0F, 0F, 0F, 0F, 0F, 0F, 295.169647F, 184.313675F, 0F, 1F);
                // Shape tree root for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_06());
                return result;
            }

            // Transforms for firefly Scale(0.2,0.2,0), RotationDegrees(-18.097000122070312),
            // Offset(144.63501,-66.29201,0)
            ContainerVisual ContainerVisual_06()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<336.0637, 156.94484>, Rotation:{X:0 Y:-0 Z:-0.15727048 W:0.98755556},
                // Scale:<0.2, 0.2>
                result.TransformMatrix = new Matrix4x4(0.190106407F, -0.0621253327F, 0F, 0F, 0.0621253327F, 0.190106407F, 0F, 0F, 0F, 0F, 0F, 0F, 336.06369F, 156.944839F, 0F, 1F);
                // Shape tree root for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_07());
                return result;
            }

            // Transforms for trait Scale(0.15,0.15,0), Offset(213.91,2.7919922,0)
            ContainerVisual ContainerVisual_07()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<431.51, 220.392>, Scale:<0.15, 0.15>
                result.TransformMatrix = new Matrix4x4(0.150000006F, 0F, 0F, 0F, 0F, 0.150000006F, 0F, 0F, 0F, 0F, 0F, 0F, 431.51001F, 220.391998F, 0F, 1F);
                // Opacity for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_08());
                return result;
            }

            // Transforms for trait Scale(0.15,0.15,0), RotationDegrees(-90),
            // Offset(10.321991,-211.685,0)
            ContainerVisual ContainerVisual_08()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<227.92198, 82.714966>, Rotation:{X:0 Y:0 Z:-0.70710677 W:0.70710677},
                // Scale:<0.15, 0.15>
                result.TransformMatrix = new Matrix4x4(-6.55670851E-09F, -0.150000006F, 0F, 0F, 0.150000006F, -6.55670851E-09F, 0F, 0F, 0F, 0F, 0F, 0F, 227.921982F, 82.7149658F, 0F, 1F);
                // Opacity for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_09());
                return result;
            }

            // Transforms for trait Scale(0.15,0.15,0), RotationDegrees(-180),
            // Offset(-204.35901,-2.725006,0)
            ContainerVisual ContainerVisual_09()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<90.040955, 291.67496>, Rotation:{X:0 Y:0 Z:1 W:4.371139E-08},
                // Scale:<0.15, 0.15>
                result.TransformMatrix = new Matrix4x4(-0.150000006F, 1.3113417E-08F, 0F, 0F, -1.3113417E-08F, -0.150000006F, 0F, 0F, 0F, 0F, 0F, 0F, 90.0409546F, 291.674957F, 0F, 1F);
                // Opacity for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_10());
                return result;
            }

            // Transforms for trait Scale(0.15,0.15,0), RotationDegrees(90),
            // Offset(7.334015,215.10901,0)
            ContainerVisual ContainerVisual_10()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(512F, 512F);
                // Offset:<301.73398, 432.70898>, Rotation:{X:0 Y:0 Z:0.70710677 W:0.70710677},
                // Scale:<0.15, 0.15>
                result.TransformMatrix = new Matrix4x4(-6.55670851E-09F, 0.150000006F, 0F, 0F, -0.150000006F, -6.55670851E-09F, 0F, 0F, 0F, 0F, 0F, 0F, 301.733978F, 432.708984F, 0F, 1F);
                // Opacity for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_11());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_00());
                // PreComp layer: trait 2
                children.InsertAtTop(ContainerVisual_00());
                // PreComp layer: trait 2
                children.InsertAtTop(ContainerVisual_01());
                // PreComp layer: trait 2
                children.InsertAtTop(ContainerVisual_02());
                // PreComp layer: trait 2
                children.InsertAtTop(ContainerVisual_03());
                // PreComp layer: firefly
                children.InsertAtTop(ContainerVisual_04());
                // PreComp layer: firefly
                children.InsertAtTop(ContainerVisual_05());
                // PreComp layer: firefly
                children.InsertAtTop(ContainerVisual_06());
                // PreComp layer: trait
                children.InsertAtTop(ContainerVisual_07());
                // PreComp layer: trait
                children.InsertAtTop(ContainerVisual_08());
                // PreComp layer: trait
                children.InsertAtTop(ContainerVisual_09());
                // PreComp layer: trait
                children.InsertAtTop(ContainerVisual_10());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.588F, 0F))
                    : _cubicBezierEasingFunction_0;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return (_cubicBezierEasingFunction_1 == null)
                    ? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.509000003F, 0.00300000003F), new Vector2(0.69599998F, 0.999000013F))
                    : _cubicBezierEasingFunction_1;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return (_cubicBezierEasingFunction_2 == null)
                    ? _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.456999987F, 0.063000001F), new Vector2(0.565999985F, 0.999000013F))
                    : _cubicBezierEasingFunction_2;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return (_cubicBezierEasingFunction_3 == null)
                    ? _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.572000027F, 0.555999994F))
                    : _cubicBezierEasingFunction_3;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_4()
            {
                return (_cubicBezierEasingFunction_4 == null)
                    ? _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction(new Vector2(0.640999973F, 0.0560000017F), new Vector2(0.833000004F, 0.833000004F))
                    : _cubicBezierEasingFunction_4;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_5()
            {
                return (_cubicBezierEasingFunction_5 == null)
                    ? _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F))
                    : _cubicBezierEasingFunction_5;
            }

            InsetClip InsetClip_0()
            {
                if (_insetClip_0 != null) { return _insetClip_0; }
                var result = _insetClip_0 = _c.CreateInsetClip();
                return result;
            }

            // Layer opacity animation
            ScalarKeyFrameAnimation OpacityScalarAnimation_1_to_0p3_0()
            {
                // Frame 0.
                if (_opacityScalarAnimation_1_to_0p3_0 != null) { return _opacityScalarAnimation_1_to_0p3_0; }
                var result = _opacityScalarAnimation_1_to_0p3_0 = CreateScalarKeyFrameAnimation(0F, 1F, StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.222222209F, 1F, HoldThenStepEasingFunction());
                // Frame 16.
                result.InsertKeyFrame(0.355555534F, 0.921540022F, CubicBezierEasingFunction_3());
                // Frame 20.
                result.InsertKeyFrame(0.444444448F, 0.300000012F, CubicBezierEasingFunction_4());
                return result;
            }

            // Layer opacity animation
            ScalarKeyFrameAnimation OpacityScalarAnimation_1_to_0p3_1()
            {
                // Frame 0.
                if (_opacityScalarAnimation_1_to_0p3_1 != null) { return _opacityScalarAnimation_1_to_0p3_1; }
                var result = _opacityScalarAnimation_1_to_0p3_1 = CreateScalarKeyFrameAnimation(0F, 1F, StepThenHoldEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.155555546F, 1F, HoldThenStepEasingFunction());
                // Frame 13.
                result.InsertKeyFrame(0.288888872F, 0.921540022F, CubicBezierEasingFunction_3());
                // Frame 17.
                result.InsertKeyFrame(0.377777785F, 0.300000012F, CubicBezierEasingFunction_4());
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0_to_1_0()
            {
                // Frame 0.
                if (_tEndScalarAnimation_0_to_1_0 != null) { return _tEndScalarAnimation_0_to_1_0; }
                var result = _tEndScalarAnimation_0_to_1_0 = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.222222209F, 0F, HoldThenStepEasingFunction());
                // Frame 19.
                result.InsertKeyFrame(0.422222227F, 1F, CubicBezierEasingFunction_2());
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0_to_1_1()
            {
                // Frame 0.
                if (_tEndScalarAnimation_0_to_1_1 != null) { return _tEndScalarAnimation_0_to_1_1; }
                var result = _tEndScalarAnimation_0_to_1_1 = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.155555546F, 0F, HoldThenStepEasingFunction());
                // Frame 16.
                result.InsertKeyFrame(0.355555564F, 1F, CubicBezierEasingFunction_2());
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.6959,0.6959, Offset:<236.888, 240.258>
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, HoldThenStepEasingFunction());
                // Frame 14.79.
                result.InsertKeyFrame(0.32868889F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.833000004F, 0F)));
                // Frame 19.79.
                result.InsertKeyFrame(0.439799994F, 0.319999993F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.0419999994F), new Vector2(0F, 0.97299999F)));
                // Frame 24.79.
                result.InsertKeyFrame(0.550916672F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.828000009F, 0.0109999999F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0_to_1_0()
            {
                // Frame 0.
                if (_tStartScalarAnimation_0_to_1_0 != null) { return _tStartScalarAnimation_0_to_1_0; }
                var result = _tStartScalarAnimation_0_to_1_0 = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.222222209F, 0F, HoldThenStepEasingFunction());
                // Frame 13.
                result.InsertKeyFrame(0.288888872F, 0F, CubicBezierEasingFunction_0());
                // Frame 19.
                result.InsertKeyFrame(0.422222227F, 1F, CubicBezierEasingFunction_1());
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0_to_1_1()
            {
                // Frame 0.
                if (_tStartScalarAnimation_0_to_1_1 != null) { return _tStartScalarAnimation_0_to_1_1; }
                var result = _tStartScalarAnimation_0_to_1_1 = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.155555546F, 0F, HoldThenStepEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.222222209F, 0F, CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.355555564F, 1F, CubicBezierEasingFunction_1());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_00()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                var shapes = result.Shapes;
                // Scale:0.8,0.8, Offset:<256, 256>
                shapes.Add(SpriteShape_00());
                // Scale:0.6959,0.6959, Offset:<236.888, 240.258>
                shapes.Add(SpriteShape_01());
                return result;
            }

            // PreComp layer: trait 2
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_01()
            {
                if (_shapeVisual_01 != null) { return _shapeVisual_01; }
                var result = _shapeVisual_01 = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_02());
                return result;
            }

            // PreComp layer: trait 2
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_02()
            {
                if (_shapeVisual_02 != null) { return _shapeVisual_02; }
                var result = _shapeVisual_02 = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_03());
                return result;
            }

            // PreComp layer: trait 2
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_03()
            {
                if (_shapeVisual_03 != null) { return _shapeVisual_03; }
                var result = _shapeVisual_03 = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_04());
                return result;
            }

            // PreComp layer: trait 2
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_04()
            {
                if (_shapeVisual_04 != null) { return _shapeVisual_04; }
                var result = _shapeVisual_04 = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_05());
                return result;
            }

            // PreComp layer: firefly
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_05()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_06());
                return result;
            }

            // PreComp layer: firefly
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_06()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_07());
                return result;
            }

            // PreComp layer: firefly
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_07()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_08());
                return result;
            }

            // PreComp layer: trait
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_08()
            {
                if (_shapeVisual_08 != null) { return _shapeVisual_08; }
                var result = _shapeVisual_08 = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_09());
                return result;
            }

            // PreComp layer: trait
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_09()
            {
                if (_shapeVisual_09 != null) { return _shapeVisual_09; }
                var result = _shapeVisual_09 = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_10());
                return result;
            }

            // PreComp layer: trait
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_10()
            {
                if (_shapeVisual_10 != null) { return _shapeVisual_10; }
                var result = _shapeVisual_10 = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_11());
                return result;
            }

            // PreComp layer: trait
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_11()
            {
                if (_shapeVisual_11 != null) { return _shapeVisual_11; }
                var result = _shapeVisual_11 = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_12());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation()
            {
                // Frame 0.
                if (_offsetVector2Animation != null) { return _offsetVector2Animation; }
                var result = _offsetVector2Animation = CreateVector2KeyFrameAnimation(0F, new Vector2(-181.074005F, -5.41400003F), StepThenHoldEasingFunction());
                // Frame 24.
                result.InsertKeyFrame(0.533333302F, new Vector2(-181.074005F, -5.41400003F), HoldThenStepEasingFunction());
                // Frame 38.
                result.InsertKeyFrame(0.844444454F, new Vector2(200F, -5.41400003F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 1F)));
                return result;
            }

            // - - Layer aggregator
            // -  Scale:0.8,0.8, Offset:<256, 256>
            // Ellipse Path 1.EllipseGeometry
            // Radius
            Vector2KeyFrameAnimation RadiusVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.155555546F, new Vector2(200.512497F, 200.512497F), _c.CreateCubicBezierEasingFunction(new Vector2(0.653999984F, 0.00700000022F), new Vector2(0.976000011F, 0.967999995F)));
                // Frame 12.
                result.InsertKeyFrame(0.266666651F, new Vector2(186.350006F, 186.350006F), _c.CreateCubicBezierEasingFunction(new Vector2(0.345999986F, 0F), new Vector2(0.467999995F, 1F)));
                // Frame 16.
                result.InsertKeyFrame(0.355555534F, new Vector2(200.512497F, 200.512497F), _c.CreateCubicBezierEasingFunction(new Vector2(0.363999993F, 0.0309999995F), new Vector2(0.375F, 1F)));
                // Frame 20.
                result.InsertKeyFrame(0.444444448F, new Vector2(200.512497F, 200.512497F), _c.CreateCubicBezierEasingFunction(new Vector2(0.326999992F, 0F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            // Radius
            Vector2KeyFrameAnimation RadiusVector2Animation_1()
            {
                // Frame 0.
                if (_radiusVector2Animation_1 != null) { return _radiusVector2Animation_1; }
                var result = _radiusVector2Animation_1 = CreateVector2KeyFrameAnimation(0F, new Vector2(20F, 20F), StepThenHoldEasingFunction());
                // Frame 24.
                result.InsertKeyFrame(0.533333302F, new Vector2(20F, 20F), HoldThenStepEasingFunction());
                // Frame 27.
                result.InsertKeyFrame(0.599999964F, new Vector2(45F, 45F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0F, 0.996999979F)));
                // Frame 38.
                result.InsertKeyFrame(0.844444454F, new Vector2(9.19699955F, 9.19699955F), _c.CreateCubicBezierEasingFunction(new Vector2(0.574000001F, 0F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            internal Checkmark_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(512F, 512F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _animatedColorBrush_TransparentWhite_to_TransparentWhite.StartAnimation("Color", ColorAnimation_TransparentWhite_to_TransparentWhite(), AnimationController_0());
                _ellipse_0_0.StartAnimation("Radius", RadiusVector2Animation_0(), AnimationController_0());
                _ellipse_0_1.StartAnimation("Radius", RadiusVector2Animation_1(), AnimationController_0());
                _ellipse_0_2.StartAnimation("Radius", RadiusVector2Animation_1(), AnimationController_0());
                _ellipse_0_3.StartAnimation("Radius", RadiusVector2Animation_1(), AnimationController_0());
                _pathGeometry_0.StartAnimation("TrimEnd", TrimEndScalarAnimation_0_to_1(), AnimationController_0());
                _pathGeometry_1.StartAnimation("TStart", TStartScalarAnimation_0_to_1_0(), AnimationController_0());
                _pathGeometry_1.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_0(), AnimationController_0());
                _pathGeometry_2.StartAnimation("TStart", TStartScalarAnimation_0_to_1_0(), AnimationController_0());
                _pathGeometry_2.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_0(), AnimationController_0());
                _pathGeometry_3.StartAnimation("TStart", TStartScalarAnimation_0_to_1_0(), AnimationController_0());
                _pathGeometry_3.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_0(), AnimationController_0());
                _pathGeometry_4.StartAnimation("TStart", TStartScalarAnimation_0_to_1_0(), AnimationController_0());
                _pathGeometry_4.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_0(), AnimationController_0());
                _pathGeometry_5.StartAnimation("TStart", TStartScalarAnimation_0_to_1_1(), AnimationController_0());
                _pathGeometry_5.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_1(), AnimationController_0());
                _pathGeometry_6.StartAnimation("TStart", TStartScalarAnimation_0_to_1_1(), AnimationController_0());
                _pathGeometry_6.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_1(), AnimationController_0());
                _pathGeometry_7.StartAnimation("TStart", TStartScalarAnimation_0_to_1_1(), AnimationController_0());
                _pathGeometry_7.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_1(), AnimationController_0());
                _pathGeometry_8.StartAnimation("TStart", TStartScalarAnimation_0_to_1_1(), AnimationController_0());
                _pathGeometry_8.StartAnimation("TEnd", TEndScalarAnimation_0_to_1_1(), AnimationController_0());
                _spriteShape_06.StartAnimation("Offset", OffsetVector2Animation(), AnimationController_0());
                _spriteShape_07.StartAnimation("Offset", OffsetVector2Animation(), AnimationController_0());
                _spriteShape_08.StartAnimation("Offset", OffsetVector2Animation(), AnimationController_0());
                _shapeVisual_01.StartAnimation("Opacity", OpacityScalarAnimation_1_to_0p3_0(), AnimationController_0());
                _shapeVisual_02.StartAnimation("Opacity", OpacityScalarAnimation_1_to_0p3_0(), AnimationController_0());
                _shapeVisual_03.StartAnimation("Opacity", OpacityScalarAnimation_1_to_0p3_0(), AnimationController_0());
                _shapeVisual_04.StartAnimation("Opacity", OpacityScalarAnimation_1_to_0p3_0(), AnimationController_0());
                _shapeVisual_08.StartAnimation("Opacity", OpacityScalarAnimation_1_to_0p3_1(), AnimationController_0());
                _shapeVisual_09.StartAnimation("Opacity", OpacityScalarAnimation_1_to_0p3_1(), AnimationController_0());
                _shapeVisual_10.StartAnimation("Opacity", OpacityScalarAnimation_1_to_0p3_1(), AnimationController_0());
                _shapeVisual_11.StartAnimation("Opacity", OpacityScalarAnimation_1_to_0p3_1(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _animatedColorBrush_TransparentWhite_to_TransparentWhite.StopAnimation("Color");
                _ellipse_0_0.StopAnimation("Radius");
                _ellipse_0_1.StopAnimation("Radius");
                _ellipse_0_2.StopAnimation("Radius");
                _ellipse_0_3.StopAnimation("Radius");
                _pathGeometry_0.StopAnimation("TrimEnd");
                _pathGeometry_1.StopAnimation("TStart");
                _pathGeometry_1.StopAnimation("TEnd");
                _pathGeometry_2.StopAnimation("TStart");
                _pathGeometry_2.StopAnimation("TEnd");
                _pathGeometry_3.StopAnimation("TStart");
                _pathGeometry_3.StopAnimation("TEnd");
                _pathGeometry_4.StopAnimation("TStart");
                _pathGeometry_4.StopAnimation("TEnd");
                _pathGeometry_5.StopAnimation("TStart");
                _pathGeometry_5.StopAnimation("TEnd");
                _pathGeometry_6.StopAnimation("TStart");
                _pathGeometry_6.StopAnimation("TEnd");
                _pathGeometry_7.StopAnimation("TStart");
                _pathGeometry_7.StopAnimation("TEnd");
                _pathGeometry_8.StopAnimation("TStart");
                _pathGeometry_8.StopAnimation("TEnd");
                _spriteShape_06.StopAnimation("Offset");
                _spriteShape_07.StopAnimation("Offset");
                _spriteShape_08.StopAnimation("Offset");
                _shapeVisual_01.StopAnimation("Opacity");
                _shapeVisual_02.StopAnimation("Opacity");
                _shapeVisual_03.StopAnimation("Opacity");
                _shapeVisual_04.StopAnimation("Opacity");
                _shapeVisual_08.StopAnimation("Opacity");
                _shapeVisual_09.StopAnimation("Opacity");
                _shapeVisual_10.StopAnimation("Opacity");
                _shapeVisual_11.StopAnimation("Opacity");
            }

        }
    }
}
