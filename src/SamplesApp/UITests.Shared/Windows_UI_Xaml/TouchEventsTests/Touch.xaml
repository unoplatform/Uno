<UserControl
	x:Class="Uno.UI.Samples.Content.UITests.TouchEventsTests.Touch" 
	xmlns:controls="using:Uno.UI.Samples.Controls"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Uno.UI.Samples.Content.UITests"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:u="using:Uno.UI.Samples.Controls"
	xmlns:uc="using:Uno.UI.Samples.Converters"
	xmlns:uBehaviors="using:Uno.UI.Samples.Behaviors"
	xmlns:ios="http://uno.ui/ios"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:android="http://uno.ui/android"
    xmlns:not_win="http://uno.ui/not_win"
    mc:Ignorable="d ios android not_win"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <UserControl.Resources>

        <uc:FromNullableBoolToVisibilityConverter x:Key="boolToVisibility" />

        <Style x:Key="ButtonStyle"
			   TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

		<Style TargetType="ToggleButton"
			   x:Key="ToggleButtonStyle">
			<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<u:StarStackPanel Orientation="Horizontal"
											 Background="{TemplateBinding Background}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver" />
									<VisualState x:Name="Checked">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedBorder"
																	   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder"
																	   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="CheckedPointerOver">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedBorder"
																	   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedBorder"
																	   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Border Background="Green"
								x:Name="UncheckedBorder"
								Width="30"
								Height="30" />
						
							<Border Background="Red"
									x:Name="CheckedBorder"
									Visibility="Collapsed"
									Width="30"
									Height="30" />
						
					</u:StarStackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    </UserControl.Resources>

    <!-- TODO: Visibility, Transparent, Border, Rectangle (Fill), Image, Transform, Opacity, Nested buttons, IsHitTestVisible, ScrollViewer, Native views -->

    <controls:SampleControl SampleDescription="Description for sample of Touch">
        <controls:SampleControl.SampleContent>
            <DataTemplate>
				<ScrollViewer>
					<StackPanel>
						<TextBlock Text="{Binding [Output]}" x:Uid="touchLog" />
						<Button Content="Reset"
								Command="{Binding [GenericCommand]}"
								CommandParameter="Reset" />
						<StackPanel>
							<TextBlock Text="Button inside a white grid" />
							<Grid Width="100"
									  Height="100"
									  Background="White">

								<Button Background="Tomato"
												x:Uid="button_inside_grid"
											Width="50"
											Height="50"
											Command="{Binding [GenericCommand]}"
											CommandParameter="button inside grid"
											Style="{StaticResource ButtonStyle}" />
							</Grid>

							<TextBlock Text="Button with a border on top" />
							<Grid Width="100"
									  Height="100"
									  Background="White">

								<Button Background="Tomato"
												x:Uid="button_border_on_top"
											Command="{Binding [GenericCommand]}"
											CommandParameter="button under grid"
											Height="80" Width="80"
											Style="{StaticResource ButtonStyle}" />

								<Border Background="Gray"
												x:Uid="button_border_on_top_border"
											VerticalAlignment="Stretch"
											HorizontalAlignment="Stretch"
											Margin="30" />
							</Grid>

							<TextBlock Text="Button with a (border inside a border) on top" />
							<Grid Width="100"
									  Height="100"
									  Background="White">

								<Button Background="Tomato"
												x:Uid="button_under_grid"
											Command="{Binding [GenericCommand]}"
											CommandParameter="button under grid"
											Height="80" Width="80"
											Style="{StaticResource ButtonStyle}" />

								<Border>
									<Border Background="Gray"
											VerticalAlignment="Stretch"
											HorizontalAlignment="Stretch"
											Margin="30" />
								</Border>
							</Grid>

							<TextBlock Text="Button with a border inside" />
							<Grid Width="100"
									  Height="100"
									  Background="White">

								<Button Background="Tomato"
												x:Uid="button_with_border_inside"
											Command="{Binding [GenericCommand]}"
											CommandParameter="button with border inside"
											Height="80" Width="80"
											Style="{StaticResource ButtonStyle}">

									<Border Background="Gray"
												VerticalAlignment="Stretch"
												HorizontalAlignment="Stretch"
												Height="50" Width="50" />

								</Button>
							</Grid>

							<TextBlock Text="Button in a button" />
							<Grid Width="100"
									  Height="100"
									  Background="White">

								<Button Background="Tomato"
												x:Uid="outer_button" 
											Command="{Binding [GenericCommand]}"
											CommandParameter="outer button"
											Height="80" Width="80"
											Style="{StaticResource ButtonStyle}">

									<Button Background="Olive"
												x:Uid="inner_button"
												Command="{Binding [GenericCommand]}"
												CommandParameter="inner button"
												Style="{StaticResource ButtonStyle}"
												Height="50" Width="50" />

								</Button>
							</Grid>

							<TextBlock Text="Button over a button" />
							<Grid Width="100"
									  Height="100"
									  Background="White">

								<Button Background="Tomato"
											Command="{Binding [GenericCommand]}"
											CommandParameter="bottom button"
											Height="80" Width="80"
											Style="{StaticResource ButtonStyle}">

								</Button>

								<Button Background="Olive"
											Command="{Binding [GenericCommand]}"
											CommandParameter="top button"
											Style="{StaticResource ButtonStyle}"
											Height="50" Width="50" />
							</Grid>

							<TextBlock Text="Button in scrollviewer in a button" />
							<Grid Width="100"
									  Height="100"
									  Background="White">

								<Button Background="Tomato"
											Command="{Binding [GenericCommand]}"
											CommandParameter="bottom button"
											Height="80" Width="80"
											Style="{StaticResource ButtonStyle}">
									<ScrollViewer Height="50" Width="50" >
										<Button Background="Olive"
													Command="{Binding [GenericCommand]}"
													CommandParameter="top button"
													Style="{StaticResource ButtonStyle}"
													Height="50" Width="50" />
									</ScrollViewer>
								</Button>
							</Grid>

							<TextBlock Text="Default button" />
							<Button Content="Default"
										Command="{Binding [GenericCommand]}"
										CommandParameter="default button" />

							<TextBlock Text="Default combo box" />
							<ComboBox ItemsSource="{Binding [Colors]}" />

							<TextBlock Text="ToggleButton that collapses when clicked" />
							<ToggleButton Style="{StaticResource ToggleButtonStyle}"
										  Command="{Binding [GenericCommand]}"
										  CommandParameter="toggle button"/>
										  
						</StackPanel>
					</StackPanel>
				</ScrollViewer>
            </DataTemplate>
        </controls:SampleControl.SampleContent>
    </controls:SampleControl>
</UserControl>