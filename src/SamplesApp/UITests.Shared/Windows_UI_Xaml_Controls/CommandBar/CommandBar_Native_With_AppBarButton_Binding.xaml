<Page
    x:Class="UITests.Windows_UI_Xaml_Controls.CommandBar.CommandBar_Native_With_AppBarButton_Binding"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UITests.Windows_UI_Xaml_Controls.CommandBar"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:xamarin="http://nventive.com/xamarin"
	xmlns:ios="http://nventive.com/ios"
	xmlns:android="http://nventive.com/android"	
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d xamarin ios android"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

	<Page.Resources>
		<Style x:Name="NativeCommandbarStyle"
			   TargetType="CommandBar"
			   xamarin:BasedOn="{StaticResource NativeDefaultCommandBar}">
			<Setter Property="Background"
					Value="Blue" />
			<Setter Property="Foreground"
					Value="White" />
		</Style>

		<local:FromNullableBoolToCustomValueConverter x:Key="IsCheckedToIcon"
													  TrueValue="ms-appx:///Assets/closeIcon.png"
													  NullOrFalseValue="ms-appx:///Assets/filter.png" />
	</Page.Resources>

	<StackPanel Background="White">
		<xamarin:Grid>
			<CommandBar Content="CommandBar with DataContext Set"
						Style="{StaticResource NativeCommandbarStyle}"
						Grid.Row="0">
				<CommandBar.PrimaryCommands>
					<AppBarButton Command="{Binding [ToggleChecked]}"
								  Label="Order"
								  Foreground="White">
						<AppBarButton.Icon>
							<BitmapIcon ShowAsMonochrome="True"
										UriSource="{Binding [IsChecked], Converter={StaticResource IsCheckedToIcon}}" />
						</AppBarButton.Icon>
					</AppBarButton>
				</CommandBar.PrimaryCommands>
			</CommandBar>
		</xamarin:Grid>
	</StackPanel>
</Page>
