<Page x:Class="UITests.Windows_UI_Xaml_Controls.SplitView.BindableDrawerLayout_ChangePane"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:UITests.Windows_UI_Xaml_Controls.SplitView"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:android="http://uno.ui/android"
	  mc:Ignorable="d android"
	  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

	<Grid>
		<SplitView x:Name="RootSplitView" OpenPaneLength="312">
			<!-- mimic LeftDrawerSplitViewStyle -->
			<android:SplitView.Template>
				<ControlTemplate TargetType="SplitView">
					<BindableDrawerLayout LeftPaneOpenLength="{TemplateBinding OpenPaneLength}"
										  LeftPane="{TemplateBinding Pane}"
										  LeftPaneBackground="{TemplateBinding PaneBackground}"
										  IsLeftPaneOpen="{TemplateBinding IsPaneOpen, Mode=TwoWay}"
										  IsLeftPaneEnabled="{Binding (toolkit:SplitViewExtensions.IsPaneEnabled), RelativeSource={RelativeSource TemplatedParent}}"
										  Content="{TemplateBinding Content}" />
				</ControlTemplate>
			</android:SplitView.Template>
			
			<SplitView.Content>
				<Grid>
					<TextBlock TextWrapping="WrapWholeWords">
						Created to test (Left|Right)DrawerSplitViewStyle where setting the Pane to null and then to an UIElement would brick the BindableDrawerLayout.
					</TextBlock>
				</Grid>
			</SplitView.Content>
			<SplitView.Pane>
				<Grid AutomationProperties.AutomationId="DrawerContent"
					  Background="Pink"
					  VerticalAlignment="Stretch"
					  HorizontalAlignment="Stretch" />
			</SplitView.Pane>
		</SplitView>

		<StackPanel VerticalAlignment="Bottom" Spacing="5">
			<Button x:Name="ManualOpenPaneButton" Content="ManualOpenPane" Click="ManualOpenPane" />
			<Button x:Name="ManualClosePaneButton" Content="ManualClosePane" Click="ManualClosePane" />
			<Button x:Name="SetPaneToNullButton" Content="SetPaneToNull" Click="SetPaneTo" />
			<Button x:Name="SetPaneToSkyBlueGridButton" Content="SetPaneToSkyBlueGrid" Click="SetPaneTo" Tag="SkyBlue" />
			<Button x:Name="SetPaneToPinkGridButton" Content="SetPaneToPinkGrid" Click="SetPaneTo" Tag="Pink" />
		</StackPanel>
	</Grid>
</Page>
