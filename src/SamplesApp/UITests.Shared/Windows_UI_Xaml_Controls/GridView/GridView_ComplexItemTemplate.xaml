<UserControl
	x:Class="Uno.UI.Samples.Content.UITests.GridView.GridView_ComplexItemTemplate"
	xmlns:controls="using:Uno.UI.Samples.Controls"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="Uno.UI.Samples.Content.UITests.GridView"
	xmlns:uc="using:Uno.UI.Samples.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:converters="using:Uno.UI.Samples.Converters"
	xmlns:ios="http://nventive.com/ios"
	xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:android="http://nventive.com/android"
	xmlns:xamarin="http://nventive.com/xamarin"
	mc:Ignorable="d ios android xamarin"
	d:DesignHeight="2000"
	d:DesignWidth="400">

	<UserControl.Resources>
		<converters:FromNullableBoolToVisibilityConverter x:Key="boolToVisibility" />

		<DataTemplate x:Key="AppointmentReasonTypeTemplate">
			<TextBlock Text="1" />
		</DataTemplate>

		<DataTemplate x:Key="SimpleAppointmentItemTemplate">
			<uc:StarStackPanel Height="100"
								   VerticalAlignment="Top">
				<Border HorizontalAlignment="Center"
					VerticalAlignment="Center">
					<Path Data="F1M43.874,3.869L43.611,3.556 39.017,0.215 38.377,0 37.554,0.366 17.6,24.596 6.011,12.804 5.668,12.578 5.257,12.503 4.548,12.74 0.343,16.469 0,17.202 0.251,17.849 1.714,19.336 18.125,36 43.771,4.936 44,4.246z"
						Stretch="Uniform"
						Margin="0,10,0,0"
						Height="30"
						Width="30"
						Fill="Blue" />
				</Border>
			</uc:StarStackPanel>
		</DataTemplate>

		<DataTemplate x:Key="AppointmentItemTemplate">
			<Grid>
				<uc:StarStackPanel Height="100"
								   VerticalAlignment="Top">
					<TextBlock	Text="{Binding PatientName}"
										Margin="20,0,0,2"
										VerticalAlignment="Top" />
					<Grid Height="100"
										   Width="280"
										   VerticalAlignment="Top">

						<Image Source="{Binding PatientImage}"
									Height="100"
									Width="280" />
						<Path Data="F1M0,0L102,0 0,170z"
							  Fill="Red"
							  VerticalAlignment="Top"
							  HorizontalAlignment="Left" />

						<TextBlock Text="{Binding StartTime}"
								   VerticalAlignment="Top"
								   HorizontalAlignment="Left"
								   Margin="10,0,0,0" />

						<TextBlock Text="{Binding StartTime}"
								   VerticalAlignment="Top"
								   HorizontalAlignment="Left"
								   Margin="10,32,0,0" />

						<Border Background="#FF000000"
								Height="50"
								VerticalAlignment="Bottom">
							<TextBlock	Text="{Binding PatientName}"
										Margin="20,0,0,2"
										VerticalAlignment="Top" />
						</Border>

						<Image Source="/Assets/Images/CareClubBadge.png"
								   VerticalAlignment="Bottom"
								   HorizontalAlignment="Left"
								   Margin="10,0,0,60"
								   Width="40"
								   Height="40"
								   Visibility="{Binding HasWellnessMembership, Converter={StaticResource boolToVisibility}}"
								   />
					</Grid>
					<StackPanel Margin="20,11,10,10"
									Width="250">
						<TextBlock Margin="0,0,0,10"
									 TextTrimming="CharacterEllipsis"
									 TextWrapping="NoWrap">
							<Run Text="{Binding Client_Title}" />
							<Run Text="{Binding Client_Title}" />
							<Run Text="{Binding Client_FirstName}" />
							<Run Text=" " />
							<Run Text="{Binding Client_LastName}" />
						</TextBlock>
						<ItemsControl ItemsSource="{Binding AppointmentTypes}"
									  />
						<ItemsControl ItemsSource="{Binding Reasons}"
										Margin="0,0,0,10" />
						<TextBlock Text="{Binding MedicalResource}" />
					</StackPanel>
				</uc:StarStackPanel>
				<Grid VerticalAlignment="Bottom"
					  HorizontalAlignment="Right"
					  Margin="0 0 10 10"
					  Visibility="{Binding StatusId}">
					<Ellipse Fill="Green"
							 Width="50"
							 Height="50" />
					<Border HorizontalAlignment="Center"
							VerticalAlignment="Center">
						<Path Data="F1M43.874,3.869L43.611,3.556 39.017,0.215 38.377,0 37.554,0.366 17.6,24.596 6.011,12.804 5.668,12.578 5.257,12.503 4.548,12.74 0.343,16.469 0,17.202 0.251,17.849 1.714,19.336 18.125,36 43.771,4.936 44,4.246z"
							  Stretch="Uniform"
							  Margin="0,10,0,0"
							  Height="30"
							  Width="30"
							  Fill="Blue" />
					</Border>
				</Grid>
			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="AppointmentItemTemplateNoGrid">
			<Grid>
				<uc:StarStackPanel Height="100"
								   VerticalAlignment="Top">
					<TextBlock	Text="{Binding PatientName}"
										Margin="20,0,0,2"
										VerticalAlignment="Top" />
					<Grid Height="100"
										   Width="280"
										   VerticalAlignment="Top">

						<Image Source="{Binding PatientImage}"
									Height="100"
									Width="280" />
						<Path Data="F1M0,0L102,0 0,170z"
							  Fill="Red"
							  VerticalAlignment="Top"
							  HorizontalAlignment="Left" />

						<TextBlock Text="{Binding StartTime}"
								   VerticalAlignment="Top"
								   HorizontalAlignment="Left"
								   Margin="10,0,0,0" />

						<TextBlock Text="{Binding StartTime}"
								   VerticalAlignment="Top"
								   HorizontalAlignment="Left"
								   Margin="10,32,0,0" />

						<Border Background="#FF000000"
								Height="50"
								VerticalAlignment="Bottom">
							<TextBlock	Text="{Binding PatientName}"
										Margin="20,0,0,2"
										VerticalAlignment="Top" />
						</Border>

						<Image Source="/Assets/Images/CareClubBadge.png"
								   VerticalAlignment="Bottom"
								   HorizontalAlignment="Left"
								   Margin="10,0,0,60"
								   Width="40"
								   Height="40"
								   Visibility="{Binding HasWellnessMembership, Converter={StaticResource boolToVisibility}}"
								   />
						</Grid>
						<StackPanel Margin="20,11,10,10"
										Width="250">
							<TextBlock Margin="0,0,0,10"
										 TextTrimming="CharacterEllipsis"
										 TextWrapping="NoWrap">
								<Run Text="{Binding Client_Title}" />
								<Run Text="{Binding Client_Title}" />
								<Run Text="{Binding Client_FirstName}" />
								<Run Text=" " />
								<Run Text="{Binding Client_LastName}" />
							</TextBlock>
							<ItemsControl ItemsSource="{Binding AppointmentTypes}"
									  />
							<ItemsControl ItemsSource="{Binding Reasons}"
											Margin="0,0,0,10" />
							<TextBlock Text="{Binding MedicalResource}" />
						</StackPanel>
					</uc:StarStackPanel>
				<Grid VerticalAlignment="Bottom"
					  HorizontalAlignment="Right"
					  Margin="0 0 10 10"
					  Visibility="{Binding StatusId}">
					<Ellipse Fill="Green"
							 Width="50"
							 Height="50" />
					<Border HorizontalAlignment="Center"
							VerticalAlignment="Center">
						<Path Data="F1M43.874,3.869L43.611,3.556 39.017,0.215 38.377,0 37.554,0.366 17.6,24.596 6.011,12.804 5.668,12.578 5.257,12.503 4.548,12.74 0.343,16.469 0,17.202 0.251,17.849 1.714,19.336 18.125,36 43.771,4.936 44,4.246z"
							  Stretch="Uniform"
							  Margin="0,10,0,0"
							  Height="30"
							  Width="30"
							  Fill="Blue" />
					</Border>
				</Grid>
			</Grid>
		</DataTemplate>

		<Style TargetType="GridViewItem"
		   x:Key="GridViewItemSimple">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="GridViewItem">
						<Border x:Name="OuterContainer">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<win:PointerDownThemeAnimation TargetName="ContentContainer" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="PointerOverPressed">
										<Storyboard>
											<win:PointerDownThemeAnimation TargetName="ContentContainer" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="contentPresenter"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To=".5" />
										</Storyboard>
									</VisualState>
									<ios:VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="SelectionBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedCheckMark"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
																	   Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</ios:VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<Storyboard>
											<DoubleAnimation Duration="0"
														 To="1"
														 Storyboard.TargetProperty="Opacity"
														 Storyboard.TargetName="FocusVisual" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unfocused" />
									<VisualState x:Name="PointerFocused" />
								</VisualStateGroup>
								<win:VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselecting" />
									<VisualState x:Name="Unselected" />
									<VisualState x:Name="UnselectedPointerOver" />
									<VisualState x:Name="UnselectedSwiping" />
									<VisualState x:Name="Selecting">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="SelectionBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
																	   Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedSwiping">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="SelectionBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedCheckMark"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
																	   Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="SelectionBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedCheckMark"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
																	   Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</win:VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Border x:Name="ReorderHintContent"
							  Background="Transparent">
								<Border x:Name="ContentContainer">
									<!-- This extra wrapper grid is necessary because rendertransforms set by the reorder hint animations
                                 will be lost when ContentContainer becomes a LTE -->
									<Grid x:Name="InnerDragContent">
										<Rectangle x:Name="PointerOverBorder"
											   IsHitTestVisible="False"
											   Opacity="0"
											   Fill="{ThemeResource ListViewItemPointerOverBackgroundThemeBrush}"
											   Margin="1" />
										<Rectangle x:Name="FocusVisual"
											   IsHitTestVisible="False"
											   Opacity="0"
											   StrokeThickness="2"
											   Stroke="{ThemeResource ListViewItemFocusBorderThemeBrush}" />
										<Rectangle x:Name="SelectionBackground"
											   Margin="4"
											   Fill="Yellow"
											   Opacity="0" />
										<Border x:Name="ContentBorder"
											Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											Margin="0">
											<Grid Background="White">
												<ContentPresenter x:Name="contentPresenter"
															  Content="{TemplateBinding Content}"
															  ContentTemplate="{TemplateBinding ContentTemplate}"
															  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
															  ContentTransitions="{TemplateBinding ContentTransitions}"
															  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
															  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
															  Margin="{TemplateBinding Padding}" />
												<!-- The 'Xg' text simulates the amount of space one line of text will occupy.
                                             In the DataPlaceholder state, the Content is not loaded yet so we
                                             approximate the size of the item using placeholder text. -->
												<TextBlock x:Name="PlaceholderTextBlock"
													   Visibility="Collapsed"
													   Text="Xg"
													   Foreground="{x:Null}"
													   Margin="{TemplateBinding Padding}"
													   IsHitTestVisible="False"
													   AutomationProperties.AccessibilityView="Raw" />
												<Rectangle x:Name="PlaceholderRect"
													   Visibility="Collapsed"
													   Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" />
												<Rectangle x:Name="MultiArrangeOverlayBackground"
													   IsHitTestVisible="False"
													   Opacity="0"
													   Fill="White" />
											</Grid>
										</Border>

										<!-- Selected display -->
										<Rectangle x:Name="SelectedBorder"
											   IsHitTestVisible="False"
											   Opacity="0"
											   Stroke="Purple"
											   StrokeThickness="4"
											   Margin="0" />
										<Border x:Name="SelectedCheckMarkOuter"
											IsHitTestVisible="False"
											HorizontalAlignment="Right"
											VerticalAlignment="Top">

											<Grid x:Name="SelectedCheckMark"
											  Opacity="0"
											  Margin="0,15,15,0">
												<Ellipse Fill="Orange"
													 Width="40"
													 Height="40" />
												<Path HorizontalAlignment="Center"
													  VerticalAlignment="Top"
													  Margin="0,10,0,0"
													  Width="25"
													  Height="25"
													  Stretch="Uniform"
													  Data="F1M43.874,3.869L43.611,3.556 39.017,0.215 38.377,0 37.554,0.366 17.6,24.596 6.011,12.804 5.668,12.578 5.257,12.503 4.548,12.74 0.343,16.469 0,17.202 0.251,17.849 1.714,19.336 18.125,36 43.771,4.936 44,4.246z"
													  Fill="Orange" />
											</Grid>
										</Border>

										<TextBlock x:Name="MultiArrangeOverlayText"
											   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
											   Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
											   FontFamily="{ThemeResource ContentControlThemeFontFamily}"
											   FontSize="26.667"
											   IsHitTestVisible="False"
											   Opacity="0"
											   TextWrapping="Wrap"
											   TextTrimming="WordEllipsis"
											   Margin="18,9,0,0"
											   AutomationProperties.AccessibilityView="Raw" />
									</Grid>
								</Border>
							</Border>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="GridViewItem"
		   x:Key="GridViewItemExpanded">
			<Setter Property="FontFamily"
				Value="{ThemeResource ContentControlThemeFontFamily}" />
			<Setter Property="FontSize"
				Value="{ThemeResource ControlContentThemeFontSize}" />
			<Setter Property="Background"
				Value="Transparent" />
			<Setter Property="TabNavigation"
				Value="Local" />
			<Setter Property="IsHoldingEnabled"
				Value="True" />
			<Setter Property="Margin"
				Value="0,0,2,2" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="GridViewItem">
						<Border x:Name="OuterContainer">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="PointerOver"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<win:PointerDownThemeAnimation TargetName="ContentContainer" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="PointerOverPressed">
										<Storyboard>
											<win:PointerDownThemeAnimation TargetName="ContentContainer" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="contentPresenter"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To=".5" />
										</Storyboard>
									</VisualState>
									<ios:VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="SelectionBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedCheckMark"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
																	   Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</ios:VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<Storyboard>
											<DoubleAnimation Duration="0"
														 To="1"
														 Storyboard.TargetProperty="Opacity"
														 Storyboard.TargetName="FocusVisual" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unfocused" />
									<VisualState x:Name="PointerFocused" />
								</VisualStateGroup>
								<win:VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselecting" />
									<VisualState x:Name="Unselected" />
									<VisualState x:Name="UnselectedPointerOver" />
									<VisualState x:Name="UnselectedSwiping" />
									<VisualState x:Name="Selecting">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="SelectionBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
																	   Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedSwiping">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="SelectionBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedCheckMark"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
																	   Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="SelectionBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<DoubleAnimation Storyboard.TargetName="SelectedCheckMark"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
																	   Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</win:VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Grid x:Name="ReorderHintContent"
							  Background="Transparent">
								<Border x:Name="ContentContainer">
									<!-- This extra wrapper grid is necessary because rendertransforms set by the reorder hint animations
                                 will be lost when ContentContainer becomes a LTE -->
									<Grid x:Name="InnerDragContent">
										<Rectangle x:Name="PointerOverBorder"
											   IsHitTestVisible="False"
											   Opacity="0"
											   Fill="{ThemeResource ListViewItemPointerOverBackgroundThemeBrush}"
											   Margin="1" />
										<Rectangle x:Name="FocusVisual"
											   IsHitTestVisible="False"
											   Opacity="0"
											   StrokeThickness="2"
											   Stroke="{ThemeResource ListViewItemFocusBorderThemeBrush}" />
										<Rectangle x:Name="SelectionBackground"
											   Margin="4"
											   Fill="Yellow"
											   Opacity="0" />
										<Border x:Name="ContentBorder"
											Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											Margin="0">
											<Grid Background="White">
												<ContentPresenter x:Name="contentPresenter"
															  Content="{TemplateBinding Content}"
															  ContentTemplate="{TemplateBinding ContentTemplate}"
															  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
															  ContentTransitions="{TemplateBinding ContentTransitions}"
															  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
															  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
															  Margin="{TemplateBinding Padding}" />
												<!-- The 'Xg' text simulates the amount of space one line of text will occupy.
                                             In the DataPlaceholder state, the Content is not loaded yet so we
                                             approximate the size of the item using placeholder text. -->
												<TextBlock x:Name="PlaceholderTextBlock"
													   Visibility="Collapsed"
													   Text="Xg"
													   Foreground="{x:Null}"
													   Margin="{TemplateBinding Padding}"
													   IsHitTestVisible="False"
													   AutomationProperties.AccessibilityView="Raw" />
												<Rectangle x:Name="PlaceholderRect"
													   Visibility="Collapsed"
													   Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" />
												<Rectangle x:Name="MultiArrangeOverlayBackground"
													   IsHitTestVisible="False"
													   Opacity="0"
													   Fill="White" />
											</Grid>
										</Border>

										<!-- Selected display -->
										<Rectangle x:Name="SelectedBorder"
											   IsHitTestVisible="False"
											   Opacity="0"
											   Stroke="Purple"
											   StrokeThickness="4"
											   Margin="0" />
										<Border x:Name="SelectedCheckMarkOuter"
											IsHitTestVisible="False"
											HorizontalAlignment="Right"
											VerticalAlignment="Top">

											<Grid x:Name="SelectedCheckMark"
											  Opacity="0"
											  Margin="0,15,15,0">
												<Ellipse Fill="Orange"
													 Width="40"
													 Height="40" />
												<Path HorizontalAlignment="Center"
													  VerticalAlignment="Top"
													  Margin="0,10,0,0"
													  Width="25"
													  Height="25"
													  Stretch="Uniform"
													  Data="F1M43.874,3.869L43.611,3.556 39.017,0.215 38.377,0 37.554,0.366 17.6,24.596 6.011,12.804 5.668,12.578 5.257,12.503 4.548,12.74 0.343,16.469 0,17.202 0.251,17.849 1.714,19.336 18.125,36 43.771,4.936 44,4.246z"
													  Fill="Orange" />
											</Grid>
										</Border>

										<TextBlock x:Name="MultiArrangeOverlayText"
											   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
											   Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
											   FontFamily="{ThemeResource ContentControlThemeFontFamily}"
											   FontSize="26.667"
											   IsHitTestVisible="False"
											   Opacity="0"
											   TextWrapping="Wrap"
											   TextTrimming="WordEllipsis"
											   Margin="18,9,0,0"
											   AutomationProperties.AccessibilityView="Raw" />
									</Grid>
								</Border>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


	</UserControl.Resources>


	<controls:SampleControl SampleDescription="Description for sample of GridView_ComplexItemTemplate">
		<controls:SampleControl.SampleContent>
			<DataTemplate>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<GridView	Grid.Row="0"
							ItemsSource="{Binding [SampleItems]}"
							ItemTemplate="{StaticResource AppointmentItemTemplate}"
							SelectionMode="None"
							ItemContainerStyle="{StaticResource GridViewItemExpanded}"
							IsItemClickEnabled="False"
							VerticalAlignment="Stretch"
							IsSynchronizedWithCurrentItem="False"
							win:ScrollViewer.HorizontalScrollMode="Auto"
							win:ScrollViewer.HorizontalScrollBarVisibility="Hidden"
							ios:SelectedItems="{Binding Parent[SelectedAppointments], Mode=TwoWay}">
						<GridView.ItemsPanel>
							<ItemsPanelTemplate>
								<ItemsWrapGrid  MaximumRowsOrColumns="1" />
							</ItemsPanelTemplate>
						</GridView.ItemsPanel>
					</GridView>
					<GridView	Grid.Row="1"
								ItemsSource="{Binding [SampleItems]}"
								ItemTemplate="{StaticResource SimpleAppointmentItemTemplate}"
								SelectionMode="None"
								ItemContainerStyle="{StaticResource GridViewItemExpanded}"
								IsItemClickEnabled="False"
								VerticalAlignment="Stretch"
								IsSynchronizedWithCurrentItem="False"
								win:ScrollViewer.HorizontalScrollMode="Auto"
								win:ScrollViewer.HorizontalScrollBarVisibility="Hidden"
								xamarin:SelectedItems="{Binding Parent[SelectedAppointments], Mode=TwoWay}">
						<GridView.ItemsPanel>
							<ItemsPanelTemplate>
								<ItemsWrapGrid  MaximumRowsOrColumns="1" />
							</ItemsPanelTemplate>
						</GridView.ItemsPanel>
					</GridView>
					<GridView	Grid.Row="2"
								ItemsSource="{Binding [SampleItems]}"
								ItemTemplate="{StaticResource SimpleAppointmentItemTemplate}"
								SelectionMode="None"
								ItemContainerStyle="{StaticResource GridViewItemSimple}"
								IsItemClickEnabled="False"
								VerticalAlignment="Stretch"
								IsSynchronizedWithCurrentItem="False"
								win:ScrollViewer.HorizontalScrollMode="Auto"
								win:ScrollViewer.HorizontalScrollBarVisibility="Hidden"
								xamarin:SelectedItems="{Binding Parent[SelectedAppointments], Mode=TwoWay}">
						<GridView.ItemsPanel>
							<ItemsPanelTemplate>
								<ItemsWrapGrid  MaximumRowsOrColumns="1" />
							</ItemsPanelTemplate>
						</GridView.ItemsPanel>
					</GridView>
					<GridView	Grid.Row="3"
								ItemsSource="{Binding [SampleItems]}"
								ItemTemplate="{StaticResource AppointmentItemTemplateNoGrid}"
								SelectionMode="None"
								ItemContainerStyle="{StaticResource GridViewItemSimple}"
								IsItemClickEnabled="False"
								VerticalAlignment="Stretch"
								IsSynchronizedWithCurrentItem="False"
								win:ScrollViewer.HorizontalScrollMode="Auto"
								win:ScrollViewer.HorizontalScrollBarVisibility="Hidden"
								xamarin:SelectedItems="{Binding Parent[SelectedAppointments], Mode=TwoWay}">
						<GridView.ItemsPanel>
							<ItemsPanelTemplate>
								<ItemsWrapGrid  MaximumRowsOrColumns="1" />
							</ItemsPanelTemplate>
						</GridView.ItemsPanel>
					</GridView>
				</Grid>
			</DataTemplate>
		</controls:SampleControl.SampleContent>
	</controls:SampleControl>
</UserControl>
