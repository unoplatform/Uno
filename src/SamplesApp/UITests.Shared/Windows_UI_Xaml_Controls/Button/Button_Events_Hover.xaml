<Page
    x:Class="UITests.Shared.Windows_UI_Xaml_Controls.Button.Button_Events_Hover"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	x:DefaultBindMode="OneWay"
	Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<StackPanel Orientation="Horizontal"
					HorizontalAlignment="Center"
					Grid.ColumnSpan="2"
					Margin="4">
			<TextBlock FontWeight="Bold"
					   Margin="0,0,4,0"
					   Text="CURRENT TEST:" />
			<TextBlock FontWeight="Bold"
					   Margin="4,0,0,0"
					   Text="{x:Bind CurrentViewModel.DataViewModel.TestTitle}" />
		</StackPanel>
		<Button Content="Previous Event Test"
				Command="{x:Bind PreviousEventCommand}"
				Grid.Row="1"
				Margin="4"
				HorizontalAlignment="Center" />
		<Button Content="Next Event Test"
				Grid.Row="1"
				Grid.Column="1"
				Margin="4"
				Command="{x:Bind NextEventCommand}"
				HorizontalAlignment="Center" />
		<Grid Grid.Row="2"
			  Grid.ColumnSpan="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" MinHeight="40" />
				<RowDefinition Height="Auto" MinHeight="40" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<TextBlock FontWeight="Bold"
					   Margin="4"
					   Grid.Column="2">Count</TextBlock>

			<ContentControl Content="{x:Bind CurrentViewModel.TestBtn}"
							MinWidth="100"
							MinHeight="50"
							VerticalContentAlignment="Stretch"
							HorizontalContentAlignment="Stretch"
							Margin="4"
							Grid.Row="1"
							Grid.Column="1" />
			<TextBlock Grid.Row="1"
					   Grid.Column="2"
					   Text="{x:Bind CurrentViewModel.DataViewModel.Count, Mode=OneWay}" />

			<StackPanel Grid.Row="4"
						Margin="4,8,4,4">
				<TextBlock Margin="0"
						   FontWeight="Bold"
						   Text="EXPECTED" />
				<TextBlock Margin="0"
						   FontWeight="Bold"
						   Text="BEHAVIOR" />
			</StackPanel>
			<TextBlock Grid.Row="4"
					   Grid.Column="1"
					   Grid.ColumnSpan="3"
					   TextWrapping="WrapWholeWords"
					   Margin="4,8,4,4"
					   Text="{x:Bind CurrentViewModel.DataViewModel.ExpectedBehavior}" />

			<Border Background="BlueViolet"
					x:Name="hitInvisibleZone"
					Opacity="0.5"
					Width="15"
					Margin="20,0,0,0"
					HorizontalAlignment="Left"
					IsHitTestVisible="False"
					Grid.Column="1"
					Grid.Row="1"
					Grid.RowSpan="3" />

			<Border Background="Gold"
					x:Name="hitVisibleZone"
					Opacity="0.5"
					Width="15"
					Margin="35,0,0,0"
					HorizontalAlignment="Left"
					IsHitTestVisible="True"
					Grid.Column="1"
					Grid.Row="1"
					Grid.RowSpan="3" />

			<Border Background="Gold"
					Opacity="0.5"
					Margin="35,0,0,0"
					HorizontalAlignment="Stretch"
					Grid.Column="1"
					Grid.Row="2" />

			<Border Background="BlueViolet"
					Opacity="0.5"
					Margin="20,0,0,0"
					HorizontalAlignment="Stretch"
					Grid.Column="1"
					Grid.Row="3" />

			<TextBlock Grid.Row="2"
					   Grid.Column="2"
					   Grid.ColumnSpan="2">
				Hit test visible (pointer doesn't pass through)
			</TextBlock>
			<TextBlock Grid.Row="3"
					   Grid.Column="2"
					   Grid.ColumnSpan="2">
				Hit test NOT visible (pointer pass through)
			</TextBlock>
		</Grid>
	</Grid>
</Page>
