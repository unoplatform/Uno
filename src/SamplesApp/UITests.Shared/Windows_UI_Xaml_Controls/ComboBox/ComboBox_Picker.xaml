<UserControl
    x:Class="SamplesApp.Wasm.Windows_UI_Xaml_Controls.ComboBox.ComboBox_Picker"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Uno.UI.Samples.Content.UITests.ComboBox"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ios="http://nventive.com/ios"
	xmlns:not_win="http://uno.ui/not_win"
	xmlns:android="http://nventive.com/android"
	xmlns:not_android="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    mc:Ignorable="d ios not_win android"
    d:DesignHeight="300"
    d:DesignWidth="400">

  <UserControl.Resources>

	<Style x:Key="PickerComboBoxStyle"
	   TargetType="ComboBox">
	  <!-- Default Windows Value + changed 12 to 10 to match TextBox padding -->
	  <Setter Property="Padding"
				  Value="10,10,0,7" />
	  <ios:Setter Property="IsPopupFullscreen"
				  Value="True" />
	  <Setter Property="HorizontalContentAlignment"
			  Value="Stretch" />
	  <Setter Property="Template">
		<Setter.Value>
		  <ControlTemplate TargetType="ComboBox">
			<Grid>
			  <Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			  </Grid.RowDefinitions>
			  <Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="32" />
			  </Grid.ColumnDefinitions>
			  <VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
				  <VisualState x:Name="Normal" />
				  <VisualState x:Name="PointerOver">
					<Storyboard>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
													 Storyboard.TargetProperty="Background">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlPageBackgroundAltMediumBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
													 Storyboard.TargetProperty="BorderBrush">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlHighlightBaseMediumBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					</Storyboard>
				  </VisualState>
				  <VisualState x:Name="Pressed">
					<Storyboard>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
													 Storyboard.TargetProperty="Background">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlBackgroundListMediumBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
													 Storyboard.TargetProperty="BorderBrush">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					</Storyboard>
				  </VisualState>
				  <VisualState x:Name="Disabled">
					<Storyboard>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
													 Storyboard.TargetProperty="Background">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
													 Storyboard.TargetProperty="BorderBrush">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
													 Storyboard.TargetProperty="Foreground">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
													 Storyboard.TargetProperty="Foreground">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
													 Storyboard.TargetProperty="Foreground">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph"
													 Storyboard.TargetProperty="Foreground">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					</Storyboard>
				  </VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
				  <VisualState x:Name="Focused">
					<Storyboard>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightBackground"
													 Storyboard.TargetProperty="BorderBrush">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <DoubleAnimation Storyboard.TargetName="HighlightBackground"
									   Storyboard.TargetProperty="Opacity"
									   To="1"
									   Duration="0" />
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
													 Storyboard.TargetProperty="Foreground">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
													 Storyboard.TargetProperty="Foreground">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph"
													 Storyboard.TargetProperty="Foreground">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlHighlightAltBaseMediumHighBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					</Storyboard>
				  </VisualState>
				  <VisualState x:Name="FocusedPressed">
					<Storyboard>
					  <DoubleAnimation Storyboard.TargetName="HighlightBackground"
									   Storyboard.TargetProperty="Opacity"
									   To="1"
									   Duration="0" />
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
													 Storyboard.TargetProperty="Foreground">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
													 Storyboard.TargetProperty="Foreground">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownGlyph"
													 Storyboard.TargetProperty="Foreground">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="{ThemeResource SystemControlHighlightAltBaseMediumHighBrush}" />
					  </ObjectAnimationUsingKeyFrames>
					</Storyboard>
				  </VisualState>
				  <VisualState x:Name="Unfocused" />
				  <VisualState x:Name="PointerFocused" />
				  <VisualState x:Name="FocusedDropDown">
					<Storyboard>
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
													 Storyboard.TargetProperty="Visibility"
													 Duration="0">
						<DiscreteObjectKeyFrame KeyTime="0">
						  <DiscreteObjectKeyFrame.Value>
							<Visibility>Visible</Visibility>
						  </DiscreteObjectKeyFrame.Value>
						</DiscreteObjectKeyFrame>
					  </ObjectAnimationUsingKeyFrames>
					</Storyboard>
				  </VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="DropDownStates">
				  <VisualState x:Name="Opened">
					<Storyboard>
					  <win:SplitOpenThemeAnimation OpenedTargetName="PopupBorder"
												   ClosedTargetName="ContentPresenter"
												   OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
												   OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}" />
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
													 Storyboard.TargetName="Popup">
						<DiscreteObjectKeyFrame KeyTime="0"
												Value="True" />
					  </ObjectAnimationUsingKeyFrames>
					  <DoubleAnimation Storyboard.TargetProperty="Y"
									   Storyboard.TargetName="PopupContentTransform"
									   Duration="0:0:0.3"
									   To="0"/>
					  <DoubleAnimation Storyboard.TargetProperty="Opacity"
									   Storyboard.TargetName="PopupBackground"
									   Duration="0:0:0.3"
									   To="1"/>
					</Storyboard>
				  </VisualState>
				  <VisualState x:Name="Closed">
					<Storyboard>
					  <win:SplitCloseThemeAnimation OpenedTargetName="PopupBorder"
													ClosedTargetName="ContentPresenter"
													OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
													OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}" />
					  <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
													 Storyboard.TargetName="Popup">
						<DiscreteObjectKeyFrame KeyTime="0:0:0.3"
												Value="False" />
					  </ObjectAnimationUsingKeyFrames>
					  <DoubleAnimation Storyboard.TargetProperty="Y"
									   Storyboard.TargetName="PopupContentTransform"
									   Duration="0:0:0.3"
									   To="260"/>
					  <DoubleAnimation Storyboard.TargetProperty="Opacity"
									   Storyboard.TargetName="PopupBackground"
									   Duration="0:0:0.3"
									   To="0"/>
					</Storyboard>
				  </VisualState>
				</VisualStateGroup>
			  </VisualStateManager.VisualStateGroups>
			  <ContentPresenter x:Name="HeaderContentPresenter"
								x:DeferLoadStrategy="Lazy"
								Margin="{ThemeResource ComboBoxHeaderThemeMargin}"
								FlowDirection="{TemplateBinding FlowDirection}"
								FontWeight="{ThemeResource ComboBoxHeaderThemeFontWeight}"
								Visibility="Collapsed"
								Content="{TemplateBinding Header}"
								ContentTemplate="{TemplateBinding HeaderTemplate}" />
			  <Border x:Name="Background"
					  Grid.Row="1"
					  Grid.ColumnSpan="2"
					  Background="{TemplateBinding Background}"
					  BorderBrush="{TemplateBinding BorderBrush}"
					  BorderThickness="{TemplateBinding BorderThickness}" />
			  <Border x:Name="HighlightBackground"
					  Grid.Row="1"
					  Grid.ColumnSpan="2"
					  Background="{ThemeResource SystemControlHighlightListAccentLowBrush}"
					  BorderBrush="{ThemeResource SystemControlHighlightBaseMediumLowBrush}"
					  BorderThickness="{TemplateBinding BorderThickness}"
					  Opacity="0" />
			  <ContentPresenter x:Name="ContentPresenter"
								Grid.Row="1"
								ContentTemplate="{TemplateBinding ItemTemplate}"
								ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
				<TextBlock x:Name="PlaceholderTextBlock"
						   Text="{TemplateBinding PlaceholderText}"
						   Foreground="{ThemeResource SystemControlPageTextBaseHighBrush}" />
			  </ContentPresenter>
			  <not_android:FontIcon x:Name="DropDownGlyph"
									Grid.Row="1"
									Grid.Column="1"
									IsHitTestVisible="False"
									Margin="0,10,10,10"
									Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
									FontFamily="{ThemeResource SymbolThemeFontFamily}"
									FontSize="12"
									Glyph="&#xE0E5;"
									HorizontalAlignment="Right"
									VerticalAlignment="Center"
									AutomationProperties.AccessibilityView="Raw" />
			  <android:TextBlock x:Name="DropDownGlyph"
								 Grid.Row="1"
								 Grid.Column="1"
								 IsHitTestVisible="False"
								 Margin="0,10,10,10"
								 Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
								 FontFamily="{ThemeResource SymbolThemeFontFamily}"
								 FontSize="12"
								 Text="&#xE0E5;"
								 HorizontalAlignment="Right"
								 VerticalAlignment="Center"
								 AutomationProperties.AccessibilityView="Raw" />
			  <Popup x:Name="Popup"
					 IsLightDismissEnabled="False">
				<Popup.Child>
				  <Grid>
					<Border x:Name="PopupBackground"
							Background="#8000"
							Opacity="0" />
					<Border x:Name="PopupBorder"
							Background="White"
							VerticalAlignment="Bottom">
					  <Border.RenderTransform>
						<TranslateTransform x:Name="PopupContentTransform"
											Y="260" />
					  </Border.RenderTransform>
					  <StackPanel>
						<Border Height="44"
								Background="RoyalBlue">
						  <ToggleButton Content="OK"
										x:Uid="ComboBox_Done"
										IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
										Padding="0,0,15,0"
										HorizontalAlignment="Right"
										VerticalContentAlignment="Center"
										HorizontalContentAlignment="Center"
										VerticalAlignment="Stretch">
							<ToggleButton.Template>
							  <ControlTemplate>
								<!-- Non-null background ensures the button can be hit (workaround that's not necessary on Windows) -->
								<Border Background="Transparent">
								  <TextBlock FontSize="16"
											 Foreground="White"
											 Margin="0,0,15,0"
											 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											 Text="{TemplateBinding Content}" />
								</Border>
							  </ControlTemplate>
							</ToggleButton.Template>
						  </ToggleButton>
						</Border>
						<ios:Picker	Height="180"
									Placeholder="{TemplateBinding PlaceholderText}"
									ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
									DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
									ItemTemplate="{TemplateBinding ItemTemplate}"
									ItemsSource="{TemplateBinding ItemsSource}"
									ItemContainerStyle="{StaticResource PickerItemStyle}"
									SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
					  </StackPanel>
					</Border>
				  </Grid>
				</Popup.Child>
			  </Popup>
			</Grid>
		  </ControlTemplate>
		</Setter.Value>
	  </Setter>
	</Style>

	<ios:Style x:Key="PickerItemStyle"
			   TargetType="SelectorItem">
	  <Setter Property="FontSize"
			  Value="22" />
	  <Setter Property="FontWeight"
			   Value="Medium" />
	  <Setter Property="VerticalContentAlignment"
			  Value="Center" />
	  <Setter Property="HorizontalContentAlignment"
			  Value="Center" />
	  <Setter Property="Template">
		<Setter.Value>
		  <ControlTemplate TargetType="SelectorItem">
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							  Content="{TemplateBinding Content}"
							  ContentTemplate="{TemplateBinding ContentTemplate}"
							  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
		  </ControlTemplate>
		</Setter.Value>
	  </Setter>
	</ios:Style>

  </UserControl.Resources>

  <StackPanel>

	<TextBlock Text="This sample only works on iOS" />
	<ios:ComboBox x:Name="theComboBox"
				  ItemsSource="{Binding VariableLengthItems}"
				  Style="{StaticResource PickerComboBoxStyle}"
				  SelectedItem="{Binding test}" />

  </StackPanel>

</UserControl>
