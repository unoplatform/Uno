// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Sensors
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class AccelerometerReading
	{
#if false || false || IS_UNIT_TESTS || false || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double AccelerationX
		{
			get
			{
				throw new global::System.NotImplementedException("The member double AccelerometerReading.AccelerationX is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20AccelerometerReading.AccelerationX");
			}
		}
#endif
#if false || false || IS_UNIT_TESTS || false || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double AccelerationY
		{
			get
			{
				throw new global::System.NotImplementedException("The member double AccelerometerReading.AccelerationY is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20AccelerometerReading.AccelerationY");
			}
		}
#endif
#if false || false || IS_UNIT_TESTS || false || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double AccelerationZ
		{
			get
			{
				throw new global::System.NotImplementedException("The member double AccelerometerReading.AccelerationZ is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20AccelerometerReading.AccelerationZ");
			}
		}
#endif
#if false || false || IS_UNIT_TESTS || false || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset Timestamp
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset AccelerometerReading.Timestamp is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%20AccelerometerReading.Timestamp");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan? PerformanceCount
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan? AccelerometerReading.PerformanceCount is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%3F%20AccelerometerReading.PerformanceCount");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, object> Properties
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyDictionary<string, object> AccelerometerReading.Properties is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyDictionary%3Cstring%2C%20object%3E%20AccelerometerReading.Properties");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerReading.Timestamp.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerReading.AccelerationX.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerReading.AccelerationY.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerReading.AccelerationZ.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerReading.PerformanceCount.get
		// Forced skipping of method Windows.Devices.Sensors.AccelerometerReading.Properties.get
	}
}
