// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Effects
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class VideoTransformEffectDefinition : global::Windows.Media.Effects.IVideoEffectDefinition
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string ActivatableClassId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string VideoTransformEffectDefinition.ActivatableClassId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20VideoTransformEffectDefinition.ActivatableClassId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Collections.IPropertySet Properties
		{
			get
			{
				throw new global::System.NotImplementedException("The member IPropertySet VideoTransformEffectDefinition.Properties is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IPropertySet%20VideoTransformEffectDefinition.Properties");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.MediaProperties.MediaRotation Rotation
		{
			get
			{
				throw new global::System.NotImplementedException("The member MediaRotation VideoTransformEffectDefinition.Rotation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MediaRotation%20VideoTransformEffectDefinition.Rotation");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Effects.VideoTransformEffectDefinition", "MediaRotation VideoTransformEffectDefinition.Rotation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Transcoding.MediaVideoProcessingAlgorithm ProcessingAlgorithm
		{
			get
			{
				throw new global::System.NotImplementedException("The member MediaVideoProcessingAlgorithm VideoTransformEffectDefinition.ProcessingAlgorithm is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MediaVideoProcessingAlgorithm%20VideoTransformEffectDefinition.ProcessingAlgorithm");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Effects.VideoTransformEffectDefinition", "MediaVideoProcessingAlgorithm VideoTransformEffectDefinition.ProcessingAlgorithm");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Color PaddingColor
		{
			get
			{
				throw new global::System.NotImplementedException("The member Color VideoTransformEffectDefinition.PaddingColor is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Color%20VideoTransformEffectDefinition.PaddingColor");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Effects.VideoTransformEffectDefinition", "Color VideoTransformEffectDefinition.PaddingColor");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Size OutputSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member Size VideoTransformEffectDefinition.OutputSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Size%20VideoTransformEffectDefinition.OutputSize");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Effects.VideoTransformEffectDefinition", "Size VideoTransformEffectDefinition.OutputSize");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.MediaProperties.MediaMirroringOptions Mirror
		{
			get
			{
				throw new global::System.NotImplementedException("The member MediaMirroringOptions VideoTransformEffectDefinition.Mirror is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MediaMirroringOptions%20VideoTransformEffectDefinition.Mirror");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Effects.VideoTransformEffectDefinition", "MediaMirroringOptions VideoTransformEffectDefinition.Mirror");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Rect CropRectangle
		{
			get
			{
				throw new global::System.NotImplementedException("The member Rect VideoTransformEffectDefinition.CropRectangle is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Rect%20VideoTransformEffectDefinition.CropRectangle");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Effects.VideoTransformEffectDefinition", "Rect VideoTransformEffectDefinition.CropRectangle");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Effects.VideoTransformSphericalProjection SphericalProjection
		{
			get
			{
				throw new global::System.NotImplementedException("The member VideoTransformSphericalProjection VideoTransformEffectDefinition.SphericalProjection is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=VideoTransformSphericalProjection%20VideoTransformEffectDefinition.SphericalProjection");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public VideoTransformEffectDefinition()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Effects.VideoTransformEffectDefinition", "VideoTransformEffectDefinition.VideoTransformEffectDefinition()");
		}
#endif
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.VideoTransformEffectDefinition()
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.ActivatableClassId.get
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.Properties.get
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.PaddingColor.get
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.PaddingColor.set
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.OutputSize.get
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.OutputSize.set
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.CropRectangle.get
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.CropRectangle.set
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.Rotation.get
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.Rotation.set
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.Mirror.get
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.Mirror.set
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.ProcessingAlgorithm.set
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.ProcessingAlgorithm.get
		// Forced skipping of method Windows.Media.Effects.VideoTransformEffectDefinition.SphericalProjection.get
		// Processing: Windows.Media.Effects.IVideoEffectDefinition
	}
}
