// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Networking.BackgroundTransfer
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class BackgroundUploader : global::Windows.Networking.BackgroundTransfer.IBackgroundTransferBase
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Security.Credentials.PasswordCredential ServerCredential
		{
			get
			{
				throw new global::System.NotImplementedException("The member PasswordCredential BackgroundUploader.ServerCredential is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PasswordCredential%20BackgroundUploader.ServerCredential");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "PasswordCredential BackgroundUploader.ServerCredential");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Security.Credentials.PasswordCredential ProxyCredential
		{
			get
			{
				throw new global::System.NotImplementedException("The member PasswordCredential BackgroundUploader.ProxyCredential is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PasswordCredential%20BackgroundUploader.ProxyCredential");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "PasswordCredential BackgroundUploader.ProxyCredential");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Method
		{
			get
			{
				throw new global::System.NotImplementedException("The member string BackgroundUploader.Method is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20BackgroundUploader.Method");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "string BackgroundUploader.Method");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Group
		{
			get
			{
				throw new global::System.NotImplementedException("The member string BackgroundUploader.Group is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20BackgroundUploader.Group");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "string BackgroundUploader.Group");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.BackgroundTransfer.BackgroundTransferCostPolicy CostPolicy
		{
			get
			{
				throw new global::System.NotImplementedException("The member BackgroundTransferCostPolicy BackgroundUploader.CostPolicy is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=BackgroundTransferCostPolicy%20BackgroundUploader.CostPolicy");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "BackgroundTransferCostPolicy BackgroundUploader.CostPolicy");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Notifications.TileNotification FailureTileNotification
		{
			get
			{
				throw new global::System.NotImplementedException("The member TileNotification BackgroundUploader.FailureTileNotification is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TileNotification%20BackgroundUploader.FailureTileNotification");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "TileNotification BackgroundUploader.FailureTileNotification");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.BackgroundTransfer.BackgroundTransferGroup TransferGroup
		{
			get
			{
				throw new global::System.NotImplementedException("The member BackgroundTransferGroup BackgroundUploader.TransferGroup is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=BackgroundTransferGroup%20BackgroundUploader.TransferGroup");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "BackgroundTransferGroup BackgroundUploader.TransferGroup");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Notifications.ToastNotification SuccessToastNotification
		{
			get
			{
				throw new global::System.NotImplementedException("The member ToastNotification BackgroundUploader.SuccessToastNotification is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ToastNotification%20BackgroundUploader.SuccessToastNotification");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "ToastNotification BackgroundUploader.SuccessToastNotification");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Notifications.TileNotification SuccessTileNotification
		{
			get
			{
				throw new global::System.NotImplementedException("The member TileNotification BackgroundUploader.SuccessTileNotification is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TileNotification%20BackgroundUploader.SuccessTileNotification");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "TileNotification BackgroundUploader.SuccessTileNotification");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Notifications.ToastNotification FailureToastNotification
		{
			get
			{
				throw new global::System.NotImplementedException("The member ToastNotification BackgroundUploader.FailureToastNotification is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ToastNotification%20BackgroundUploader.FailureToastNotification");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "ToastNotification BackgroundUploader.FailureToastNotification");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup CompletionGroup
		{
			get
			{
				throw new global::System.NotImplementedException("The member BackgroundTransferCompletionGroup BackgroundUploader.CompletionGroup is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=BackgroundTransferCompletionGroup%20BackgroundUploader.CompletionGroup");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public BackgroundUploader(global::Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup completionGroup)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "BackgroundUploader.BackgroundUploader(BackgroundTransferCompletionGroup completionGroup)");
		}
#endif
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.BackgroundUploader(Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public BackgroundUploader()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "BackgroundUploader.BackgroundUploader()");
		}
#endif
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.BackgroundUploader()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.BackgroundTransfer.UploadOperation CreateUpload(global::System.Uri uri, global::Windows.Storage.IStorageFile sourceFile)
		{
			throw new global::System.NotImplementedException("The member UploadOperation BackgroundUploader.CreateUpload(Uri uri, IStorageFile sourceFile) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=UploadOperation%20BackgroundUploader.CreateUpload%28Uri%20uri%2C%20IStorageFile%20sourceFile%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Networking.BackgroundTransfer.UploadOperation> CreateUploadFromStreamAsync(global::System.Uri uri, global::Windows.Storage.Streams.IInputStream sourceStream)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<UploadOperation> BackgroundUploader.CreateUploadFromStreamAsync(Uri uri, IInputStream sourceStream) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CUploadOperation%3E%20BackgroundUploader.CreateUploadFromStreamAsync%28Uri%20uri%2C%20IInputStream%20sourceStream%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Networking.BackgroundTransfer.UploadOperation> CreateUploadAsync(global::System.Uri uri, global::System.Collections.Generic.IEnumerable<global::Windows.Networking.BackgroundTransfer.BackgroundTransferContentPart> parts)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<UploadOperation> BackgroundUploader.CreateUploadAsync(Uri uri, IEnumerable<BackgroundTransferContentPart> parts) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CUploadOperation%3E%20BackgroundUploader.CreateUploadAsync%28Uri%20uri%2C%20IEnumerable%3CBackgroundTransferContentPart%3E%20parts%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Networking.BackgroundTransfer.UploadOperation> CreateUploadAsync(global::System.Uri uri, global::System.Collections.Generic.IEnumerable<global::Windows.Networking.BackgroundTransfer.BackgroundTransferContentPart> parts, string subType)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<UploadOperation> BackgroundUploader.CreateUploadAsync(Uri uri, IEnumerable<BackgroundTransferContentPart> parts, string subType) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CUploadOperation%3E%20BackgroundUploader.CreateUploadAsync%28Uri%20uri%2C%20IEnumerable%3CBackgroundTransferContentPart%3E%20parts%2C%20string%20subType%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Networking.BackgroundTransfer.UploadOperation> CreateUploadAsync(global::System.Uri uri, global::System.Collections.Generic.IEnumerable<global::Windows.Networking.BackgroundTransfer.BackgroundTransferContentPart> parts, string subType, string boundary)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<UploadOperation> BackgroundUploader.CreateUploadAsync(Uri uri, IEnumerable<BackgroundTransferContentPart> parts, string subType, string boundary) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CUploadOperation%3E%20BackgroundUploader.CreateUploadAsync%28Uri%20uri%2C%20IEnumerable%3CBackgroundTransferContentPart%3E%20parts%2C%20string%20subType%2C%20string%20boundary%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetRequestHeader(string headerName, string headerValue)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.BackgroundTransfer.BackgroundUploader", "void BackgroundUploader.SetRequestHeader(string headerName, string headerValue)");
		}
#endif
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.ServerCredential.get
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.ServerCredential.set
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.ProxyCredential.get
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.ProxyCredential.set
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.Method.get
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.Method.set
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.Group.get
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.Group.set
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.CostPolicy.get
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.CostPolicy.set
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.TransferGroup.get
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.TransferGroup.set
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.SuccessToastNotification.get
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.SuccessToastNotification.set
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.FailureToastNotification.get
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.FailureToastNotification.set
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.SuccessTileNotification.get
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.SuccessTileNotification.set
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.FailureTileNotification.get
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.FailureTileNotification.set
		// Forced skipping of method Windows.Networking.BackgroundTransfer.BackgroundUploader.CompletionGroup.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.BackgroundTransfer.UploadOperation>> GetCurrentUploadsForTransferGroupAsync(global::Windows.Networking.BackgroundTransfer.BackgroundTransferGroup group)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<UploadOperation>> BackgroundUploader.GetCurrentUploadsForTransferGroupAsync(BackgroundTransferGroup group) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CUploadOperation%3E%3E%20BackgroundUploader.GetCurrentUploadsForTransferGroupAsync%28BackgroundTransferGroup%20group%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Networking.BackgroundTransfer.UnconstrainedTransferRequestResult> RequestUnconstrainedUploadsAsync(global::System.Collections.Generic.IEnumerable<global::Windows.Networking.BackgroundTransfer.UploadOperation> operations)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<UnconstrainedTransferRequestResult> BackgroundUploader.RequestUnconstrainedUploadsAsync(IEnumerable<UploadOperation> operations) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CUnconstrainedTransferRequestResult%3E%20BackgroundUploader.RequestUnconstrainedUploadsAsync%28IEnumerable%3CUploadOperation%3E%20operations%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.BackgroundTransfer.UploadOperation>> GetCurrentUploadsAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<UploadOperation>> BackgroundUploader.GetCurrentUploadsAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CUploadOperation%3E%3E%20BackgroundUploader.GetCurrentUploadsAsync%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.BackgroundTransfer.UploadOperation>> GetCurrentUploadsAsync(string group)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<UploadOperation>> BackgroundUploader.GetCurrentUploadsAsync(string group) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CUploadOperation%3E%3E%20BackgroundUploader.GetCurrentUploadsAsync%28string%20group%29");
		}
#endif
		// Processing: Windows.Networking.BackgroundTransfer.IBackgroundTransferBase
	}
}
