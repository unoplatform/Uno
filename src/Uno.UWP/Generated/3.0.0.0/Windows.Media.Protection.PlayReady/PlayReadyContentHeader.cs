// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Protection.PlayReady
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class PlayReadyContentHeader
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string CustomAttributes
		{
			get
			{
				throw new global::System.NotImplementedException("The member string PlayReadyContentHeader.CustomAttributes is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20PlayReadyContentHeader.CustomAttributes");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Protection.PlayReady.PlayReadyDecryptorSetup DecryptorSetup
		{
			get
			{
				throw new global::System.NotImplementedException("The member PlayReadyDecryptorSetup PlayReadyContentHeader.DecryptorSetup is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PlayReadyDecryptorSetup%20PlayReadyContentHeader.DecryptorSetup");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Guid DomainServiceId
		{
			get
			{
				throw new global::System.NotImplementedException("The member Guid PlayReadyContentHeader.DomainServiceId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Guid%20PlayReadyContentHeader.DomainServiceId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Protection.PlayReady.PlayReadyEncryptionAlgorithm EncryptionType
		{
			get
			{
				throw new global::System.NotImplementedException("The member PlayReadyEncryptionAlgorithm PlayReadyContentHeader.EncryptionType is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PlayReadyEncryptionAlgorithm%20PlayReadyContentHeader.EncryptionType");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Protection.PlayReady.PlayReadyContentHeader HeaderWithEmbeddedUpdates
		{
			get
			{
				throw new global::System.NotImplementedException("The member PlayReadyContentHeader PlayReadyContentHeader.HeaderWithEmbeddedUpdates is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PlayReadyContentHeader%20PlayReadyContentHeader.HeaderWithEmbeddedUpdates");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Guid KeyId
		{
			get
			{
				throw new global::System.NotImplementedException("The member Guid PlayReadyContentHeader.KeyId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Guid%20PlayReadyContentHeader.KeyId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string KeyIdString
		{
			get
			{
				throw new global::System.NotImplementedException("The member string PlayReadyContentHeader.KeyIdString is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20PlayReadyContentHeader.KeyIdString");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Uri LicenseAcquisitionUrl
		{
			get
			{
				throw new global::System.NotImplementedException("The member Uri PlayReadyContentHeader.LicenseAcquisitionUrl is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Uri%20PlayReadyContentHeader.LicenseAcquisitionUrl");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Uri LicenseAcquisitionUserInterfaceUrl
		{
			get
			{
				throw new global::System.NotImplementedException("The member Uri PlayReadyContentHeader.LicenseAcquisitionUserInterfaceUrl is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Uri%20PlayReadyContentHeader.LicenseAcquisitionUserInterfaceUrl");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string[] KeyIdStrings
		{
			get
			{
				throw new global::System.NotImplementedException("The member string[] PlayReadyContentHeader.KeyIdStrings is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%5B%5D%20PlayReadyContentHeader.KeyIdStrings");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Guid[] KeyIds
		{
			get
			{
				throw new global::System.NotImplementedException("The member Guid[] PlayReadyContentHeader.KeyIds is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Guid%5B%5D%20PlayReadyContentHeader.KeyIds");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public PlayReadyContentHeader(uint dwFlags, global::System.Guid[] contentKeyIds, string[] contentKeyIdStrings, global::Windows.Media.Protection.PlayReady.PlayReadyEncryptionAlgorithm contentEncryptionAlgorithm, global::System.Uri licenseAcquisitionUrl, global::System.Uri licenseAcquisitionUserInterfaceUrl, string customAttributes, global::System.Guid domainServiceId)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.PlayReadyContentHeader", "PlayReadyContentHeader.PlayReadyContentHeader(uint dwFlags, Guid[] contentKeyIds, string[] contentKeyIdStrings, PlayReadyEncryptionAlgorithm contentEncryptionAlgorithm, Uri licenseAcquisitionUrl, Uri licenseAcquisitionUserInterfaceUrl, string customAttributes, Guid domainServiceId)");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.PlayReadyContentHeader(uint, System.Guid[], string[], Windows.Media.Protection.PlayReady.PlayReadyEncryptionAlgorithm, System.Uri, System.Uri, string, System.Guid)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public PlayReadyContentHeader(byte[] headerBytes, global::System.Uri licenseAcquisitionUrl, global::System.Uri licenseAcquisitionUserInterfaceUrl, string customAttributes, global::System.Guid domainServiceId)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.PlayReadyContentHeader", "PlayReadyContentHeader.PlayReadyContentHeader(byte[] headerBytes, Uri licenseAcquisitionUrl, Uri licenseAcquisitionUserInterfaceUrl, string customAttributes, Guid domainServiceId)");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.PlayReadyContentHeader(byte[], System.Uri, System.Uri, string, System.Guid)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public PlayReadyContentHeader(global::System.Guid contentKeyId, string contentKeyIdString, global::Windows.Media.Protection.PlayReady.PlayReadyEncryptionAlgorithm contentEncryptionAlgorithm, global::System.Uri licenseAcquisitionUrl, global::System.Uri licenseAcquisitionUserInterfaceUrl, string customAttributes, global::System.Guid domainServiceId)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.PlayReadyContentHeader", "PlayReadyContentHeader.PlayReadyContentHeader(Guid contentKeyId, string contentKeyIdString, PlayReadyEncryptionAlgorithm contentEncryptionAlgorithm, Uri licenseAcquisitionUrl, Uri licenseAcquisitionUserInterfaceUrl, string customAttributes, Guid domainServiceId)");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.PlayReadyContentHeader(System.Guid, string, Windows.Media.Protection.PlayReady.PlayReadyEncryptionAlgorithm, System.Uri, System.Uri, string, System.Guid)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public PlayReadyContentHeader(byte[] headerBytes)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Protection.PlayReady.PlayReadyContentHeader", "PlayReadyContentHeader.PlayReadyContentHeader(byte[] headerBytes)");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.PlayReadyContentHeader(byte[])
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.KeyId.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.KeyIdString.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.LicenseAcquisitionUrl.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.LicenseAcquisitionUserInterfaceUrl.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.DomainServiceId.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.EncryptionType.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.CustomAttributes.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.DecryptorSetup.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public byte[] GetSerializedHeader()
		{
			throw new global::System.NotImplementedException("The member byte[] PlayReadyContentHeader.GetSerializedHeader() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=byte%5B%5D%20PlayReadyContentHeader.GetSerializedHeader%28%29");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.HeaderWithEmbeddedUpdates.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.KeyIds.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyContentHeader.KeyIdStrings.get
	}
}
