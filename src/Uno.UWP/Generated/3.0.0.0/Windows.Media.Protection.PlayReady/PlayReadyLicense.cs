// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Protection.PlayReady
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class PlayReadyLicense : global::Windows.Media.Protection.PlayReady.IPlayReadyLicense
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal PlayReadyLicense()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint ChainDepth
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint PlayReadyLicense.ChainDepth is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20PlayReadyLicense.ChainDepth");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Guid DomainAccountID
		{
			get
			{
				throw new global::System.NotImplementedException("The member Guid PlayReadyLicense.DomainAccountID is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Guid%20PlayReadyLicense.DomainAccountID");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? ExpirationDate
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? PlayReadyLicense.ExpirationDate is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20PlayReadyLicense.ExpirationDate");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint ExpireAfterFirstPlay
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint PlayReadyLicense.ExpireAfterFirstPlay is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20PlayReadyLicense.ExpireAfterFirstPlay");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool FullyEvaluated
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PlayReadyLicense.FullyEvaluated is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PlayReadyLicense.FullyEvaluated");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool UsableForPlay
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PlayReadyLicense.UsableForPlay is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PlayReadyLicense.UsableForPlay");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ExpiresInRealTime
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PlayReadyLicense.ExpiresInRealTime is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PlayReadyLicense.ExpiresInRealTime");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool InMemoryOnly
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PlayReadyLicense.InMemoryOnly is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PlayReadyLicense.InMemoryOnly");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Guid SecureStopId
		{
			get
			{
				throw new global::System.NotImplementedException("The member Guid PlayReadyLicense.SecureStopId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Guid%20PlayReadyLicense.SecureStopId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint SecurityLevel
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint PlayReadyLicense.SecurityLevel is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20PlayReadyLicense.SecurityLevel");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicense.FullyEvaluated.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicense.UsableForPlay.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicense.ExpirationDate.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicense.ExpireAfterFirstPlay.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicense.DomainAccountID.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicense.ChainDepth.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Guid GetKIDAtChainDepth(uint chainDepth)
		{
			throw new global::System.NotImplementedException("The member Guid PlayReadyLicense.GetKIDAtChainDepth(uint chainDepth) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Guid%20PlayReadyLicense.GetKIDAtChainDepth%28uint%20chainDepth%29");
		}
#endif
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicense.SecureStopId.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicense.SecurityLevel.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicense.InMemoryOnly.get
		// Forced skipping of method Windows.Media.Protection.PlayReady.PlayReadyLicense.ExpiresInRealTime.get
		// Processing: Windows.Media.Protection.PlayReady.IPlayReadyLicense
	}
}
