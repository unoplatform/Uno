// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Globalization
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class GeographicRegion
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Code
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GeographicRegion.Code is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GeographicRegion.Code");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string CodeThreeDigit
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GeographicRegion.CodeThreeDigit is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GeographicRegion.CodeThreeDigit");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string CodeThreeLetter
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GeographicRegion.CodeThreeLetter is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GeographicRegion.CodeThreeLetter");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string CodeTwoLetter
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GeographicRegion.CodeTwoLetter is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GeographicRegion.CodeTwoLetter");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<string> CurrenciesInUse
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<string> GeographicRegion.CurrenciesInUse is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3Cstring%3E%20GeographicRegion.CurrenciesInUse");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DisplayName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GeographicRegion.DisplayName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GeographicRegion.DisplayName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string NativeName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string GeographicRegion.NativeName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20GeographicRegion.NativeName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public GeographicRegion(string geographicRegionCode)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Globalization.GeographicRegion", "GeographicRegion.GeographicRegion(string geographicRegionCode)");
		}
#endif
		// Forced skipping of method Windows.Globalization.GeographicRegion.GeographicRegion(string)
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public GeographicRegion()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Globalization.GeographicRegion", "GeographicRegion.GeographicRegion()");
		}
#endif
		// Forced skipping of method Windows.Globalization.GeographicRegion.GeographicRegion()
		// Forced skipping of method Windows.Globalization.GeographicRegion.Code.get
		// Forced skipping of method Windows.Globalization.GeographicRegion.CodeTwoLetter.get
		// Forced skipping of method Windows.Globalization.GeographicRegion.CodeThreeLetter.get
		// Forced skipping of method Windows.Globalization.GeographicRegion.CodeThreeDigit.get
		// Forced skipping of method Windows.Globalization.GeographicRegion.DisplayName.get
		// Forced skipping of method Windows.Globalization.GeographicRegion.NativeName.get
		// Forced skipping of method Windows.Globalization.GeographicRegion.CurrenciesInUse.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static bool IsSupported(string geographicRegionCode)
		{
			throw new global::System.NotImplementedException("The member bool GeographicRegion.IsSupported(string geographicRegionCode) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20GeographicRegion.IsSupported%28string%20geographicRegionCode%29");
		}
#endif
	}
}
