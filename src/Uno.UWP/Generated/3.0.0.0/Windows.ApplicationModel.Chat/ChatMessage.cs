// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.Chat
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class ChatMessage : global::Windows.ApplicationModel.Chat.IChatItem
	{
		// Skipping already declared property ItemKind
		// Skipping already declared property IsIncoming
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsForwardingDisabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ChatMessage.IsForwardingDisabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ChatMessage.IsForwardingDisabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatMessage", "bool ChatMessage.IsForwardingDisabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string TransportId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ChatMessage.TransportId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ChatMessage.TransportId");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatMessage", "string ChatMessage.TransportId");
			}
		}
#endif
		// Skipping already declared property Status
		// Skipping already declared property From
		// Skipping already declared property Body
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Subject
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ChatMessage.Subject is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ChatMessage.Subject");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatMessage", "string ChatMessage.Subject");
			}
		}
#endif
		// Skipping already declared property IsRead
		// Skipping already declared property NetworkTimestamp
		// Skipping already declared property LocalTimestamp
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Chat.ChatMessageStatus> RecipientSendStatuses
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyDictionary<string, ChatMessageStatus> ChatMessage.RecipientSendStatuses is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyDictionary%3Cstring%2C%20ChatMessageStatus%3E%20ChatMessage.RecipientSendStatuses");
			}
		}
#endif
		// Skipping already declared property Recipients
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string TransportFriendlyName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ChatMessage.TransportFriendlyName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ChatMessage.TransportFriendlyName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.ApplicationModel.Chat.ChatMessageAttachment> Attachments
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<ChatMessageAttachment> ChatMessage.Attachments is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CChatMessageAttachment%3E%20ChatMessage.Attachments");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Id
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ChatMessage.Id is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ChatMessage.Id");
			}
		}
#endif
		// Skipping already declared property IsSeen
		// Skipping already declared property MessageKind
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsReceivedDuringQuietHours
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ChatMessage.IsReceivedDuringQuietHours is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ChatMessage.IsReceivedDuringQuietHours");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatMessage", "bool ChatMessage.IsReceivedDuringQuietHours");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsAutoReply
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ChatMessage.IsAutoReply is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ChatMessage.IsAutoReply");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatMessage", "bool ChatMessage.IsAutoReply");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ulong EstimatedDownloadSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member ulong ChatMessage.EstimatedDownloadSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ulong%20ChatMessage.EstimatedDownloadSize");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatMessage", "ulong ChatMessage.EstimatedDownloadSize");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.ApplicationModel.Chat.ChatConversationThreadingInfo ThreadingInfo
		{
			get
			{
				throw new global::System.NotImplementedException("The member ChatConversationThreadingInfo ChatMessage.ThreadingInfo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ChatConversationThreadingInfo%20ChatMessage.ThreadingInfo");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatMessage", "ChatConversationThreadingInfo ChatMessage.ThreadingInfo");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ShouldSuppressNotification
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ChatMessage.ShouldSuppressNotification is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ChatMessage.ShouldSuppressNotification");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatMessage", "bool ChatMessage.ShouldSuppressNotification");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string RemoteId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ChatMessage.RemoteId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ChatMessage.RemoteId");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatMessage", "string ChatMessage.RemoteId");
			}
		}
#endif
		// Skipping already declared property MessageOperatorKind
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsReplyDisabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ChatMessage.IsReplyDisabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ChatMessage.IsReplyDisabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsSimMessage
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ChatMessage.IsSimMessage is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ChatMessage.IsSimMessage");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.ApplicationModel.Chat.ChatRecipientDeliveryInfo> RecipientsDeliveryInfos
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<ChatRecipientDeliveryInfo> ChatMessage.RecipientsDeliveryInfos is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CChatRecipientDeliveryInfo%3E%20ChatMessage.RecipientsDeliveryInfos");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string SyncId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string ChatMessage.SyncId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20ChatMessage.SyncId");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Chat.ChatMessage", "string ChatMessage.SyncId");
			}
		}
#endif
		// Skipping already declared method Windows.ApplicationModel.Chat.ChatMessage.ChatMessage()
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.ChatMessage()
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.Attachments.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.Body.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.Body.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.From.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.Id.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsForwardingDisabled.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsIncoming.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsRead.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.LocalTimestamp.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.NetworkTimestamp.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.Recipients.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.RecipientSendStatuses.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.Status.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.Subject.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.TransportFriendlyName.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.TransportId.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.TransportId.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.EstimatedDownloadSize.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.EstimatedDownloadSize.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.From.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsAutoReply.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsAutoReply.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsForwardingDisabled.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsReplyDisabled.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsIncoming.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsRead.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsSeen.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsSeen.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsSimMessage.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.LocalTimestamp.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.MessageKind.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.MessageKind.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.MessageOperatorKind.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.MessageOperatorKind.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.NetworkTimestamp.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsReceivedDuringQuietHours.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.IsReceivedDuringQuietHours.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.RemoteId.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.Status.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.Subject.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.ShouldSuppressNotification.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.ShouldSuppressNotification.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.ThreadingInfo.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.ThreadingInfo.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.RecipientsDeliveryInfos.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.RemoteId.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.SyncId.get
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.SyncId.set
		// Forced skipping of method Windows.ApplicationModel.Chat.ChatMessage.ItemKind.get
		// Processing: Windows.ApplicationModel.Chat.IChatItem
	}
}
