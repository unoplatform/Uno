// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Devices
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class RegionOfInterest
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Rect Bounds
		{
			get
			{
				throw new global::System.NotImplementedException("The member Rect RegionOfInterest.Bounds is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Rect%20RegionOfInterest.Bounds");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Devices.RegionOfInterest", "Rect RegionOfInterest.Bounds");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AutoWhiteBalanceEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool RegionOfInterest.AutoWhiteBalanceEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20RegionOfInterest.AutoWhiteBalanceEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Devices.RegionOfInterest", "bool RegionOfInterest.AutoWhiteBalanceEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AutoFocusEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool RegionOfInterest.AutoFocusEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20RegionOfInterest.AutoFocusEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Devices.RegionOfInterest", "bool RegionOfInterest.AutoFocusEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AutoExposureEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool RegionOfInterest.AutoExposureEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20RegionOfInterest.AutoExposureEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Devices.RegionOfInterest", "bool RegionOfInterest.AutoExposureEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint Weight
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint RegionOfInterest.Weight is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20RegionOfInterest.Weight");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Devices.RegionOfInterest", "uint RegionOfInterest.Weight");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Devices.RegionOfInterestType Type
		{
			get
			{
				throw new global::System.NotImplementedException("The member RegionOfInterestType RegionOfInterest.Type is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=RegionOfInterestType%20RegionOfInterest.Type");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Devices.RegionOfInterest", "RegionOfInterestType RegionOfInterest.Type");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool BoundsNormalized
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool RegionOfInterest.BoundsNormalized is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20RegionOfInterest.BoundsNormalized");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Devices.RegionOfInterest", "bool RegionOfInterest.BoundsNormalized");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public RegionOfInterest()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Devices.RegionOfInterest", "RegionOfInterest.RegionOfInterest()");
		}
#endif
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.RegionOfInterest()
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.AutoFocusEnabled.get
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.AutoFocusEnabled.set
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.AutoWhiteBalanceEnabled.get
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.AutoWhiteBalanceEnabled.set
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.AutoExposureEnabled.get
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.AutoExposureEnabled.set
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.Bounds.get
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.Bounds.set
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.Type.get
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.Type.set
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.BoundsNormalized.get
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.BoundsNormalized.set
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.Weight.get
		// Forced skipping of method Windows.Media.Devices.RegionOfInterest.Weight.set
	}
}
