// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Streaming.Adaptive
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AdaptiveMediaSourceAdvancedSettings
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AdaptiveMediaSourceAdvancedSettings()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double? DesiredBitrateHeadroomRatio
		{
			get
			{
				throw new global::System.NotImplementedException("The member double? AdaptiveMediaSourceAdvancedSettings.DesiredBitrateHeadroomRatio is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%3F%20AdaptiveMediaSourceAdvancedSettings.DesiredBitrateHeadroomRatio");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Streaming.Adaptive.AdaptiveMediaSourceAdvancedSettings", "double? AdaptiveMediaSourceAdvancedSettings.DesiredBitrateHeadroomRatio");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double? BitrateDowngradeTriggerRatio
		{
			get
			{
				throw new global::System.NotImplementedException("The member double? AdaptiveMediaSourceAdvancedSettings.BitrateDowngradeTriggerRatio is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%3F%20AdaptiveMediaSourceAdvancedSettings.BitrateDowngradeTriggerRatio");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Streaming.Adaptive.AdaptiveMediaSourceAdvancedSettings", "double? AdaptiveMediaSourceAdvancedSettings.BitrateDowngradeTriggerRatio");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AllSegmentsIndependent
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AdaptiveMediaSourceAdvancedSettings.AllSegmentsIndependent is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AdaptiveMediaSourceAdvancedSettings.AllSegmentsIndependent");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Streaming.Adaptive.AdaptiveMediaSourceAdvancedSettings", "bool AdaptiveMediaSourceAdvancedSettings.AllSegmentsIndependent");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Streaming.Adaptive.AdaptiveMediaSourceAdvancedSettings.AllSegmentsIndependent.get
		// Forced skipping of method Windows.Media.Streaming.Adaptive.AdaptiveMediaSourceAdvancedSettings.AllSegmentsIndependent.set
		// Forced skipping of method Windows.Media.Streaming.Adaptive.AdaptiveMediaSourceAdvancedSettings.DesiredBitrateHeadroomRatio.get
		// Forced skipping of method Windows.Media.Streaming.Adaptive.AdaptiveMediaSourceAdvancedSettings.DesiredBitrateHeadroomRatio.set
		// Forced skipping of method Windows.Media.Streaming.Adaptive.AdaptiveMediaSourceAdvancedSettings.BitrateDowngradeTriggerRatio.get
		// Forced skipping of method Windows.Media.Streaming.Adaptive.AdaptiveMediaSourceAdvancedSettings.BitrateDowngradeTriggerRatio.set
	}
}
