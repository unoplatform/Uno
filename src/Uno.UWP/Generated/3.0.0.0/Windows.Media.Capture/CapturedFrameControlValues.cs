// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class CapturedFrameControlValues
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal CapturedFrameControlValues()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan? Exposure
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan? CapturedFrameControlValues.Exposure is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%3F%20CapturedFrameControlValues.Exposure");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float? ExposureCompensation
		{
			get
			{
				throw new global::System.NotImplementedException("The member float? CapturedFrameControlValues.ExposureCompensation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%3F%20CapturedFrameControlValues.ExposureCompensation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float? FlashPowerPercent
		{
			get
			{
				throw new global::System.NotImplementedException("The member float? CapturedFrameControlValues.FlashPowerPercent is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%3F%20CapturedFrameControlValues.FlashPowerPercent");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool? Flashed
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool? CapturedFrameControlValues.Flashed is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%3F%20CapturedFrameControlValues.Flashed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint? Focus
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint? CapturedFrameControlValues.Focus is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%3F%20CapturedFrameControlValues.Focus");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint? IsoSpeed
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint? CapturedFrameControlValues.IsoSpeed is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%3F%20CapturedFrameControlValues.IsoSpeed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Devices.CaptureSceneMode? SceneMode
		{
			get
			{
				throw new global::System.NotImplementedException("The member CaptureSceneMode? CapturedFrameControlValues.SceneMode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=CaptureSceneMode%3F%20CapturedFrameControlValues.SceneMode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint? WhiteBalance
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint? CapturedFrameControlValues.WhiteBalance is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%3F%20CapturedFrameControlValues.WhiteBalance");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public float? ZoomFactor
		{
			get
			{
				throw new global::System.NotImplementedException("The member float? CapturedFrameControlValues.ZoomFactor is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=float%3F%20CapturedFrameControlValues.ZoomFactor");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Devices.MediaCaptureFocusState? FocusState
		{
			get
			{
				throw new global::System.NotImplementedException("The member MediaCaptureFocusState? CapturedFrameControlValues.FocusState is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MediaCaptureFocusState%3F%20CapturedFrameControlValues.FocusState");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double? IsoAnalogGain
		{
			get
			{
				throw new global::System.NotImplementedException("The member double? CapturedFrameControlValues.IsoAnalogGain is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%3F%20CapturedFrameControlValues.IsoAnalogGain");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double? IsoDigitalGain
		{
			get
			{
				throw new global::System.NotImplementedException("The member double? CapturedFrameControlValues.IsoDigitalGain is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%3F%20CapturedFrameControlValues.IsoDigitalGain");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.MediaProperties.MediaRatio SensorFrameRate
		{
			get
			{
				throw new global::System.NotImplementedException("The member MediaRatio CapturedFrameControlValues.SensorFrameRate is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MediaRatio%20CapturedFrameControlValues.SensorFrameRate");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.WhiteBalanceGain? WhiteBalanceGain
		{
			get
			{
				throw new global::System.NotImplementedException("The member WhiteBalanceGain? CapturedFrameControlValues.WhiteBalanceGain is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=WhiteBalanceGain%3F%20CapturedFrameControlValues.WhiteBalanceGain");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.Exposure.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.ExposureCompensation.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.IsoSpeed.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.Focus.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.SceneMode.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.Flashed.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.FlashPowerPercent.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.WhiteBalance.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.ZoomFactor.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.FocusState.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.IsoDigitalGain.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.IsoAnalogGain.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.SensorFrameRate.get
		// Forced skipping of method Windows.Media.Capture.CapturedFrameControlValues.WhiteBalanceGain.get
	}
}
