// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Capture
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class MediaCaptureSettings
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal MediaCaptureSettings()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string AudioDeviceId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string MediaCaptureSettings.AudioDeviceId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20MediaCaptureSettings.AudioDeviceId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.PhotoCaptureSource PhotoCaptureSource
		{
			get
			{
				throw new global::System.NotImplementedException("The member PhotoCaptureSource MediaCaptureSettings.PhotoCaptureSource is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PhotoCaptureSource%20MediaCaptureSettings.PhotoCaptureSource");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.StreamingCaptureMode StreamingCaptureMode
		{
			get
			{
				throw new global::System.NotImplementedException("The member StreamingCaptureMode MediaCaptureSettings.StreamingCaptureMode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StreamingCaptureMode%20MediaCaptureSettings.StreamingCaptureMode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.VideoDeviceCharacteristic VideoDeviceCharacteristic
		{
			get
			{
				throw new global::System.NotImplementedException("The member VideoDeviceCharacteristic MediaCaptureSettings.VideoDeviceCharacteristic is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=VideoDeviceCharacteristic%20MediaCaptureSettings.VideoDeviceCharacteristic");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string VideoDeviceId
		{
			get
			{
				throw new global::System.NotImplementedException("The member string MediaCaptureSettings.VideoDeviceId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20MediaCaptureSettings.VideoDeviceId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.AudioProcessing AudioProcessing
		{
			get
			{
				throw new global::System.NotImplementedException("The member AudioProcessing MediaCaptureSettings.AudioProcessing is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AudioProcessing%20MediaCaptureSettings.AudioProcessing");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool CameraSoundRequiredForRegion
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool MediaCaptureSettings.CameraSoundRequiredForRegion is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20MediaCaptureSettings.CameraSoundRequiredForRegion");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ConcurrentRecordAndPhotoSequenceSupported
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool MediaCaptureSettings.ConcurrentRecordAndPhotoSequenceSupported is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20MediaCaptureSettings.ConcurrentRecordAndPhotoSequenceSupported");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ConcurrentRecordAndPhotoSupported
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool MediaCaptureSettings.ConcurrentRecordAndPhotoSupported is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20MediaCaptureSettings.ConcurrentRecordAndPhotoSupported");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint? Horizontal35mmEquivalentFocalLength
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint? MediaCaptureSettings.Horizontal35mmEquivalentFocalLength is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%3F%20MediaCaptureSettings.Horizontal35mmEquivalentFocalLength");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Capture.MediaCategory MediaCategory
		{
			get
			{
				throw new global::System.NotImplementedException("The member MediaCategory MediaCaptureSettings.MediaCategory is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MediaCategory%20MediaCaptureSettings.MediaCategory");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int? PitchOffsetDegrees
		{
			get
			{
				throw new global::System.NotImplementedException("The member int? MediaCaptureSettings.PitchOffsetDegrees is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%3F%20MediaCaptureSettings.PitchOffsetDegrees");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint? Vertical35mmEquivalentFocalLength
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint? MediaCaptureSettings.Vertical35mmEquivalentFocalLength is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%3F%20MediaCaptureSettings.Vertical35mmEquivalentFocalLength");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice Direct3D11Device
		{
			get
			{
				throw new global::System.NotImplementedException("The member IDirect3DDevice MediaCaptureSettings.Direct3D11Device is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IDirect3DDevice%20MediaCaptureSettings.Direct3D11Device");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.AudioDeviceId.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.VideoDeviceId.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.StreamingCaptureMode.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.PhotoCaptureSource.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.VideoDeviceCharacteristic.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.ConcurrentRecordAndPhotoSupported.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.ConcurrentRecordAndPhotoSequenceSupported.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.CameraSoundRequiredForRegion.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.Horizontal35mmEquivalentFocalLength.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.PitchOffsetDegrees.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.Vertical35mmEquivalentFocalLength.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.MediaCategory.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.AudioProcessing.get
		// Forced skipping of method Windows.Media.Capture.MediaCaptureSettings.Direct3D11Device.get
	}
}
