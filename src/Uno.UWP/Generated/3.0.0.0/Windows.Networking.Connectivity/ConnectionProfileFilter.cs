// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Networking.Connectivity
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class ConnectionProfileFilter
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Guid? ServiceProviderGuid
		{
			get
			{
				throw new global::System.NotImplementedException("The member Guid? ConnectionProfileFilter.ServiceProviderGuid is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Guid%3F%20ConnectionProfileFilter.ServiceProviderGuid");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Connectivity.ConnectionProfileFilter", "Guid? ConnectionProfileFilter.ServiceProviderGuid");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.Connectivity.NetworkCostType NetworkCostType
		{
			get
			{
				throw new global::System.NotImplementedException("The member NetworkCostType ConnectionProfileFilter.NetworkCostType is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=NetworkCostType%20ConnectionProfileFilter.NetworkCostType");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Connectivity.ConnectionProfileFilter", "NetworkCostType ConnectionProfileFilter.NetworkCostType");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsWwanConnectionProfile
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ConnectionProfileFilter.IsWwanConnectionProfile is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ConnectionProfileFilter.IsWwanConnectionProfile");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Connectivity.ConnectionProfileFilter", "bool ConnectionProfileFilter.IsWwanConnectionProfile");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsWlanConnectionProfile
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ConnectionProfileFilter.IsWlanConnectionProfile is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ConnectionProfileFilter.IsWlanConnectionProfile");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Connectivity.ConnectionProfileFilter", "bool ConnectionProfileFilter.IsWlanConnectionProfile");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsConnected
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ConnectionProfileFilter.IsConnected is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ConnectionProfileFilter.IsConnected");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Connectivity.ConnectionProfileFilter", "bool ConnectionProfileFilter.IsConnected");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool? IsRoaming
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool? ConnectionProfileFilter.IsRoaming is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%3F%20ConnectionProfileFilter.IsRoaming");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Connectivity.ConnectionProfileFilter", "bool? ConnectionProfileFilter.IsRoaming");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool? IsOverDataLimit
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool? ConnectionProfileFilter.IsOverDataLimit is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%3F%20ConnectionProfileFilter.IsOverDataLimit");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Connectivity.ConnectionProfileFilter", "bool? ConnectionProfileFilter.IsOverDataLimit");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool? IsBackgroundDataUsageRestricted
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool? ConnectionProfileFilter.IsBackgroundDataUsageRestricted is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%3F%20ConnectionProfileFilter.IsBackgroundDataUsageRestricted");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Connectivity.ConnectionProfileFilter", "bool? ConnectionProfileFilter.IsBackgroundDataUsageRestricted");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.IBuffer RawData
		{
			get
			{
				throw new global::System.NotImplementedException("The member IBuffer ConnectionProfileFilter.RawData is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBuffer%20ConnectionProfileFilter.RawData");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Guid? PurposeGuid
		{
			get
			{
				throw new global::System.NotImplementedException("The member Guid? ConnectionProfileFilter.PurposeGuid is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Guid%3F%20ConnectionProfileFilter.PurposeGuid");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Connectivity.ConnectionProfileFilter", "Guid? ConnectionProfileFilter.PurposeGuid");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ConnectionProfileFilter()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Connectivity.ConnectionProfileFilter", "ConnectionProfileFilter.ConnectionProfileFilter()");
		}
#endif
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.ConnectionProfileFilter()
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsConnected.set
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsConnected.get
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsWwanConnectionProfile.set
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsWwanConnectionProfile.get
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsWlanConnectionProfile.set
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsWlanConnectionProfile.get
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.NetworkCostType.set
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.NetworkCostType.get
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.ServiceProviderGuid.set
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.ServiceProviderGuid.get
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsRoaming.set
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsRoaming.get
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsOverDataLimit.set
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsOverDataLimit.get
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsBackgroundDataUsageRestricted.set
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.IsBackgroundDataUsageRestricted.get
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.RawData.get
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.PurposeGuid.set
		// Forced skipping of method Windows.Networking.Connectivity.ConnectionProfileFilter.PurposeGuid.get
	}
}
