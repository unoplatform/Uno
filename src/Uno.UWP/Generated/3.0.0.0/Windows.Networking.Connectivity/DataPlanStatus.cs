// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Networking.Connectivity
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class DataPlanStatus
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal DataPlanStatus()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint? DataLimitInMegabytes
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint? DataPlanStatus.DataLimitInMegabytes is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%3F%20DataPlanStatus.DataLimitInMegabytes");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.Connectivity.DataPlanUsage DataPlanUsage
		{
			get
			{
				throw new global::System.NotImplementedException("The member DataPlanUsage DataPlanStatus.DataPlanUsage is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DataPlanUsage%20DataPlanStatus.DataPlanUsage");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ulong? InboundBitsPerSecond
		{
			get
			{
				throw new global::System.NotImplementedException("The member ulong? DataPlanStatus.InboundBitsPerSecond is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ulong%3F%20DataPlanStatus.InboundBitsPerSecond");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint? MaxTransferSizeInMegabytes
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint? DataPlanStatus.MaxTransferSizeInMegabytes is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%3F%20DataPlanStatus.MaxTransferSizeInMegabytes");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? NextBillingCycle
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? DataPlanStatus.NextBillingCycle is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20DataPlanStatus.NextBillingCycle");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ulong? OutboundBitsPerSecond
		{
			get
			{
				throw new global::System.NotImplementedException("The member ulong? DataPlanStatus.OutboundBitsPerSecond is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ulong%3F%20DataPlanStatus.OutboundBitsPerSecond");
			}
		}
#endif
		// Forced skipping of method Windows.Networking.Connectivity.DataPlanStatus.DataPlanUsage.get
		// Forced skipping of method Windows.Networking.Connectivity.DataPlanStatus.DataLimitInMegabytes.get
		// Forced skipping of method Windows.Networking.Connectivity.DataPlanStatus.InboundBitsPerSecond.get
		// Forced skipping of method Windows.Networking.Connectivity.DataPlanStatus.OutboundBitsPerSecond.get
		// Forced skipping of method Windows.Networking.Connectivity.DataPlanStatus.NextBillingCycle.get
		// Forced skipping of method Windows.Networking.Connectivity.DataPlanStatus.MaxTransferSizeInMegabytes.get
	}
}
