// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.Playback
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class MediaPlaybackSphericalVideoProjection
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal MediaPlaybackSphericalVideoProjection()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Numerics.Quaternion ViewOrientation
		{
			get
			{
				throw new global::System.NotImplementedException("The member Quaternion MediaPlaybackSphericalVideoProjection.ViewOrientation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Quaternion%20MediaPlaybackSphericalVideoProjection.ViewOrientation");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Playback.MediaPlaybackSphericalVideoProjection", "Quaternion MediaPlaybackSphericalVideoProjection.ViewOrientation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.Playback.SphericalVideoProjectionMode ProjectionMode
		{
			get
			{
				throw new global::System.NotImplementedException("The member SphericalVideoProjectionMode MediaPlaybackSphericalVideoProjection.ProjectionMode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SphericalVideoProjectionMode%20MediaPlaybackSphericalVideoProjection.ProjectionMode");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Playback.MediaPlaybackSphericalVideoProjection", "SphericalVideoProjectionMode MediaPlaybackSphericalVideoProjection.ProjectionMode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool MediaPlaybackSphericalVideoProjection.IsEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20MediaPlaybackSphericalVideoProjection.IsEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Playback.MediaPlaybackSphericalVideoProjection", "bool MediaPlaybackSphericalVideoProjection.IsEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double HorizontalFieldOfViewInDegrees
		{
			get
			{
				throw new global::System.NotImplementedException("The member double MediaPlaybackSphericalVideoProjection.HorizontalFieldOfViewInDegrees is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20MediaPlaybackSphericalVideoProjection.HorizontalFieldOfViewInDegrees");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Playback.MediaPlaybackSphericalVideoProjection", "double MediaPlaybackSphericalVideoProjection.HorizontalFieldOfViewInDegrees");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.MediaProperties.SphericalVideoFrameFormat FrameFormat
		{
			get
			{
				throw new global::System.NotImplementedException("The member SphericalVideoFrameFormat MediaPlaybackSphericalVideoProjection.FrameFormat is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SphericalVideoFrameFormat%20MediaPlaybackSphericalVideoProjection.FrameFormat");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.Playback.MediaPlaybackSphericalVideoProjection", "SphericalVideoFrameFormat MediaPlaybackSphericalVideoProjection.FrameFormat");
			}
		}
#endif
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackSphericalVideoProjection.IsEnabled.get
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackSphericalVideoProjection.IsEnabled.set
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackSphericalVideoProjection.FrameFormat.get
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackSphericalVideoProjection.FrameFormat.set
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackSphericalVideoProjection.HorizontalFieldOfViewInDegrees.get
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackSphericalVideoProjection.HorizontalFieldOfViewInDegrees.set
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackSphericalVideoProjection.ViewOrientation.get
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackSphericalVideoProjection.ViewOrientation.set
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackSphericalVideoProjection.ProjectionMode.get
		// Forced skipping of method Windows.Media.Playback.MediaPlaybackSphericalVideoProjection.ProjectionMode.set
	}
}
