// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AppInstallerInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal AppInstallerInfo()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Uri Uri
		{
			get
			{
				throw new global::System.NotImplementedException("The member Uri AppInstallerInfo.Uri is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Uri%20AppInstallerInfo.Uri");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool AutomaticBackgroundTask
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppInstallerInfo.AutomaticBackgroundTask is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppInstallerInfo.AutomaticBackgroundTask");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::System.Uri> DependencyPackageUris
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<Uri> AppInstallerInfo.DependencyPackageUris is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CUri%3E%20AppInstallerInfo.DependencyPackageUris");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ForceUpdateFromAnyVersion
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppInstallerInfo.ForceUpdateFromAnyVersion is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppInstallerInfo.ForceUpdateFromAnyVersion");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint HoursBetweenUpdateChecks
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint AppInstallerInfo.HoursBetweenUpdateChecks is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20AppInstallerInfo.HoursBetweenUpdateChecks");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsAutoRepairEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppInstallerInfo.IsAutoRepairEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppInstallerInfo.IsAutoRepairEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset LastChecked
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset AppInstallerInfo.LastChecked is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%20AppInstallerInfo.LastChecked");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool OnLaunch
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppInstallerInfo.OnLaunch is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppInstallerInfo.OnLaunch");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::System.Uri> OptionalPackageUris
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<Uri> AppInstallerInfo.OptionalPackageUris is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CUri%3E%20AppInstallerInfo.OptionalPackageUris");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.DateTimeOffset? PausedUntil
		{
			get
			{
				throw new global::System.NotImplementedException("The member DateTimeOffset? AppInstallerInfo.PausedUntil is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DateTimeOffset%3F%20AppInstallerInfo.PausedUntil");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.ApplicationModel.AppInstallerPolicySource PolicySource
		{
			get
			{
				throw new global::System.NotImplementedException("The member AppInstallerPolicySource AppInstallerInfo.PolicySource is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppInstallerPolicySource%20AppInstallerInfo.PolicySource");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::System.Uri> RepairUris
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<Uri> AppInstallerInfo.RepairUris is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CUri%3E%20AppInstallerInfo.RepairUris");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ShowPrompt
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppInstallerInfo.ShowPrompt is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppInstallerInfo.ShowPrompt");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool UpdateBlocksActivation
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppInstallerInfo.UpdateBlocksActivation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppInstallerInfo.UpdateBlocksActivation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::System.Uri> UpdateUris
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<Uri> AppInstallerInfo.UpdateUris is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CUri%3E%20AppInstallerInfo.UpdateUris");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.ApplicationModel.PackageVersion Version
		{
			get
			{
				throw new global::System.NotImplementedException("The member PackageVersion AppInstallerInfo.Version is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PackageVersion%20AppInstallerInfo.Version");
			}
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.Uri.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.OnLaunch.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.HoursBetweenUpdateChecks.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.ShowPrompt.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.UpdateBlocksActivation.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.AutomaticBackgroundTask.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.ForceUpdateFromAnyVersion.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.IsAutoRepairEnabled.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.Version.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.LastChecked.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.PausedUntil.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.UpdateUris.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.RepairUris.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.DependencyPackageUris.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.OptionalPackageUris.get
		// Forced skipping of method Windows.ApplicationModel.AppInstallerInfo.PolicySource.get
	}
}
