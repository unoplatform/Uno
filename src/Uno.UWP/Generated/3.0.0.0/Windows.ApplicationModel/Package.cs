// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class Package
	{
		// Skipping already declared property Dependencies
		// Skipping already declared property Id
		// Skipping already declared property InstalledLocation
		// Skipping already declared property IsFramework
		// Skipping already declared property Description
		// Skipping already declared property DisplayName
		// Skipping already declared property IsBundle
		// Skipping already declared property IsDevelopmentMode
		// Skipping already declared property IsResourcePackage
		// Skipping already declared property Logo
		// Skipping already declared property PublisherDisplayName
		// Skipping already declared property InstalledDate
		// Skipping already declared property Status
		// Skipping already declared property IsOptional
		// Skipping already declared property SignatureKind
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.StorageFolder EffectiveLocation
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageFolder Package.EffectiveLocation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageFolder%20Package.EffectiveLocation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.StorageFolder MutableLocation
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageFolder Package.MutableLocation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageFolder%20Package.MutableLocation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.StorageFolder EffectiveExternalLocation
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageFolder Package.EffectiveExternalLocation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageFolder%20Package.EffectiveExternalLocation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string EffectiveExternalPath
		{
			get
			{
				throw new global::System.NotImplementedException("The member string Package.EffectiveExternalPath is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20Package.EffectiveExternalPath");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string EffectivePath
		{
			get
			{
				throw new global::System.NotImplementedException("The member string Package.EffectivePath is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20Package.EffectivePath");
			}
		}
#endif
		// Skipping already declared property InstalledPath
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsStub
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool Package.IsStub is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20Package.IsStub");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.StorageFolder MachineExternalLocation
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageFolder Package.MachineExternalLocation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageFolder%20Package.MachineExternalLocation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string MachineExternalPath
		{
			get
			{
				throw new global::System.NotImplementedException("The member string Package.MachineExternalPath is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20Package.MachineExternalPath");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string MutablePath
		{
			get
			{
				throw new global::System.NotImplementedException("The member string Package.MutablePath is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20Package.MutablePath");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.StorageFolder UserExternalLocation
		{
			get
			{
				throw new global::System.NotImplementedException("The member StorageFolder Package.UserExternalLocation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StorageFolder%20Package.UserExternalLocation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string UserExternalPath
		{
			get
			{
				throw new global::System.NotImplementedException("The member string Package.UserExternalPath is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20Package.UserExternalPath");
			}
		}
#endif
		// Skipping already declared property InstallDate
		// Skipping already declared property Current
		// Forced skipping of method Windows.ApplicationModel.Package.Id.get
		// Forced skipping of method Windows.ApplicationModel.Package.InstalledLocation.get
		// Forced skipping of method Windows.ApplicationModel.Package.IsFramework.get
		// Forced skipping of method Windows.ApplicationModel.Package.Dependencies.get
		// Forced skipping of method Windows.ApplicationModel.Package.DisplayName.get
		// Forced skipping of method Windows.ApplicationModel.Package.PublisherDisplayName.get
		// Forced skipping of method Windows.ApplicationModel.Package.Description.get
		// Forced skipping of method Windows.ApplicationModel.Package.Logo.get
		// Forced skipping of method Windows.ApplicationModel.Package.IsResourcePackage.get
		// Forced skipping of method Windows.ApplicationModel.Package.IsBundle.get
		// Forced skipping of method Windows.ApplicationModel.Package.IsDevelopmentMode.get
		// Forced skipping of method Windows.ApplicationModel.Package.Status.get
		// Forced skipping of method Windows.ApplicationModel.Package.InstalledDate.get
		// Skipping already declared method Windows.ApplicationModel.Package.GetAppListEntriesAsync()
		// Forced skipping of method Windows.ApplicationModel.Package.InstallDate.get
		// Skipping already declared method Windows.ApplicationModel.Package.GetThumbnailToken()
		// Skipping already declared method Windows.ApplicationModel.Package.Launch(string)
		// Forced skipping of method Windows.ApplicationModel.Package.SignatureKind.get
		// Forced skipping of method Windows.ApplicationModel.Package.IsOptional.get
		// Skipping already declared method Windows.ApplicationModel.Package.VerifyContentIntegrityAsync()
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IList<global::Windows.ApplicationModel.PackageContentGroup>> GetContentGroupsAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IList<PackageContentGroup>> Package.GetContentGroupsAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIList%3CPackageContentGroup%3E%3E%20Package.GetContentGroupsAsync%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.PackageContentGroup> GetContentGroupAsync(string name)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<PackageContentGroup> Package.GetContentGroupAsync(string name) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CPackageContentGroup%3E%20Package.GetContentGroupAsync%28string%20name%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IList<global::Windows.ApplicationModel.PackageContentGroup>> StageContentGroupsAsync(global::System.Collections.Generic.IEnumerable<string> names)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IList<PackageContentGroup>> Package.StageContentGroupsAsync(IEnumerable<string> names) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIList%3CPackageContentGroup%3E%3E%20Package.StageContentGroupsAsync%28IEnumerable%3Cstring%3E%20names%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IList<global::Windows.ApplicationModel.PackageContentGroup>> StageContentGroupsAsync(global::System.Collections.Generic.IEnumerable<string> names, bool moveToHeadOfQueue)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IList<PackageContentGroup>> Package.StageContentGroupsAsync(IEnumerable<string> names, bool moveToHeadOfQueue) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIList%3CPackageContentGroup%3E%3E%20Package.StageContentGroupsAsync%28IEnumerable%3Cstring%3E%20names%2C%20bool%20moveToHeadOfQueue%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<bool> SetInUseAsync(bool inUse)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> Package.SetInUseAsync(bool inUse) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20Package.SetInUseAsync%28bool%20inUse%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.ApplicationModel.AppInstallerInfo GetAppInstallerInfo()
		{
			throw new global::System.NotImplementedException("The member AppInstallerInfo Package.GetAppInstallerInfo() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AppInstallerInfo%20Package.GetAppInstallerInfo%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.PackageUpdateAvailabilityResult> CheckUpdateAvailabilityAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<PackageUpdateAvailabilityResult> Package.CheckUpdateAvailabilityAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CPackageUpdateAvailabilityResult%3E%20Package.CheckUpdateAvailabilityAsync%28%29");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Package.MutableLocation.get
		// Forced skipping of method Windows.ApplicationModel.Package.EffectiveLocation.get
		// Forced skipping of method Windows.ApplicationModel.Package.EffectiveExternalLocation.get
		// Forced skipping of method Windows.ApplicationModel.Package.MachineExternalLocation.get
		// Forced skipping of method Windows.ApplicationModel.Package.UserExternalLocation.get
		// Forced skipping of method Windows.ApplicationModel.Package.InstalledPath.get
		// Forced skipping of method Windows.ApplicationModel.Package.MutablePath.get
		// Forced skipping of method Windows.ApplicationModel.Package.EffectivePath.get
		// Forced skipping of method Windows.ApplicationModel.Package.EffectiveExternalPath.get
		// Forced skipping of method Windows.ApplicationModel.Package.MachineExternalPath.get
		// Forced skipping of method Windows.ApplicationModel.Package.UserExternalPath.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Storage.Streams.RandomAccessStreamReference GetLogoAsRandomAccessStreamReference(global::Windows.Foundation.Size size)
		{
			throw new global::System.NotImplementedException("The member RandomAccessStreamReference Package.GetLogoAsRandomAccessStreamReference(Size size) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=RandomAccessStreamReference%20Package.GetLogoAsRandomAccessStreamReference%28Size%20size%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Core.AppListEntry> GetAppListEntries()
		{
			throw new global::System.NotImplementedException("The member IReadOnlyList<AppListEntry> Package.GetAppListEntries() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CAppListEntry%3E%20Package.GetAppListEntries%28%29");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Package.IsStub.get
		// Forced skipping of method Windows.ApplicationModel.Package.Current.get
	}
}
