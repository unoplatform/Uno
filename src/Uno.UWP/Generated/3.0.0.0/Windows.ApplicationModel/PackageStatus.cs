// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class PackageStatus
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal PackageStatus()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool DataOffline
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.DataOffline is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.DataOffline");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool DependencyIssue
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.DependencyIssue is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.DependencyIssue");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool DeploymentInProgress
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.DeploymentInProgress is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.DeploymentInProgress");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Disabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.Disabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.Disabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool LicenseIssue
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.LicenseIssue is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.LicenseIssue");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Modified
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.Modified is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.Modified");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool NeedsRemediation
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.NeedsRemediation is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.NeedsRemediation");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool NotAvailable
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.NotAvailable is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.NotAvailable");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool PackageOffline
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.PackageOffline is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.PackageOffline");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Servicing
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.Servicing is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.Servicing");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Tampered
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.Tampered is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.Tampered");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsPartiallyStaged
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PackageStatus.IsPartiallyStaged is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.IsPartiallyStaged");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool VerifyIsOK()
		{
			throw new global::System.NotImplementedException("The member bool PackageStatus.VerifyIsOK() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PackageStatus.VerifyIsOK%28%29");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.NotAvailable.get
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.PackageOffline.get
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.DataOffline.get
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.Disabled.get
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.NeedsRemediation.get
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.LicenseIssue.get
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.Modified.get
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.Tampered.get
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.DependencyIssue.get
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.Servicing.get
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.DeploymentInProgress.get
		// Forced skipping of method Windows.ApplicationModel.PackageStatus.IsPartiallyStaged.get
	}
}
