// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Media.MediaProperties
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class VideoEncodingProperties : global::Windows.Media.MediaProperties.IMediaEncodingProperties
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Subtype
		{
			get
			{
				throw new global::System.NotImplementedException("The member string VideoEncodingProperties.Subtype is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20VideoEncodingProperties.Subtype");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.MediaProperties.VideoEncodingProperties", "string VideoEncodingProperties.Subtype");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Type
		{
			get
			{
				throw new global::System.NotImplementedException("The member string VideoEncodingProperties.Type is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20VideoEncodingProperties.Type");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.MediaProperties.MediaPropertySet Properties
		{
			get
			{
				throw new global::System.NotImplementedException("The member MediaPropertySet VideoEncodingProperties.Properties is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MediaPropertySet%20VideoEncodingProperties.Properties");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint Width
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint VideoEncodingProperties.Width is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20VideoEncodingProperties.Width");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.MediaProperties.VideoEncodingProperties", "uint VideoEncodingProperties.Width");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint Height
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint VideoEncodingProperties.Height is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20VideoEncodingProperties.Height");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.MediaProperties.VideoEncodingProperties", "uint VideoEncodingProperties.Height");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint Bitrate
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint VideoEncodingProperties.Bitrate is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20VideoEncodingProperties.Bitrate");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.MediaProperties.VideoEncodingProperties", "uint VideoEncodingProperties.Bitrate");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.MediaProperties.MediaRatio PixelAspectRatio
		{
			get
			{
				throw new global::System.NotImplementedException("The member MediaRatio VideoEncodingProperties.PixelAspectRatio is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MediaRatio%20VideoEncodingProperties.PixelAspectRatio");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.MediaProperties.MediaRatio FrameRate
		{
			get
			{
				throw new global::System.NotImplementedException("The member MediaRatio VideoEncodingProperties.FrameRate is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=MediaRatio%20VideoEncodingProperties.FrameRate");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int ProfileId
		{
			get
			{
				throw new global::System.NotImplementedException("The member int VideoEncodingProperties.ProfileId is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20VideoEncodingProperties.ProfileId");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.MediaProperties.VideoEncodingProperties", "int VideoEncodingProperties.ProfileId");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.MediaProperties.StereoscopicVideoPackingMode StereoscopicVideoPackingMode
		{
			get
			{
				throw new global::System.NotImplementedException("The member StereoscopicVideoPackingMode VideoEncodingProperties.StereoscopicVideoPackingMode is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StereoscopicVideoPackingMode%20VideoEncodingProperties.StereoscopicVideoPackingMode");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.MediaProperties.SphericalVideoFrameFormat SphericalVideoFrameFormat
		{
			get
			{
				throw new global::System.NotImplementedException("The member SphericalVideoFrameFormat VideoEncodingProperties.SphericalVideoFrameFormat is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=SphericalVideoFrameFormat%20VideoEncodingProperties.SphericalVideoFrameFormat");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public VideoEncodingProperties()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.MediaProperties.VideoEncodingProperties", "VideoEncodingProperties.VideoEncodingProperties()");
		}
#endif
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.VideoEncodingProperties()
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.Bitrate.set
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.Bitrate.get
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.Width.set
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.Width.get
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.Height.set
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.Height.get
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.FrameRate.get
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.PixelAspectRatio.get
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.Properties.get
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.Type.get
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.Subtype.set
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.Subtype.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetFormatUserData(byte[] value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Media.MediaProperties.VideoEncodingProperties", "void VideoEncodingProperties.SetFormatUserData(byte[] value)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void GetFormatUserData(out byte[] value)
		{
			throw new global::System.NotImplementedException("The member void VideoEncodingProperties.GetFormatUserData(out byte[] value) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=void%20VideoEncodingProperties.GetFormatUserData%28out%20byte%5B%5D%20value%29");
		}
#endif
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.ProfileId.set
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.ProfileId.get
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.StereoscopicVideoPackingMode.get
		// Forced skipping of method Windows.Media.MediaProperties.VideoEncodingProperties.SphericalVideoFrameFormat.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Media.MediaProperties.VideoEncodingProperties Copy()
		{
			throw new global::System.NotImplementedException("The member VideoEncodingProperties VideoEncodingProperties.Copy() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=VideoEncodingProperties%20VideoEncodingProperties.Copy%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Media.MediaProperties.VideoEncodingProperties CreateHevc()
		{
			throw new global::System.NotImplementedException("The member VideoEncodingProperties VideoEncodingProperties.CreateHevc() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=VideoEncodingProperties%20VideoEncodingProperties.CreateHevc%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Media.MediaProperties.VideoEncodingProperties CreateH264()
		{
			throw new global::System.NotImplementedException("The member VideoEncodingProperties VideoEncodingProperties.CreateH264() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=VideoEncodingProperties%20VideoEncodingProperties.CreateH264%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Media.MediaProperties.VideoEncodingProperties CreateMpeg2()
		{
			throw new global::System.NotImplementedException("The member VideoEncodingProperties VideoEncodingProperties.CreateMpeg2() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=VideoEncodingProperties%20VideoEncodingProperties.CreateMpeg2%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Media.MediaProperties.VideoEncodingProperties CreateUncompressed(string subtype, uint width, uint height)
		{
			throw new global::System.NotImplementedException("The member VideoEncodingProperties VideoEncodingProperties.CreateUncompressed(string subtype, uint width, uint height) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=VideoEncodingProperties%20VideoEncodingProperties.CreateUncompressed%28string%20subtype%2C%20uint%20width%2C%20uint%20height%29");
		}
#endif
		// Processing: Windows.Media.MediaProperties.IMediaEncodingProperties
	}
}
