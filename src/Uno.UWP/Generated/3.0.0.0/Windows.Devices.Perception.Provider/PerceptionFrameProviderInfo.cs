// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Perception.Provider
{
	// This type is deprecated. Consider not implementing it.
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class PerceptionFrameProviderInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Id
		{
			get
			{
				throw new global::System.NotImplementedException("The member string PerceptionFrameProviderInfo.Id is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20PerceptionFrameProviderInfo.Id");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo", "string PerceptionFrameProviderInfo.Id");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool Hidden
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PerceptionFrameProviderInfo.Hidden is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PerceptionFrameProviderInfo.Hidden");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo", "bool PerceptionFrameProviderInfo.Hidden");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string FrameKind
		{
			get
			{
				throw new global::System.NotImplementedException("The member string PerceptionFrameProviderInfo.FrameKind is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20PerceptionFrameProviderInfo.FrameKind");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo", "string PerceptionFrameProviderInfo.FrameKind");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DisplayName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string PerceptionFrameProviderInfo.DisplayName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20PerceptionFrameProviderInfo.DisplayName");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo", "string PerceptionFrameProviderInfo.DisplayName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string DeviceKind
		{
			get
			{
				throw new global::System.NotImplementedException("The member string PerceptionFrameProviderInfo.DeviceKind is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20PerceptionFrameProviderInfo.DeviceKind");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo", "string PerceptionFrameProviderInfo.DeviceKind");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public PerceptionFrameProviderInfo()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo", "PerceptionFrameProviderInfo.PerceptionFrameProviderInfo()");
		}
#endif
		// Forced skipping of method Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo.PerceptionFrameProviderInfo()
		// Forced skipping of method Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo.Id.get
		// Forced skipping of method Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo.Id.set
		// Forced skipping of method Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo.DisplayName.get
		// Forced skipping of method Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo.DisplayName.set
		// Forced skipping of method Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo.DeviceKind.get
		// Forced skipping of method Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo.DeviceKind.set
		// Forced skipping of method Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo.FrameKind.get
		// Forced skipping of method Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo.FrameKind.set
		// Forced skipping of method Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo.Hidden.get
		// Forced skipping of method Windows.Devices.Perception.Provider.PerceptionFrameProviderInfo.Hidden.set
	}
}
