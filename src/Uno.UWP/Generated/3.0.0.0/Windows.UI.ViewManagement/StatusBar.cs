// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.ViewManagement
{
#if false || false || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
#endif
	public partial class StatusBar
	{
#if false || false || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal StatusBar()
		{
		}
#endif
#if false || false || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Color? ForegroundColor
		{
			get
			{
				throw new global::System.NotImplementedException("The member Color? StatusBar.ForegroundColor is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Color%3F%20StatusBar.ForegroundColor");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.StatusBar", "Color? StatusBar.ForegroundColor");
			}
		}
#endif
#if false || false || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double BackgroundOpacity
		{
			get
			{
				throw new global::System.NotImplementedException("The member double StatusBar.BackgroundOpacity is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20StatusBar.BackgroundOpacity");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.StatusBar", "double StatusBar.BackgroundOpacity");
			}
		}
#endif
#if false || false || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Color? BackgroundColor
		{
			get
			{
				throw new global::System.NotImplementedException("The member Color? StatusBar.BackgroundColor is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Color%3F%20StatusBar.BackgroundColor");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.StatusBar", "Color? StatusBar.BackgroundColor");
			}
		}
#endif
#if false || false || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Rect OccludedRect
		{
			get
			{
				throw new global::System.NotImplementedException("The member Rect StatusBar.OccludedRect is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Rect%20StatusBar.OccludedRect");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.ViewManagement.StatusBarProgressIndicator ProgressIndicator
		{
			get
			{
				throw new global::System.NotImplementedException("The member StatusBarProgressIndicator StatusBar.ProgressIndicator is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StatusBarProgressIndicator%20StatusBar.ProgressIndicator");
			}
		}
#endif
#if false || false || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction ShowAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncAction StatusBar.ShowAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20StatusBar.ShowAsync%28%29");
		}
#endif
#if false || false || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncAction HideAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncAction StatusBar.HideAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncAction%20StatusBar.HideAsync%28%29");
		}
#endif
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.BackgroundOpacity.get
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.BackgroundOpacity.set
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.ForegroundColor.get
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.ForegroundColor.set
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.BackgroundColor.get
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.BackgroundColor.set
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.ProgressIndicator.get
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.OccludedRect.get
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.Showing.add
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.Showing.remove
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.Hiding.add
		// Forced skipping of method Windows.UI.ViewManagement.StatusBar.Hiding.remove
#if false || false || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.UI.ViewManagement.StatusBar GetForCurrentView()
		{
			throw new global::System.NotImplementedException("The member StatusBar StatusBar.GetForCurrentView() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=StatusBar%20StatusBar.GetForCurrentView%28%29");
		}
#endif
#if false || false || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.UI.ViewManagement.StatusBar, object> Hiding
		{
			[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.StatusBar", "event TypedEventHandler<StatusBar, object> StatusBar.Hiding");
			}
			[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.StatusBar", "event TypedEventHandler<StatusBar, object> StatusBar.Hiding");
			}
		}
#endif
#if false || false || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.UI.ViewManagement.StatusBar, object> Showing
		{
			[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.StatusBar", "event TypedEventHandler<StatusBar, object> StatusBar.Showing");
			}
			[global::Uno.NotImplemented("IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.UI.ViewManagement.StatusBar", "event TypedEventHandler<StatusBar, object> StatusBar.Showing");
			}
		}
#endif
	}
}
