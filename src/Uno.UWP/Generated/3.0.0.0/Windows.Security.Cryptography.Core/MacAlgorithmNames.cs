// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Security.Cryptography.Core
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public static partial class MacAlgorithmNames
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string AesCmac
		{
			get
			{
				throw new global::System.NotImplementedException("The member string MacAlgorithmNames.AesCmac is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20MacAlgorithmNames.AesCmac");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string HmacMd5
		{
			get
			{
				throw new global::System.NotImplementedException("The member string MacAlgorithmNames.HmacMd5 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20MacAlgorithmNames.HmacMd5");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string HmacSha1
		{
			get
			{
				throw new global::System.NotImplementedException("The member string MacAlgorithmNames.HmacSha1 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20MacAlgorithmNames.HmacSha1");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string HmacSha256
		{
			get
			{
				throw new global::System.NotImplementedException("The member string MacAlgorithmNames.HmacSha256 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20MacAlgorithmNames.HmacSha256");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string HmacSha384
		{
			get
			{
				throw new global::System.NotImplementedException("The member string MacAlgorithmNames.HmacSha384 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20MacAlgorithmNames.HmacSha384");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string HmacSha512
		{
			get
			{
				throw new global::System.NotImplementedException("The member string MacAlgorithmNames.HmacSha512 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20MacAlgorithmNames.HmacSha512");
			}
		}
#endif
		// Forced skipping of method Windows.Security.Cryptography.Core.MacAlgorithmNames.HmacMd5.get
		// Forced skipping of method Windows.Security.Cryptography.Core.MacAlgorithmNames.HmacSha1.get
		// Forced skipping of method Windows.Security.Cryptography.Core.MacAlgorithmNames.HmacSha256.get
		// Forced skipping of method Windows.Security.Cryptography.Core.MacAlgorithmNames.HmacSha384.get
		// Forced skipping of method Windows.Security.Cryptography.Core.MacAlgorithmNames.HmacSha512.get
		// Forced skipping of method Windows.Security.Cryptography.Core.MacAlgorithmNames.AesCmac.get
	}
}
