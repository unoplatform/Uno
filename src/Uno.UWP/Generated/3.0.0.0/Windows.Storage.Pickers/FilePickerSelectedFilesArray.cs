// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Storage.Pickers
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class FilePickerSelectedFilesArray : global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>, global::System.Collections.Generic.IEnumerable<global::Windows.Storage.StorageFile>
	{
		// Skipping already declared property Size
		// Forced skipping of method Windows.Storage.Pickers.FilePickerSelectedFilesArray.GetAt(uint)
		// Forced skipping of method Windows.Storage.Pickers.FilePickerSelectedFilesArray.Size.get
		// Forced skipping of method Windows.Storage.Pickers.FilePickerSelectedFilesArray.IndexOf(Windows.Storage.StorageFile, out uint)
		// Forced skipping of method Windows.Storage.Pickers.FilePickerSelectedFilesArray.GetMany(uint, Windows.Storage.StorageFile[])
		// Forced skipping of method Windows.Storage.Pickers.FilePickerSelectedFilesArray.First()
		// Processing: System.Collections.Generic.IReadOnlyList<Windows.Storage.StorageFile>
		// Skipping already implement System.Collections.Generic.IReadOnlyList<Windows.Storage.StorageFile>.this[int]
		// Processing: System.Collections.Generic.IEnumerable<Windows.Storage.StorageFile>
		// Processing: System.Collections.IEnumerable
		// Processing: System.Collections.Generic.IReadOnlyCollection<Windows.Storage.StorageFile>
		// Skipping already implement System.Collections.Generic.IReadOnlyCollection<Windows.Storage.StorageFile>.Count
	}
}
