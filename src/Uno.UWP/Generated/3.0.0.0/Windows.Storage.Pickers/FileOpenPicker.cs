// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Storage.Pickers
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class FileOpenPicker
	{
		// Skipping already declared property ViewMode
		// Skipping already declared property SuggestedStartLocation
		// Skipping already declared property SettingsIdentifier
		// Skipping already declared property CommitButtonText
		// Skipping already declared property FileTypeFilter
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Collections.ValueSet ContinuationData
		{
			get
			{
				throw new global::System.NotImplementedException("The member ValueSet FileOpenPicker.ContinuationData is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ValueSet%20FileOpenPicker.ContinuationData");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.System.User User
		{
			get
			{
				throw new global::System.NotImplementedException("The member User FileOpenPicker.User is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=User%20FileOpenPicker.User");
			}
		}
#endif
		// Skipping already declared method Windows.Storage.Pickers.FileOpenPicker.FileOpenPicker()
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.FileOpenPicker()
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.ContinuationData.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void PickSingleFileAndContinue()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Pickers.FileOpenPicker", "void FileOpenPicker.PickSingleFileAndContinue()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void PickMultipleFilesAndContinue()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Storage.Pickers.FileOpenPicker", "void FileOpenPicker.PickMultipleFilesAndContinue()");
		}
#endif
#if false || false || IS_UNIT_TESTS || false || false || __NETSTD_REFERENCE__ || false
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__NETSTD_REFERENCE__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> PickSingleFileAsync(string pickerOperationId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageFile> FileOpenPicker.PickSingleFileAsync(string pickerOperationId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageFile%3E%20FileOpenPicker.PickSingleFileAsync%28string%20pickerOperationId%29");
		}
#endif
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.ViewMode.get
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.ViewMode.set
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.SettingsIdentifier.get
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.SettingsIdentifier.set
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.SuggestedStartLocation.get
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.SuggestedStartLocation.set
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.CommitButtonText.get
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.CommitButtonText.set
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.FileTypeFilter.get
#if false || false || IS_UNIT_TESTS || false || false || __NETSTD_REFERENCE__ || false
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__NETSTD_REFERENCE__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> PickSingleFileAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageFile> FileOpenPicker.PickSingleFileAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageFile%3E%20FileOpenPicker.PickSingleFileAsync%28%29");
		}
#endif
#if false || false || IS_UNIT_TESTS || false || false || __NETSTD_REFERENCE__ || false
		[global::Uno.NotImplemented("IS_UNIT_TESTS", "__NETSTD_REFERENCE__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> PickMultipleFilesAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<StorageFile>> FileOpenPicker.PickMultipleFilesAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CStorageFile%3E%3E%20FileOpenPicker.PickMultipleFilesAsync%28%29");
		}
#endif
		// Forced skipping of method Windows.Storage.Pickers.FileOpenPicker.User.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Storage.Pickers.FileOpenPicker CreateForUser(global::Windows.System.User user)
		{
			throw new global::System.NotImplementedException("The member FileOpenPicker FileOpenPicker.CreateForUser(User user) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=FileOpenPicker%20FileOpenPicker.CreateForUser%28User%20user%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> ResumePickSingleFileAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StorageFile> FileOpenPicker.ResumePickSingleFileAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStorageFile%3E%20FileOpenPicker.ResumePickSingleFileAsync%28%29");
		}
#endif
	}
}
