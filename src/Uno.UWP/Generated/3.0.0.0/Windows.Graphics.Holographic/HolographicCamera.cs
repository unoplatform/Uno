// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Graphics.Holographic
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class HolographicCamera
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal HolographicCamera()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double ViewportScaleFactor
		{
			get
			{
				throw new global::System.NotImplementedException("The member double HolographicCamera.ViewportScaleFactor is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20HolographicCamera.ViewportScaleFactor");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Graphics.Holographic.HolographicCamera", "double HolographicCamera.ViewportScaleFactor");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint Id
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint HolographicCamera.Id is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20HolographicCamera.Id");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsStereo
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool HolographicCamera.IsStereo is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HolographicCamera.IsStereo");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Size RenderTargetSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member Size HolographicCamera.RenderTargetSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Size%20HolographicCamera.RenderTargetSize");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Graphics.Holographic.HolographicDisplay Display
		{
			get
			{
				throw new global::System.NotImplementedException("The member HolographicDisplay HolographicCamera.Display is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HolographicDisplay%20HolographicCamera.Display");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Graphics.Holographic.HolographicCameraViewportParameters LeftViewportParameters
		{
			get
			{
				throw new global::System.NotImplementedException("The member HolographicCameraViewportParameters HolographicCamera.LeftViewportParameters is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HolographicCameraViewportParameters%20HolographicCamera.LeftViewportParameters");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Graphics.Holographic.HolographicCameraViewportParameters RightViewportParameters
		{
			get
			{
				throw new global::System.NotImplementedException("The member HolographicCameraViewportParameters HolographicCamera.RightViewportParameters is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HolographicCameraViewportParameters%20HolographicCamera.RightViewportParameters");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsPrimaryLayerEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool HolographicCamera.IsPrimaryLayerEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HolographicCamera.IsPrimaryLayerEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Graphics.Holographic.HolographicCamera", "bool HolographicCamera.IsPrimaryLayerEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint MaxQuadLayerCount
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint HolographicCamera.MaxQuadLayerCount is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20HolographicCamera.MaxQuadLayerCount");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Windows.Graphics.Holographic.HolographicQuadLayer> QuadLayers
		{
			get
			{
				throw new global::System.NotImplementedException("The member IList<HolographicQuadLayer> HolographicCamera.QuadLayers is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IList%3CHolographicQuadLayer%3E%20HolographicCamera.QuadLayers");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool CanOverrideViewport
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool HolographicCamera.CanOverrideViewport is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HolographicCamera.CanOverrideViewport");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsHardwareContentProtectionEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool HolographicCamera.IsHardwareContentProtectionEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HolographicCamera.IsHardwareContentProtectionEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Graphics.Holographic.HolographicCamera", "bool HolographicCamera.IsHardwareContentProtectionEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsHardwareContentProtectionSupported
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool HolographicCamera.IsHardwareContentProtectionSupported is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20HolographicCamera.IsHardwareContentProtectionSupported");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Graphics.Holographic.HolographicViewConfiguration ViewConfiguration
		{
			get
			{
				throw new global::System.NotImplementedException("The member HolographicViewConfiguration HolographicCamera.ViewConfiguration is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=HolographicViewConfiguration%20HolographicCamera.ViewConfiguration");
			}
		}
#endif
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.RenderTargetSize.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.ViewportScaleFactor.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.ViewportScaleFactor.set
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.IsStereo.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.Id.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetNearPlaneDistance(double value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Graphics.Holographic.HolographicCamera", "void HolographicCamera.SetNearPlaneDistance(double value)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void SetFarPlaneDistance(double value)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Graphics.Holographic.HolographicCamera", "void HolographicCamera.SetFarPlaneDistance(double value)");
		}
#endif
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.LeftViewportParameters.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.RightViewportParameters.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.Display.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.IsPrimaryLayerEnabled.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.IsPrimaryLayerEnabled.set
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.MaxQuadLayerCount.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.QuadLayers.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.CanOverrideViewport.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.IsHardwareContentProtectionSupported.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.IsHardwareContentProtectionEnabled.get
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.IsHardwareContentProtectionEnabled.set
		// Forced skipping of method Windows.Graphics.Holographic.HolographicCamera.ViewConfiguration.get
	}
}
