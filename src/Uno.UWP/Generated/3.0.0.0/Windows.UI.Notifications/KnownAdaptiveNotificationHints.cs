// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.UI.Notifications
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public static partial class KnownAdaptiveNotificationHints
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Align
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KnownAdaptiveNotificationHints.Align is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KnownAdaptiveNotificationHints.Align");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string MaxLines
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KnownAdaptiveNotificationHints.MaxLines is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KnownAdaptiveNotificationHints.MaxLines");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string MinLines
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KnownAdaptiveNotificationHints.MinLines is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KnownAdaptiveNotificationHints.MinLines");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Style
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KnownAdaptiveNotificationHints.Style is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KnownAdaptiveNotificationHints.Style");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string TextStacking
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KnownAdaptiveNotificationHints.TextStacking is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KnownAdaptiveNotificationHints.TextStacking");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Wrap
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KnownAdaptiveNotificationHints.Wrap is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KnownAdaptiveNotificationHints.Wrap");
			}
		}
#endif
		// Forced skipping of method Windows.UI.Notifications.KnownAdaptiveNotificationHints.Style.get
		// Forced skipping of method Windows.UI.Notifications.KnownAdaptiveNotificationHints.Wrap.get
		// Forced skipping of method Windows.UI.Notifications.KnownAdaptiveNotificationHints.MaxLines.get
		// Forced skipping of method Windows.UI.Notifications.KnownAdaptiveNotificationHints.MinLines.get
		// Forced skipping of method Windows.UI.Notifications.KnownAdaptiveNotificationHints.TextStacking.get
		// Forced skipping of method Windows.UI.Notifications.KnownAdaptiveNotificationHints.Align.get
	}
}
