// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.WiFi
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class WiFiAvailableNetwork
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal WiFiAvailableNetwork()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan BeaconInterval
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan WiFiAvailableNetwork.BeaconInterval is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20WiFiAvailableNetwork.BeaconInterval");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Bssid
		{
			get
			{
				throw new global::System.NotImplementedException("The member string WiFiAvailableNetwork.Bssid is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20WiFiAvailableNetwork.Bssid");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int ChannelCenterFrequencyInKilohertz
		{
			get
			{
				throw new global::System.NotImplementedException("The member int WiFiAvailableNetwork.ChannelCenterFrequencyInKilohertz is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20WiFiAvailableNetwork.ChannelCenterFrequencyInKilohertz");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsWiFiDirect
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool WiFiAvailableNetwork.IsWiFiDirect is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20WiFiAvailableNetwork.IsWiFiDirect");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.WiFi.WiFiNetworkKind NetworkKind
		{
			get
			{
				throw new global::System.NotImplementedException("The member WiFiNetworkKind WiFiAvailableNetwork.NetworkKind is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=WiFiNetworkKind%20WiFiAvailableNetwork.NetworkKind");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double NetworkRssiInDecibelMilliwatts
		{
			get
			{
				throw new global::System.NotImplementedException("The member double WiFiAvailableNetwork.NetworkRssiInDecibelMilliwatts is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=double%20WiFiAvailableNetwork.NetworkRssiInDecibelMilliwatts");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.WiFi.WiFiPhyKind PhyKind
		{
			get
			{
				throw new global::System.NotImplementedException("The member WiFiPhyKind WiFiAvailableNetwork.PhyKind is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=WiFiPhyKind%20WiFiAvailableNetwork.PhyKind");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Networking.Connectivity.NetworkSecuritySettings SecuritySettings
		{
			get
			{
				throw new global::System.NotImplementedException("The member NetworkSecuritySettings WiFiAvailableNetwork.SecuritySettings is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=NetworkSecuritySettings%20WiFiAvailableNetwork.SecuritySettings");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public byte SignalBars
		{
			get
			{
				throw new global::System.NotImplementedException("The member byte WiFiAvailableNetwork.SignalBars is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=byte%20WiFiAvailableNetwork.SignalBars");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string Ssid
		{
			get
			{
				throw new global::System.NotImplementedException("The member string WiFiAvailableNetwork.Ssid is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20WiFiAvailableNetwork.Ssid");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan Uptime
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan WiFiAvailableNetwork.Uptime is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20WiFiAvailableNetwork.Uptime");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.WiFi.WiFiAvailableNetwork.Uptime.get
		// Forced skipping of method Windows.Devices.WiFi.WiFiAvailableNetwork.Ssid.get
		// Forced skipping of method Windows.Devices.WiFi.WiFiAvailableNetwork.Bssid.get
		// Forced skipping of method Windows.Devices.WiFi.WiFiAvailableNetwork.ChannelCenterFrequencyInKilohertz.get
		// Forced skipping of method Windows.Devices.WiFi.WiFiAvailableNetwork.NetworkRssiInDecibelMilliwatts.get
		// Forced skipping of method Windows.Devices.WiFi.WiFiAvailableNetwork.SignalBars.get
		// Forced skipping of method Windows.Devices.WiFi.WiFiAvailableNetwork.NetworkKind.get
		// Forced skipping of method Windows.Devices.WiFi.WiFiAvailableNetwork.PhyKind.get
		// Forced skipping of method Windows.Devices.WiFi.WiFiAvailableNetwork.SecuritySettings.get
		// Forced skipping of method Windows.Devices.WiFi.WiFiAvailableNetwork.BeaconInterval.get
		// Forced skipping of method Windows.Devices.WiFi.WiFiAvailableNetwork.IsWiFiDirect.get
	}
}
