// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.ApplicationModel.Store.Preview.InstallControl
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class AppInstallManager
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.ApplicationModel.Store.Preview.InstallControl.AutoUpdateSetting AutoUpdateSetting
		{
			get
			{
				throw new global::System.NotImplementedException("The member AutoUpdateSetting AppInstallManager.AutoUpdateSetting is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=AutoUpdateSetting%20AppInstallManager.AutoUpdateSetting");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "AutoUpdateSetting AppInstallManager.AutoUpdateSetting");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public string AcquisitionIdentity
		{
			get
			{
				throw new global::System.NotImplementedException("The member string AppInstallManager.AcquisitionIdentity is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20AppInstallManager.AcquisitionIdentity");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "string AppInstallManager.AcquisitionIdentity");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> AppInstallItems
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<AppInstallItem> AppInstallManager.AppInstallItems is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CAppInstallItem%3E%20AppInstallManager.AppInstallItems");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> AppInstallItemsWithGroupSupport
		{
			get
			{
				throw new global::System.NotImplementedException("The member IReadOnlyList<AppInstallItem> AppInstallManager.AppInstallItemsWithGroupSupport is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IReadOnlyList%3CAppInstallItem%3E%20AppInstallManager.AppInstallItemsWithGroupSupport");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool CanInstallForAllUsers
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool AppInstallManager.CanInstallForAllUsers is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20AppInstallManager.CanInstallForAllUsers");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public AppInstallManager()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "AppInstallManager.AppInstallManager()");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.AppInstallManager()
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.AppInstallItems.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Cancel(string productId)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "void AppInstallManager.Cancel(string productId)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Pause(string productId)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "void AppInstallManager.Pause(string productId)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Restart(string productId)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "void AppInstallManager.Restart(string productId)");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.ItemCompleted.add
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.ItemCompleted.remove
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.ItemStatusChanged.add
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.ItemStatusChanged.remove
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.AutoUpdateSetting.get
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.AutoUpdateSetting.set
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.AcquisitionIdentity.get
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.AcquisitionIdentity.set
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<bool> GetIsApplicableAsync(string productId, string skuId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> AppInstallManager.GetIsApplicableAsync(string productId, string skuId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20AppInstallManager.GetIsApplicableAsync%28string%20productId%2C%20string%20skuId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> StartAppInstallAsync(string productId, string skuId, bool repair, bool forceUseOfNonRemovableStorage)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<AppInstallItem> AppInstallManager.StartAppInstallAsync(string productId, string skuId, bool repair, bool forceUseOfNonRemovableStorage) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CAppInstallItem%3E%20AppInstallManager.StartAppInstallAsync%28string%20productId%2C%20string%20skuId%2C%20bool%20repair%2C%20bool%20forceUseOfNonRemovableStorage%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> UpdateAppByPackageFamilyNameAsync(string packageFamilyName)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<AppInstallItem> AppInstallManager.UpdateAppByPackageFamilyNameAsync(string packageFamilyName) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CAppInstallItem%3E%20AppInstallManager.UpdateAppByPackageFamilyNameAsync%28string%20packageFamilyName%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> SearchForUpdatesAsync(string productId, string skuId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<AppInstallItem> AppInstallManager.SearchForUpdatesAsync(string productId, string skuId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CAppInstallItem%3E%20AppInstallManager.SearchForUpdatesAsync%28string%20productId%2C%20string%20skuId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>> SearchForAllUpdatesAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<AppInstallItem>> AppInstallManager.SearchForAllUpdatesAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CAppInstallItem%3E%3E%20AppInstallManager.SearchForAllUpdatesAsync%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<bool> IsStoreBlockedByPolicyAsync(string storeClientName, string storeClientPublisher)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> AppInstallManager.IsStoreBlockedByPolicyAsync(string storeClientName, string storeClientPublisher) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20AppInstallManager.IsStoreBlockedByPolicyAsync%28string%20storeClientName%2C%20string%20storeClientPublisher%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<bool> GetIsAppAllowedToInstallAsync(string productId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> AppInstallManager.GetIsAppAllowedToInstallAsync(string productId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20AppInstallManager.GetIsAppAllowedToInstallAsync%28string%20productId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> StartAppInstallAsync(string productId, string skuId, bool repair, bool forceUseOfNonRemovableStorage, string catalogId, string bundleId, string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<AppInstallItem> AppInstallManager.StartAppInstallAsync(string productId, string skuId, bool repair, bool forceUseOfNonRemovableStorage, string catalogId, string bundleId, string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CAppInstallItem%3E%20AppInstallManager.StartAppInstallAsync%28string%20productId%2C%20string%20skuId%2C%20bool%20repair%2C%20bool%20forceUseOfNonRemovableStorage%2C%20string%20catalogId%2C%20string%20bundleId%2C%20string%20correlationVector%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> UpdateAppByPackageFamilyNameAsync(string packageFamilyName, string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<AppInstallItem> AppInstallManager.UpdateAppByPackageFamilyNameAsync(string packageFamilyName, string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CAppInstallItem%3E%20AppInstallManager.UpdateAppByPackageFamilyNameAsync%28string%20packageFamilyName%2C%20string%20correlationVector%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> SearchForUpdatesAsync(string productId, string skuId, string catalogId, string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<AppInstallItem> AppInstallManager.SearchForUpdatesAsync(string productId, string skuId, string catalogId, string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CAppInstallItem%3E%20AppInstallManager.SearchForUpdatesAsync%28string%20productId%2C%20string%20skuId%2C%20string%20catalogId%2C%20string%20correlationVector%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>> SearchForAllUpdatesAsync(string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<AppInstallItem>> AppInstallManager.SearchForAllUpdatesAsync(string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CAppInstallItem%3E%3E%20AppInstallManager.SearchForAllUpdatesAsync%28string%20correlationVector%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<bool> GetIsAppAllowedToInstallAsync(string productId, string skuId, string catalogId, string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> AppInstallManager.GetIsAppAllowedToInstallAsync(string productId, string skuId, string catalogId, string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20AppInstallManager.GetIsAppAllowedToInstallAsync%28string%20productId%2C%20string%20skuId%2C%20string%20catalogId%2C%20string%20correlationVector%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Cancel(string productId, string correlationVector)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "void AppInstallManager.Cancel(string productId, string correlationVector)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Pause(string productId, string correlationVector)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "void AppInstallManager.Pause(string productId, string correlationVector)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Restart(string productId, string correlationVector)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "void AppInstallManager.Restart(string productId, string correlationVector)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>> StartProductInstallAsync(string productId, string catalogId, string flightId, string clientId, bool repair, bool forceUseOfNonRemovableStorage, string correlationVector, global::Windows.Management.Deployment.PackageVolume targetVolume)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<AppInstallItem>> AppInstallManager.StartProductInstallAsync(string productId, string catalogId, string flightId, string clientId, bool repair, bool forceUseOfNonRemovableStorage, string correlationVector, PackageVolume targetVolume) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CAppInstallItem%3E%3E%20AppInstallManager.StartProductInstallAsync%28string%20productId%2C%20string%20catalogId%2C%20string%20flightId%2C%20string%20clientId%2C%20bool%20repair%2C%20bool%20forceUseOfNonRemovableStorage%2C%20string%20correlationVector%2C%20PackageVolume%20targetVolume%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>> StartProductInstallForUserAsync(global::Windows.System.User user, string productId, string catalogId, string flightId, string clientId, bool repair, bool forceUseOfNonRemovableStorage, string correlationVector, global::Windows.Management.Deployment.PackageVolume targetVolume)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<AppInstallItem>> AppInstallManager.StartProductInstallForUserAsync(User user, string productId, string catalogId, string flightId, string clientId, bool repair, bool forceUseOfNonRemovableStorage, string correlationVector, PackageVolume targetVolume) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CAppInstallItem%3E%3E%20AppInstallManager.StartProductInstallForUserAsync%28User%20user%2C%20string%20productId%2C%20string%20catalogId%2C%20string%20flightId%2C%20string%20clientId%2C%20bool%20repair%2C%20bool%20forceUseOfNonRemovableStorage%2C%20string%20correlationVector%2C%20PackageVolume%20targetVolume%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> UpdateAppByPackageFamilyNameForUserAsync(global::Windows.System.User user, string packageFamilyName, string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<AppInstallItem> AppInstallManager.UpdateAppByPackageFamilyNameForUserAsync(User user, string packageFamilyName, string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CAppInstallItem%3E%20AppInstallManager.UpdateAppByPackageFamilyNameForUserAsync%28User%20user%2C%20string%20packageFamilyName%2C%20string%20correlationVector%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> SearchForUpdatesForUserAsync(global::Windows.System.User user, string productId, string skuId, string catalogId, string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<AppInstallItem> AppInstallManager.SearchForUpdatesForUserAsync(User user, string productId, string skuId, string catalogId, string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CAppInstallItem%3E%20AppInstallManager.SearchForUpdatesForUserAsync%28User%20user%2C%20string%20productId%2C%20string%20skuId%2C%20string%20catalogId%2C%20string%20correlationVector%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>> SearchForAllUpdatesForUserAsync(global::Windows.System.User user, string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<AppInstallItem>> AppInstallManager.SearchForAllUpdatesForUserAsync(User user, string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CAppInstallItem%3E%3E%20AppInstallManager.SearchForAllUpdatesForUserAsync%28User%20user%2C%20string%20correlationVector%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<bool> GetIsAppAllowedToInstallForUserAsync(global::Windows.System.User user, string productId, string skuId, string catalogId, string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> AppInstallManager.GetIsAppAllowedToInstallForUserAsync(User user, string productId, string skuId, string catalogId, string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20AppInstallManager.GetIsAppAllowedToInstallForUserAsync%28User%20user%2C%20string%20productId%2C%20string%20skuId%2C%20string%20catalogId%2C%20string%20correlationVector%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<bool> GetIsApplicableForUserAsync(global::Windows.System.User user, string productId, string skuId)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> AppInstallManager.GetIsApplicableForUserAsync(User user, string productId, string skuId) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20AppInstallManager.GetIsApplicableForUserAsync%28User%20user%2C%20string%20productId%2C%20string%20skuId%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void MoveToFrontOfDownloadQueue(string productId, string correlationVector)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "void AppInstallManager.MoveToFrontOfDownloadQueue(string productId, string correlationVector)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.GetEntitlementResult> GetFreeUserEntitlementAsync(string storeId, string campaignId, string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<GetEntitlementResult> AppInstallManager.GetFreeUserEntitlementAsync(string storeId, string campaignId, string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CGetEntitlementResult%3E%20AppInstallManager.GetFreeUserEntitlementAsync%28string%20storeId%2C%20string%20campaignId%2C%20string%20correlationVector%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.GetEntitlementResult> GetFreeUserEntitlementForUserAsync(global::Windows.System.User user, string storeId, string campaignId, string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<GetEntitlementResult> AppInstallManager.GetFreeUserEntitlementForUserAsync(User user, string storeId, string campaignId, string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CGetEntitlementResult%3E%20AppInstallManager.GetFreeUserEntitlementForUserAsync%28User%20user%2C%20string%20storeId%2C%20string%20campaignId%2C%20string%20correlationVector%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.GetEntitlementResult> GetFreeDeviceEntitlementAsync(string storeId, string campaignId, string correlationVector)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<GetEntitlementResult> AppInstallManager.GetFreeDeviceEntitlementAsync(string storeId, string campaignId, string correlationVector) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CGetEntitlementResult%3E%20AppInstallManager.GetFreeDeviceEntitlementAsync%28string%20storeId%2C%20string%20campaignId%2C%20string%20correlationVector%29");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.AppInstallItemsWithGroupSupport.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>> SearchForAllUpdatesAsync(string correlationVector, string clientId, global::Windows.ApplicationModel.Store.Preview.InstallControl.AppUpdateOptions updateOptions)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<AppInstallItem>> AppInstallManager.SearchForAllUpdatesAsync(string correlationVector, string clientId, AppUpdateOptions updateOptions) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CAppInstallItem%3E%3E%20AppInstallManager.SearchForAllUpdatesAsync%28string%20correlationVector%2C%20string%20clientId%2C%20AppUpdateOptions%20updateOptions%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>> SearchForAllUpdatesForUserAsync(global::Windows.System.User user, string correlationVector, string clientId, global::Windows.ApplicationModel.Store.Preview.InstallControl.AppUpdateOptions updateOptions)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<AppInstallItem>> AppInstallManager.SearchForAllUpdatesForUserAsync(User user, string correlationVector, string clientId, AppUpdateOptions updateOptions) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CAppInstallItem%3E%3E%20AppInstallManager.SearchForAllUpdatesForUserAsync%28User%20user%2C%20string%20correlationVector%2C%20string%20clientId%2C%20AppUpdateOptions%20updateOptions%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> SearchForUpdatesAsync(string productId, string skuId, string correlationVector, string clientId, global::Windows.ApplicationModel.Store.Preview.InstallControl.AppUpdateOptions updateOptions)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<AppInstallItem> AppInstallManager.SearchForUpdatesAsync(string productId, string skuId, string correlationVector, string clientId, AppUpdateOptions updateOptions) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CAppInstallItem%3E%20AppInstallManager.SearchForUpdatesAsync%28string%20productId%2C%20string%20skuId%2C%20string%20correlationVector%2C%20string%20clientId%2C%20AppUpdateOptions%20updateOptions%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem> SearchForUpdatesForUserAsync(global::Windows.System.User user, string productId, string skuId, string correlationVector, string clientId, global::Windows.ApplicationModel.Store.Preview.InstallControl.AppUpdateOptions updateOptions)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<AppInstallItem> AppInstallManager.SearchForUpdatesForUserAsync(User user, string productId, string skuId, string correlationVector, string clientId, AppUpdateOptions updateOptions) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CAppInstallItem%3E%20AppInstallManager.SearchForUpdatesForUserAsync%28User%20user%2C%20string%20productId%2C%20string%20skuId%2C%20string%20correlationVector%2C%20string%20clientId%2C%20AppUpdateOptions%20updateOptions%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>> StartProductInstallAsync(string productId, string flightId, string clientId, string correlationVector, global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallOptions installOptions)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<AppInstallItem>> AppInstallManager.StartProductInstallAsync(string productId, string flightId, string clientId, string correlationVector, AppInstallOptions installOptions) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CAppInstallItem%3E%3E%20AppInstallManager.StartProductInstallAsync%28string%20productId%2C%20string%20flightId%2C%20string%20clientId%2C%20string%20correlationVector%2C%20AppInstallOptions%20installOptions%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem>> StartProductInstallForUserAsync(global::Windows.System.User user, string productId, string flightId, string clientId, string correlationVector, global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallOptions installOptions)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<AppInstallItem>> AppInstallManager.StartProductInstallForUserAsync(User user, string productId, string flightId, string clientId, string correlationVector, AppInstallOptions installOptions) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CAppInstallItem%3E%3E%20AppInstallManager.StartProductInstallForUserAsync%28User%20user%2C%20string%20productId%2C%20string%20flightId%2C%20string%20clientId%2C%20string%20correlationVector%2C%20AppInstallOptions%20installOptions%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<bool> GetIsPackageIdentityAllowedToInstallAsync(string correlationVector, string packageIdentityName, string publisherCertificateName)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> AppInstallManager.GetIsPackageIdentityAllowedToInstallAsync(string correlationVector, string packageIdentityName, string publisherCertificateName) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20AppInstallManager.GetIsPackageIdentityAllowedToInstallAsync%28string%20correlationVector%2C%20string%20packageIdentityName%2C%20string%20publisherCertificateName%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.IAsyncOperation<bool> GetIsPackageIdentityAllowedToInstallForUserAsync(global::Windows.System.User user, string correlationVector, string packageIdentityName, string publisherCertificateName)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<bool> AppInstallManager.GetIsPackageIdentityAllowedToInstallForUserAsync(User user, string correlationVector, string packageIdentityName, string publisherCertificateName) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3Cbool%3E%20AppInstallManager.GetIsPackageIdentityAllowedToInstallForUserAsync%28User%20user%2C%20string%20correlationVector%2C%20string%20packageIdentityName%2C%20string%20publisherCertificateName%29");
		}
#endif
		// Forced skipping of method Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager.CanInstallForAllUsers.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager, global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManagerItemEventArgs> ItemCompleted
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "event TypedEventHandler<AppInstallManager, AppInstallManagerItemEventArgs> AppInstallManager.ItemCompleted");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "event TypedEventHandler<AppInstallManager, AppInstallManagerItemEventArgs> AppInstallManager.ItemCompleted");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager, global::Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManagerItemEventArgs> ItemStatusChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "event TypedEventHandler<AppInstallManager, AppInstallManagerItemEventArgs> AppInstallManager.ItemStatusChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager", "event TypedEventHandler<AppInstallManager, AppInstallManagerItemEventArgs> AppInstallManager.ItemStatusChanged");
			}
		}
#endif
	}
}
