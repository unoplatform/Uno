// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Security.Cryptography.Certificates
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public static partial class KeyAlgorithmNames
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Dsa
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KeyAlgorithmNames.Dsa is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KeyAlgorithmNames.Dsa");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Ecdh256
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KeyAlgorithmNames.Ecdh256 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KeyAlgorithmNames.Ecdh256");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Ecdh384
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KeyAlgorithmNames.Ecdh384 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KeyAlgorithmNames.Ecdh384");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Ecdh521
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KeyAlgorithmNames.Ecdh521 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KeyAlgorithmNames.Ecdh521");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Ecdsa256
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KeyAlgorithmNames.Ecdsa256 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KeyAlgorithmNames.Ecdsa256");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Ecdsa384
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KeyAlgorithmNames.Ecdsa384 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KeyAlgorithmNames.Ecdsa384");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Ecdsa521
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KeyAlgorithmNames.Ecdsa521 is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KeyAlgorithmNames.Ecdsa521");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Rsa
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KeyAlgorithmNames.Rsa is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KeyAlgorithmNames.Rsa");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Ecdh
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KeyAlgorithmNames.Ecdh is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KeyAlgorithmNames.Ecdh");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string Ecdsa
		{
			get
			{
				throw new global::System.NotImplementedException("The member string KeyAlgorithmNames.Ecdsa is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20KeyAlgorithmNames.Ecdsa");
			}
		}
#endif
		// Forced skipping of method Windows.Security.Cryptography.Certificates.KeyAlgorithmNames.Ecdsa.get
		// Forced skipping of method Windows.Security.Cryptography.Certificates.KeyAlgorithmNames.Ecdh.get
		// Forced skipping of method Windows.Security.Cryptography.Certificates.KeyAlgorithmNames.Rsa.get
		// Forced skipping of method Windows.Security.Cryptography.Certificates.KeyAlgorithmNames.Dsa.get
		// Forced skipping of method Windows.Security.Cryptography.Certificates.KeyAlgorithmNames.Ecdh256.get
		// Forced skipping of method Windows.Security.Cryptography.Certificates.KeyAlgorithmNames.Ecdh384.get
		// Forced skipping of method Windows.Security.Cryptography.Certificates.KeyAlgorithmNames.Ecdh521.get
		// Forced skipping of method Windows.Security.Cryptography.Certificates.KeyAlgorithmNames.Ecdsa256.get
		// Forced skipping of method Windows.Security.Cryptography.Certificates.KeyAlgorithmNames.Ecdsa384.get
		// Forced skipping of method Windows.Security.Cryptography.Certificates.KeyAlgorithmNames.Ecdsa521.get
	}
}
