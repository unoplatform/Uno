// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Networking.Proximity
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public static partial class PeerFinder
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static string DisplayName
		{
			get
			{
				throw new global::System.NotImplementedException("The member string PeerFinder.DisplayName is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=string%20PeerFinder.DisplayName");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "string PeerFinder.DisplayName");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static bool AllowWiFiDirect
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PeerFinder.AllowWiFiDirect is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PeerFinder.AllowWiFiDirect");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "bool PeerFinder.AllowWiFiDirect");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static bool AllowInfrastructure
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PeerFinder.AllowInfrastructure is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PeerFinder.AllowInfrastructure");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "bool PeerFinder.AllowInfrastructure");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static bool AllowBluetooth
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool PeerFinder.AllowBluetooth is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20PeerFinder.AllowBluetooth");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "bool PeerFinder.AllowBluetooth");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::System.Collections.Generic.IDictionary<string, string> AlternateIdentities
		{
			get
			{
				throw new global::System.NotImplementedException("The member IDictionary<string, string> PeerFinder.AlternateIdentities is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IDictionary%3Cstring%2C%20string%3E%20PeerFinder.AlternateIdentities");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Networking.Proximity.PeerDiscoveryTypes SupportedDiscoveryTypes
		{
			get
			{
				throw new global::System.NotImplementedException("The member PeerDiscoveryTypes PeerFinder.SupportedDiscoveryTypes is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PeerDiscoveryTypes%20PeerFinder.SupportedDiscoveryTypes");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Networking.Proximity.PeerRole Role
		{
			get
			{
				throw new global::System.NotImplementedException("The member PeerRole PeerFinder.Role is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PeerRole%20PeerFinder.Role");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "PeerRole PeerFinder.Role");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Storage.Streams.IBuffer DiscoveryData
		{
			get
			{
				throw new global::System.NotImplementedException("The member IBuffer PeerFinder.DiscoveryData is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IBuffer%20PeerFinder.DiscoveryData");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "IBuffer PeerFinder.DiscoveryData");
			}
		}
#endif
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.Role.get
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.Role.set
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.DiscoveryData.get
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.DiscoveryData.set
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Networking.Proximity.PeerWatcher CreateWatcher()
		{
			throw new global::System.NotImplementedException("The member PeerWatcher PeerFinder.CreateWatcher() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=PeerWatcher%20PeerFinder.CreateWatcher%28%29");
		}
#endif
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.AllowBluetooth.get
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.AllowBluetooth.set
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.AllowInfrastructure.get
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.AllowInfrastructure.set
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.AllowWiFiDirect.get
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.AllowWiFiDirect.set
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.DisplayName.get
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.DisplayName.set
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.SupportedDiscoveryTypes.get
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.AlternateIdentities.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static void Start()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "void PeerFinder.Start()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static void Start(string peerMessage)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "void PeerFinder.Start(string peerMessage)");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static void Stop()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "void PeerFinder.Stop()");
		}
#endif
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.TriggeredConnectionStateChanged.add
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.TriggeredConnectionStateChanged.remove
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.ConnectionRequested.add
		// Forced skipping of method Windows.Networking.Proximity.PeerFinder.ConnectionRequested.remove
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Networking.Proximity.PeerInformation>> FindAllPeersAsync()
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<IReadOnlyList<PeerInformation>> PeerFinder.FindAllPeersAsync() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CIReadOnlyList%3CPeerInformation%3E%3E%20PeerFinder.FindAllPeersAsync%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Networking.Sockets.StreamSocket> ConnectAsync(global::Windows.Networking.Proximity.PeerInformation peerInformation)
		{
			throw new global::System.NotImplementedException("The member IAsyncOperation<StreamSocket> PeerFinder.ConnectAsync(PeerInformation peerInformation) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IAsyncOperation%3CStreamSocket%3E%20PeerFinder.ConnectAsync%28PeerInformation%20peerInformation%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static event global::Windows.Foundation.TypedEventHandler<object, global::Windows.Networking.Proximity.ConnectionRequestedEventArgs> ConnectionRequested
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "event TypedEventHandler<object, ConnectionRequestedEventArgs> PeerFinder.ConnectionRequested");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "event TypedEventHandler<object, ConnectionRequestedEventArgs> PeerFinder.ConnectionRequested");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static event global::Windows.Foundation.TypedEventHandler<object, global::Windows.Networking.Proximity.TriggeredConnectionStateChangedEventArgs> TriggeredConnectionStateChanged
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "event TypedEventHandler<object, TriggeredConnectionStateChangedEventArgs> PeerFinder.TriggeredConnectionStateChanged");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Windows.Networking.Proximity.PeerFinder", "event TypedEventHandler<object, TriggeredConnectionStateChangedEventArgs> PeerFinder.TriggeredConnectionStateChanged");
			}
		}
#endif
	}
}
