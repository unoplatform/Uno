// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Windows.Devices.Lights
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class LampInfo
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal LampInfo()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int BlueLevelCount
		{
			get
			{
				throw new global::System.NotImplementedException("The member int LampInfo.BlueLevelCount is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20LampInfo.BlueLevelCount");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Color? FixedColor
		{
			get
			{
				throw new global::System.NotImplementedException("The member Color? LampInfo.FixedColor is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Color%3F%20LampInfo.FixedColor");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int GainLevelCount
		{
			get
			{
				throw new global::System.NotImplementedException("The member int LampInfo.GainLevelCount is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20LampInfo.GainLevelCount");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int GreenLevelCount
		{
			get
			{
				throw new global::System.NotImplementedException("The member int LampInfo.GreenLevelCount is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20LampInfo.GreenLevelCount");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int Index
		{
			get
			{
				throw new global::System.NotImplementedException("The member int LampInfo.Index is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20LampInfo.Index");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Numerics.Vector3 Position
		{
			get
			{
				throw new global::System.NotImplementedException("The member Vector3 LampInfo.Position is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Vector3%20LampInfo.Position");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Devices.Lights.LampPurposes Purposes
		{
			get
			{
				throw new global::System.NotImplementedException("The member LampPurposes LampInfo.Purposes is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=LampPurposes%20LampInfo.Purposes");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int RedLevelCount
		{
			get
			{
				throw new global::System.NotImplementedException("The member int LampInfo.RedLevelCount is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20LampInfo.RedLevelCount");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.TimeSpan UpdateLatency
		{
			get
			{
				throw new global::System.NotImplementedException("The member TimeSpan LampInfo.UpdateLatency is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=TimeSpan%20LampInfo.UpdateLatency");
			}
		}
#endif
		// Forced skipping of method Windows.Devices.Lights.LampInfo.Index.get
		// Forced skipping of method Windows.Devices.Lights.LampInfo.Purposes.get
		// Forced skipping of method Windows.Devices.Lights.LampInfo.Position.get
		// Forced skipping of method Windows.Devices.Lights.LampInfo.RedLevelCount.get
		// Forced skipping of method Windows.Devices.Lights.LampInfo.GreenLevelCount.get
		// Forced skipping of method Windows.Devices.Lights.LampInfo.BlueLevelCount.get
		// Forced skipping of method Windows.Devices.Lights.LampInfo.GainLevelCount.get
		// Forced skipping of method Windows.Devices.Lights.LampInfo.FixedColor.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Color GetNearestSupportedColor(global::Windows.UI.Color desiredColor)
		{
			throw new global::System.NotImplementedException("The member Color LampInfo.GetNearestSupportedColor(Color desiredColor) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Color%20LampInfo.GetNearestSupportedColor%28Color%20desiredColor%29");
		}
#endif
		// Forced skipping of method Windows.Devices.Lights.LampInfo.UpdateLatency.get
	}
}
