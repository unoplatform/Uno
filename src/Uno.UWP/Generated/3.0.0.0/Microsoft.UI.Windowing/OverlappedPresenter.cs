// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Windowing
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class OverlappedPresenter : global::Microsoft.UI.Windowing.AppWindowPresenter
	{
		// Skipping already declared property IsResizable
		// Skipping already declared property IsModal
		// Skipping already declared property IsMinimizable
		// Skipping already declared property IsMaximizable
		// Skipping already declared property IsAlwaysOnTop
		// Skipping already declared property HasBorder
		// Skipping already declared property HasTitleBar
		// Skipping already declared property State
		// Skipping already declared property RequestedStartupState
		// Skipping already declared method Microsoft.UI.Windowing.OverlappedPresenter.Restore()
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.HasTitleBar.get
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.IsAlwaysOnTop.get
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.IsAlwaysOnTop.set
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.IsMaximizable.get
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.IsMaximizable.set
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.IsMinimizable.get
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.IsMinimizable.set
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.IsModal.get
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.IsModal.set
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.IsResizable.get
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.IsResizable.set
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.State.get
		// Skipping already declared method Microsoft.UI.Windowing.OverlappedPresenter.Maximize()
		// Skipping already declared method Microsoft.UI.Windowing.OverlappedPresenter.Minimize()
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.HasBorder.get
		// Skipping already declared method Microsoft.UI.Windowing.OverlappedPresenter.SetBorderAndTitleBar(bool, bool)
		// Skipping already declared method Microsoft.UI.Windowing.OverlappedPresenter.Minimize(bool)
		// Skipping already declared method Microsoft.UI.Windowing.OverlappedPresenter.Restore(bool)
		// Forced skipping of method Microsoft.UI.Windowing.OverlappedPresenter.RequestedStartupState.get
		// Skipping already declared method Microsoft.UI.Windowing.OverlappedPresenter.Create()
		// Skipping already declared method Microsoft.UI.Windowing.OverlappedPresenter.CreateForContextMenu()
		// Skipping already declared method Microsoft.UI.Windowing.OverlappedPresenter.CreateForDialog()
		// Skipping already declared method Microsoft.UI.Windowing.OverlappedPresenter.CreateForToolWindow()
	}
}
