// <auto-generated/>
#pragma warning disable
#nullable enable
namespace TestRepro
{
    /// <inheritdoc/>
    partial class MyViewModel
    {
        /// <inheritdoc cref="_subModel"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::TestRepro.MySubViewModel SubModel
        {
            get => _subModel;
            [global::System.Diagnostics.CodeAnalysis.MemberNotNull("_subModel")]
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::TestRepro.MySubViewModel>.Default.Equals(_subModel, value))
                {
                    OnSubModelChanging(value);
                    OnSubModelChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.SubModel);
                    _subModel = value;
                    OnSubModelChanged(value);
                    OnSubModelChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.SubModel);
                }
            }
        }

        /// <summary>Executes the logic for when <see cref="SubModel"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SubModel"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSubModelChanging(global::TestRepro.MySubViewModel value);
        /// <summary>Executes the logic for when <see cref="SubModel"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="SubModel"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSubModelChanging(global::TestRepro.MySubViewModel? oldValue, global::TestRepro.MySubViewModel newValue);
        /// <summary>Executes the logic for when <see cref="SubModel"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SubModel"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSubModelChanged(global::TestRepro.MySubViewModel value);
        /// <summary>Executes the logic for when <see cref="SubModel"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="SubModel"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.2.0.0")]
        partial void OnSubModelChanged(global::TestRepro.MySubViewModel? oldValue, global::TestRepro.MySubViewModel newValue);
    }
}