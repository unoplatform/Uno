using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.Diagnostics;
using Microsoft.CodeAnalysis.Testing;
using Microsoft.CodeAnalysis.Text;
using Uno.UI.SourceGenerators.XamlGenerator;

namespace Uno.UI.SourceGenerators.netcore.Tests.XamlCodeGeneratorTests.TestWithGeneratorDriver;

[TestClass]
public class TestWithGeneratorDriver
{
	public sealed class TestAdditionalText : AdditionalText
	{
		private readonly SourceText _text;

		public TestAdditionalText(string path, string text)
		{
			Path = path;
			_text = SourceText.From(text, Encoding.UTF8);
		}

		public override string Path { get; }

		public override SourceText? GetText(CancellationToken cancellationToken = default) => _text;
	}

	public sealed class TestAnalyzerConfigOptionsProvider : AnalyzerConfigOptionsProvider
	{
		private sealed class TestAnalyzerConfigOptions : AnalyzerConfigOptions
		{
			public static TestAnalyzerConfigOptions Instance { get; } = new();

			private TestAnalyzerConfigOptions()
			{
			}

#pragma warning disable CS8765 // Nullability of type of parameter doesn't match overridden member (possibly because of nullability attributes).
			public override bool TryGetValue(string key, out string? value)
#pragma warning restore CS8765 // Nullability of type of parameter doesn't match overridden member (possibly because of nullability attributes).
			{
				value = key switch
				{
					"build_property.MSBuildProjectFullPath" => "C:\\TestCase\\TestCase.csproj",
					"build_property.RootNamespace" => "TestCase",
					"build_property.IntermediateOutputPath" => "C:\\TestCase\\obj\\Debug\\",
					"build_property.Configuration" => "Debug",
					"build_property.UnoUseXamlReaderHotReload" => "true",
					"build_metadata.AdditionalFiles.SourceItemGroup" => "Page",
					_ => null,
				};

				return value is not null;
			}
		}

		public override AnalyzerConfigOptions GlobalOptions => TestAnalyzerConfigOptions.Instance;

		public override AnalyzerConfigOptions GetOptions(SyntaxTree tree) => TestAnalyzerConfigOptions.Instance;
		public override AnalyzerConfigOptions GetOptions(AdditionalText textFile) => TestAnalyzerConfigOptions.Instance;
	}

	[TestMethod]
	public async Task M()
	{
		var tree = SyntaxFactory.ParseSyntaxTree("""
			namespace TestCase
			{
				public partial class MyPage : Page
				{
					public MyPage()
					{
						this.InitializeComponent();
					}
				}
			}
			""");
		var xamlFile = """
			<Page
			    x:Class="TestCase.MyPage"
			    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			    xmlns:local="using:TestCase"
			    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			    mc:Ignorable="d"    
			    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
			    <Grid>
			      <TextBlock Text="Hello, world!" Margin="20" FontSize="30" />
			    </Grid>
			</Page>
			""";
		var references = await ReferenceAssemblies.Default.AddPackages(ImmutableArray.Create(new PackageIdentity("Uno.UI", "4.9.0-dev.439"))).ResolveAsync(LanguageNames.CSharp, CancellationToken.None);

		var comp = CSharpCompilation.Create("TestCase", new[] { tree }, references);

		AdditionalText additionalText1 = new TestAdditionalText("C:\\TestCase\\MyPage.xaml", xamlFile);
		AdditionalText additionalText2 = new TestAdditionalText("C:\\TestCase\\MyPage.xaml", xamlFile.Replace("Hello", "Hello2"));

		GeneratorDriver driver = CSharpGeneratorDriver.Create(new[] { new XamlCodeGenerator() }, new[] { additionalText1 }, optionsProvider: new TestAnalyzerConfigOptionsProvider());
		driver = driver.RunGenerators(comp);

		var result1 = driver.GetRunResult();
		var gen1 = result1.GeneratedTrees[1].ToString();
		var expected1 = """
			// <autogenerated />
			#pragma warning disable CS0114
			#pragma warning disable CS0108
			using System;
			using System.Collections.Generic;
			using System.Diagnostics;
			using System.Linq;
			using Uno.UI;
			using Uno.UI.Xaml;
			using Windows.UI.Xaml;
			using Windows.UI.Xaml.Controls;
			using Windows.UI.Xaml.Controls.Primitives;
			using Windows.UI.Xaml.Data;
			using Windows.UI.Xaml.Documents;
			using Windows.UI.Xaml.Media;
			using Windows.UI.Xaml.Media.Animation;
			using Windows.UI.Xaml.Shapes;
			using Windows.UI.Text;
			using Uno.Extensions;
			using Uno;
			using Uno.UI.Helpers.Xaml;
			using TestCase;

			#if __ANDROID__
			using _View = Android.Views.View;
			#elif __IOS__
			using _View = UIKit.UIView;
			#elif __MACOS__
			using _View = AppKit.NSView;
			#elif UNO_REFERENCE_API || NET461
			using _View = Windows.UI.Xaml.UIElement;
			#endif

			namespace TestCase
			{
				partial class MyPage : global::Windows.UI.Xaml.Controls.Page
				{
					[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
					private const string __baseUri_prefix_MyPage_475768487d8bc5c2265a59a28d897e2e = "ms-appx:///TestCase/";
					[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
					private const string __baseUri_MyPage_475768487d8bc5c2265a59a28d897e2e = "ms-appx:///TestCase/";
					global::Windows.UI.Xaml.NameScope __nameScope = new global::Windows.UI.Xaml.NameScope();
					private void InitializeComponent()
					{
						InitializeComponent_B325464D();
					}
					private void InitializeComponent_B325464D()
					{
						var __resourceLocator = new global::System.Uri("file:///C:/TestCase/MyPage.xaml");
						if(global::Uno.UI.ApplicationHelper.IsLoadableComponent(__resourceLocator))
						{
							global::Windows.UI.Xaml.Application.LoadComponent(this, __resourceLocator);
							return;
						}
						NameScope.SetNameScope(this, __nameScope);
						var __that = this;
						base.IsParsing = true;
						// Source ..\..\MyPage.xaml (Line 1:2)
						base.Content = 
						new global::Windows.UI.Xaml.Controls.Grid
						{
							IsParsing = true,
							// Source ..\..\MyPage.xaml (Line 10:6)
							Children = 
							{
								new global::Windows.UI.Xaml.Controls.TextBlock
								{
									IsParsing = true,
									Text = "Hello, world!",
									Margin = new global::Windows.UI.Xaml.Thickness(20),
									FontSize = 30d,
									// Source ..\..\MyPage.xaml (Line 11:8)
								}
								.GenericApply(__that, __nameScope, ((c0, __that, __nameScope) => 
								{
									global::Uno.UI.FrameworkElementHelper.SetBaseUri(c0, __baseUri_MyPage_475768487d8bc5c2265a59a28d897e2e, "file:///C:/TestCase/MyPage.xaml", 11, 8);
									c0.CreationComplete();
								}
								))
								,
							}
						}
						.GenericApply(__that, __nameScope, ((c1, __that, __nameScope) => 
						{
							global::Uno.UI.FrameworkElementHelper.SetBaseUri(c1, __baseUri_MyPage_475768487d8bc5c2265a59a28d897e2e, "file:///C:/TestCase/MyPage.xaml", 10, 6);
							c1.CreationComplete();
						}
						))
						;
						
						this
						.GenericApply(__that, __nameScope, ((c2, __that, __nameScope) => 
						{
							// Source ..\..\MyPage.xaml (Line 1:2)
							
							// WARNING Property c2.base does not exist on {http://schemas.microsoft.com/winfx/2006/xaml/presentation}Page, the namespace is http://www.w3.org/XML/1998/namespace. This error was considered irrelevant by the XamlFileGenerator
						}
						))
						.GenericApply(__that, __nameScope, ((c3, __that, __nameScope) => 
						{
							/* _isTopLevelDictionary:False */
							__that._component_0 = c3;
							// Class TestCase.MyPage
							global::Uno.UI.ResourceResolverSingleton.Instance.ApplyResource(c3, global::Windows.UI.Xaml.Controls.Page.BackgroundProperty, "ApplicationPageBackgroundThemeBrush", isThemeResourceExtension: true, isHotReloadSupported: true, context: global::TestCase.GlobalStaticResources.__ParseContext_);
							global::Uno.UI.FrameworkElementHelper.SetBaseUri(c3, __baseUri_MyPage_475768487d8bc5c2265a59a28d897e2e, "file:///C:/TestCase/MyPage.xaml", 1, 2);
							c3.CreationComplete();
						}
						))
						;
						OnInitializeCompleted();

						Bindings = new MyPage_Bindings(this);
						global::Uno.UI.Helpers.MarkupHelper.SetElementProperty(__that, "owner", __that);
						Loading += (s, e) => 
						{
							var __that = global::Uno.UI.Helpers.MarkupHelper.GetElementProperty<global::TestCase.MyPage>(s, "owner");
							__that.Bindings.UpdateResources();
						}
						;
					}
					partial void OnInitializeCompleted();
					private global::Windows.UI.Xaml.Markup.ComponentHolder _component_0_Holder { get; } = new global::Windows.UI.Xaml.Markup.ComponentHolder(isWeak: true);
					private global::Windows.UI.Xaml.Controls.Page _component_0
					{
						get
						{
							return (global::Windows.UI.Xaml.Controls.Page)_component_0_Holder.Instance;
						}
						set
						{
							_component_0_Holder.Instance = value;
						}
					}
					private interface IMyPage_Bindings
					{
						void Initialize();
						void Update();
						void UpdateResources();
						void StopTracking();
					}
					#pragma warning disable 0169 //  Suppress unused field warning in case Bindings is not used.
					private IMyPage_Bindings Bindings;
					#pragma warning restore 0169
					[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
					private class MyPage_Bindings : IMyPage_Bindings
					{
						#if UNO_HAS_UIELEMENT_IMPLICIT_PINNING
						private global::System.WeakReference _ownerReference;
						private global::TestCase.MyPage Owner { get => (global::TestCase.MyPage)_ownerReference?.Target; set => _ownerReference = new global::System.WeakReference(value); }
						#else
						private global::TestCase.MyPage Owner { get; set; }
						#endif
						public MyPage_Bindings(global::TestCase.MyPage owner)
						{
							Owner = owner;
						}
						void IMyPage_Bindings.Initialize()
						{
						}
						void IMyPage_Bindings.Update()
						{
							var owner = Owner;
						}
						void IMyPage_Bindings.UpdateResources()
						{
							var owner = Owner;
							owner._component_0.UpdateResourceBindings();
						}
						void IMyPage_Bindings.StopTracking()
						{
						}
					}
				}
			}

			""";

		Assert.AreEqual(expected1, gen1);

		driver = driver.ReplaceAdditionalText(additionalText1, additionalText2);
		driver = driver.RunGenerators(comp);
		var result2 = driver.GetRunResult();
		var gen2 = result2.GeneratedTrees[1].ToString();
		var expected2 = """
			// <autogenerated />
			#pragma warning disable CS0114
			#pragma warning disable CS0108
			using System;
			using System.Collections.Generic;
			using System.Diagnostics;
			using System.Linq;
			using Uno.UI;
			using Uno.UI.Xaml;
			using Windows.UI.Xaml;
			using Windows.UI.Xaml.Controls;
			using Windows.UI.Xaml.Controls.Primitives;
			using Windows.UI.Xaml.Data;
			using Windows.UI.Xaml.Documents;
			using Windows.UI.Xaml.Media;
			using Windows.UI.Xaml.Media.Animation;
			using Windows.UI.Xaml.Shapes;
			using Windows.UI.Text;
			using Uno.Extensions;
			using Uno;
			using Uno.UI.Helpers.Xaml;
			using TestCase;

			#if __ANDROID__
			using _View = Android.Views.View;
			#elif __IOS__
			using _View = UIKit.UIView;
			#elif __MACOS__
			using _View = AppKit.NSView;
			#elif UNO_REFERENCE_API || NET461
			using _View = Windows.UI.Xaml.UIElement;
			#endif

			namespace TestCase
			{
				partial class MyPage : global::Windows.UI.Xaml.Controls.Page
				{
					[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
					private const string __baseUri_prefix_MyPage_475768487d8bc5c2265a59a28d897e2e = "ms-appx:///TestCase/";
					[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
					private const string __baseUri_MyPage_475768487d8bc5c2265a59a28d897e2e = "ms-appx:///TestCase/";
					global::Windows.UI.Xaml.NameScope __nameScope = new global::Windows.UI.Xaml.NameScope();
					private void InitializeComponent()
					{
						InitializeComponent_286ACB34();
					}
					private void InitializeComponent_B325464D()
					{
						NameScope.SetNameScope(this, __nameScope);
						var __that = this;
					}
					private void InitializeComponent_286ACB34()
					{
						var __resourceLocator = new global::System.Uri("file:///C:/TestCase/MyPage.xaml");
						if(global::Uno.UI.ApplicationHelper.IsLoadableComponent(__resourceLocator))
						{
							global::Windows.UI.Xaml.Application.LoadComponent(this, __resourceLocator);
							return;
						}
						NameScope.SetNameScope(this, __nameScope);
						var __that = this;
						base.IsParsing = true;
						// Source ..\..\MyPage.xaml (Line 1:2)
						base.Content = 
						new global::Windows.UI.Xaml.Controls.Grid
						{
							IsParsing = true,
							// Source ..\..\MyPage.xaml (Line 10:6)
							Children = 
							{
								new global::Windows.UI.Xaml.Controls.TextBlock
								{
									IsParsing = true,
									Text = "Hello2, world!",
									Margin = new global::Windows.UI.Xaml.Thickness(20),
									FontSize = 30d,
									// Source ..\..\MyPage.xaml (Line 11:8)
								}
								.GenericApply(__that, __nameScope, ((c0, __that, __nameScope) => 
								{
									global::Uno.UI.FrameworkElementHelper.SetBaseUri(c0, __baseUri_MyPage_475768487d8bc5c2265a59a28d897e2e, "file:///C:/TestCase/MyPage.xaml", 11, 8);
									c0.CreationComplete();
								}
								))
								,
							}
						}
						.GenericApply(__that, __nameScope, ((c1, __that, __nameScope) => 
						{
							global::Uno.UI.FrameworkElementHelper.SetBaseUri(c1, __baseUri_MyPage_475768487d8bc5c2265a59a28d897e2e, "file:///C:/TestCase/MyPage.xaml", 10, 6);
							c1.CreationComplete();
						}
						))
						;
						
						this
						.GenericApply(__that, __nameScope, ((c2, __that, __nameScope) => 
						{
							// Source ..\..\MyPage.xaml (Line 1:2)
							
							// WARNING Property c2.base does not exist on {http://schemas.microsoft.com/winfx/2006/xaml/presentation}Page, the namespace is http://www.w3.org/XML/1998/namespace. This error was considered irrelevant by the XamlFileGenerator
						}
						))
						.GenericApply(__that, __nameScope, ((c3, __that, __nameScope) => 
						{
							/* _isTopLevelDictionary:False */
							__that._component_0 = c3;
							// Class TestCase.MyPage
							global::Uno.UI.ResourceResolverSingleton.Instance.ApplyResource(c3, global::Windows.UI.Xaml.Controls.Page.BackgroundProperty, "ApplicationPageBackgroundThemeBrush", isThemeResourceExtension: true, isHotReloadSupported: true, context: global::TestCase.GlobalStaticResources.__ParseContext_);
							global::Uno.UI.FrameworkElementHelper.SetBaseUri(c3, __baseUri_MyPage_475768487d8bc5c2265a59a28d897e2e, "file:///C:/TestCase/MyPage.xaml", 1, 2);
							c3.CreationComplete();
						}
						))
						;
						OnInitializeCompleted();

						Bindings = new MyPage_Bindings(this);
						global::Uno.UI.Helpers.MarkupHelper.SetElementProperty(__that, "owner", __that);
						Loading += (s, e) => 
						{
							var __that = global::Uno.UI.Helpers.MarkupHelper.GetElementProperty<global::TestCase.MyPage>(s, "owner");
							__that.Bindings.UpdateResources();
						}
						;
					}
					partial void OnInitializeCompleted();
					private global::Windows.UI.Xaml.Markup.ComponentHolder _component_0_Holder { get; } = new global::Windows.UI.Xaml.Markup.ComponentHolder(isWeak: true);
					private global::Windows.UI.Xaml.Controls.Page _component_0
					{
						get
						{
							return (global::Windows.UI.Xaml.Controls.Page)_component_0_Holder.Instance;
						}
						set
						{
							_component_0_Holder.Instance = value;
						}
					}
					private interface IMyPage_Bindings
					{
						void Initialize();
						void Update();
						void UpdateResources();
						void StopTracking();
					}
					#pragma warning disable 0169 //  Suppress unused field warning in case Bindings is not used.
					private IMyPage_Bindings Bindings;
					#pragma warning restore 0169
					[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
					private class MyPage_Bindings : IMyPage_Bindings
					{
						#if UNO_HAS_UIELEMENT_IMPLICIT_PINNING
						private global::System.WeakReference _ownerReference;
						private global::TestCase.MyPage Owner { get => (global::TestCase.MyPage)_ownerReference?.Target; set => _ownerReference = new global::System.WeakReference(value); }
						#else
						private global::TestCase.MyPage Owner { get; set; }
						#endif
						public MyPage_Bindings(global::TestCase.MyPage owner)
						{
							Owner = owner;
						}
						void IMyPage_Bindings.Initialize()
						{
						}
						void IMyPage_Bindings.Update()
						{
							var owner = Owner;
						}
						void IMyPage_Bindings.UpdateResources()
						{
							var owner = Owner;
							owner._component_0.UpdateResourceBindings();
						}
						void IMyPage_Bindings.StopTracking()
						{
						}
					}
				}
			}
			
			""";

		Assert.AreEqual(expected2, gen2);
	}
}
