<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<!-- There is no need to multi-target this test project -->
		<!-- We keep it on the oldest supported TFM -->
		<!-- Though we could use UnoTargetFrameworkOverride to choose between NetPrevious and NetCurrent -->
		<!-- As of writing this comment, we don't see a need to do that, so we keep it simple -->
		<TargetFramework>$(NetPrevious)</TargetFramework>
		<!-- {0} does not explicitly define the {1} base type in code behind. -->
		<NoWarn>$(NoWarn);UXAML0002;CS1030</NoWarn>

		<!-- We have a test that explicitly verifies backward compatibility when a namespace is not found and fuzzy matching should be used. -->
		<UnoEnableXamlFuzzyMatching>true</UnoEnableXamlFuzzyMatching>
	</PropertyGroup>

	<PropertyGroup>
		<Product>$(AssemblyName) ($(TargetFramework))</Product>
		<DefaultLanguage>en-US</DefaultLanguage>
	</PropertyGroup>

	<Import Project="../../targetframework-override.props" />

	<PropertyGroup>
		<DefineConstants>$(DefineConstants);UNO_REFERENCE_API</DefineConstants>
	</PropertyGroup>

	<ItemGroup>
	  <PRIResource Include="Resources.resw" />
	</ItemGroup>

	<ItemGroup>
	  <EmbeddedResource Include="StoryboardTargetTest.xaml" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\Uno.UI\Uno.UI.Reference.csproj" />
		<ProjectReference Include="..\..\Uno.UWP\Uno.Reference.csproj" />
		<ProjectReference Include="..\..\Uno.Foundation\Uno.Foundation.Reference.csproj" />
		<ProjectReference Include="..\..\Uno.UI.Toolkit\Uno.UI.Toolkit.Reference.csproj" />
		<ProjectReference Include="..\XamlGenerationTests.Core\XamlGenerationTests.Core.csproj" />
	</ItemGroup>

	<Import Project="..\Uno.UI.SourceGenerators\Content\Uno.UI.SourceGenerators.props" />

</Project>
