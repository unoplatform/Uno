<Project>

	<PropertyGroup>
		<IsCrossruntime>false</IsCrossruntime>
		<IsCrossruntime Condition="'$(UnoRuntimeIdentifier)'=='Skia' or '$(UnoRuntimeIdentifier)'=='WebAssembly' or '$(UnoRuntimeIdentifier)'=='Reference'">true</IsCrossruntime>
	</PropertyGroup>
	<ItemGroup>
		<AndroidResource Include="Resources\**\*.xml" Condition="$(IsAndroid)" />

		<None Include="**\*.crossruntime.cs" Exclude="bin\**\*.crossruntime.cs;obj\**\*.crossruntime.cs" Condition="!$(IsCrossruntime)" />
		<Compile Remove="**\*.crossruntime.cs" Condition="!$(IsCrossruntime)" />

		<None Include="**\*.wasm.cs" Exclude="bin\**\*.wasm.cs;obj\**\*.wasm.cs" Condition="'$(UnoRuntimeIdentifier)'!='WebAssembly'" />
		<Compile Remove="**\*.wasm.cs" Condition="'$(UnoRuntimeIdentifier)'!='WebAssembly'" />

		<None Include="**\*.skia.cs" Exclude="bin\**\*.skia.cs;obj\**\*.skia.cs" Condition="'$(UnoRuntimeIdentifier)'!='Skia'" />
		<Compile Remove="**\*.skia.cs" Condition="'$(UnoRuntimeIdentifier)'!='Skia'" />

		<None Include="**\*.reference.cs" Exclude="bin\**\*.reference.cs;obj\**\*.reference.cs" Condition="'$(UnoRuntimeIdentifier)'!='Reference'" />
		<Compile Remove="**\*.reference.cs" Condition="'$(UnoRuntimeIdentifier)'!='Reference'" />

		<None Include="**\*.iOS.cs" Exclude="bin\**\*.iOS.cs;obj\**\*.iOS.cs" Condition="!$(IsIOSOrCatalyst)" />
		<Compile Remove="**\*.iOS.cs" Condition="!$(IsIOSOrCatalyst)" />

		<None Include="**\*.macOS.cs" Exclude="bin\**\*.macOS.cs;obj\**\*.macOS.cs" Condition="!$(IsMacOS)" />
		<Compile Remove="**\*.macOS.cs" Condition="!$(IsMacOS)" />

		<None Include="**\*.iOSmacOS.cs" Exclude="bin\**\*.iOSmacOS.cs;obj\**\*.iOSmacOS.cs" Condition="!$(IsMacOS) and !$(IsIOSOrCatalyst)" />
		<Compile Remove="**\*.iOSmacOS.cs" Condition="!$(IsMacOS) and !$(IsIOSOrCatalyst)" />

		<None Include="**\*.Android.cs" Exclude="bin\**\*.Android.cs;obj\**\*.Android.cs" Condition="!$(IsAndroid)" />
		<Compile Remove="**\*.Android.cs" Condition="!$(IsAndroid)" />

		<None Include="**\*.Xamarin.cs" Exclude="bin\**\*.Xamarin.cs;obj\**\*.Xamarin.cs" Condition="!$(IsAndroid) and !$(IsIOSOrCatalyst) and !$(IsMacOS)" />
		<Compile Remove="**\*.Xamarin.cs" Condition="!$(IsAndroid) and !$(IsIOSOrCatalyst) and !$(IsMacOS)" />

		<None Include="**\*.unittests.cs" Exclude="bin\**\*.unittests.cs;obj\**\*.unittests.cs" Condition="!$(_IsUnitTests)" />
		<Compile Remove="**\*.unittests.cs" Condition="!$(_IsUnitTests)" />
	</ItemGroup>

	<!--
  List of known constants:
  - __SKIA__: Used when building for the Skia backend
  - __WASM__: Used when building for the WebAssembly backend
  - UNO_REFERENCE_API: Used when the Reference API is used (it's true for Skia, Wasm, and Reference).
  - __CROSSRUNTIME__: Currently have the same semantics as UNO_REFERENCE_API
  - __NETSTD_REFERENCE__: Used when building the reference assemblies (only true for Reference)
  - UNO_HAS_UIELEMENT_IMPLICIT_PINNING: Used to mark targets that have specific constraints on
										UIElements. On iOS, this means additional weak references
										backed fields to handle opaque native reference pinning and avoid
										memory leaks.
  - UNO_HAS_ENHANCED_HIT_TEST_PROPERTY: Used to mark if the ENUM hit test property is present or not
  - UNO_HAS_MANAGED_SCROLL_PRESENTER: Determines if the platforms supports managed scroll presenter which
									  uses render transforms instead of native scroll feature (if any)
  - UNO_HAS_MANAGED_POINTERS: Determines if the pointer events are dispatched by uno instead of the system (if any).

  - Constants for Xamarin backends and SDK versions: https://docs.microsoft.com/en-us/xamarin/cross-platform/app-fundamentals/building-cross-platform-applications/platform-divergence-abstraction-divergent-implementation#conditional-compilation
  -->

	<PropertyGroup Condition="$(IsCrossruntime)">
		<DefineConstants>$(DefineConstants);__CROSSRUNTIME__;UNO_REFERENCE_API</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(UnoRuntimeIdentifier)'=='WebAssembly'">
		<DefineConstants>$(DefineConstants);__WASM__;UNO_HAS_ENHANCED_HIT_TEST_PROPERTY;SUPPORTS_RTL</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(UnoRuntimeIdentifier)'=='Skia'">
		<DefineConstants>$(DefineConstants);__SKIA__;UNO_HAS_ENHANCED_HIT_TEST_PROPERTY;UNO_HAS_MANAGED_SCROLL_PRESENTER;UNO_HAS_MANAGED_POINTERS;SUPPORTS_RTL</DefineConstants>
		<DefineConstants>$(DefineConstants);UNO_SUPPORTS_NATIVEHOST</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(UnoRuntimeIdentifier)'=='Reference'">
		<DefineConstants>$(DefineConstants);__NETSTD_REFERENCE__</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="$(_IsUnitTests)">
		<DefineConstants>$(DefineConstants);IS_UNIT_TESTS</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="$(IsIOS)">
		<DefineConstants>$(DefineConstants);XAMARIN;UNO_HAS_UIELEMENT_IMPLICIT_PINNING</DefineConstants>
		<SupportedOSPlatformVersion>10.0</SupportedOSPlatformVersion>
	</PropertyGroup>

	<PropertyGroup Condition="$(IsCatalyst)">
		<DefineConstants>$(DefineConstants);XAMARIN;UNO_HAS_UIELEMENT_IMPLICIT_PINNING</DefineConstants>
		<SupportedOSPlatformVersion>13.1</SupportedOSPlatformVersion>
	</PropertyGroup>

	<PropertyGroup Condition="$(IsMacOS)">
		<DefineConstants>$(DefineConstants);__MACOS__;XAMARIN;UNO_HAS_UIELEMENT_IMPLICIT_PINNING;UNO_HAS_MANAGED_SCROLL_PRESENTER;UNO_HAS_MANAGED_POINTERS</DefineConstants>
		<SupportedOSPlatformVersion>10.14</SupportedOSPlatformVersion>
	</PropertyGroup>

	<PropertyGroup Condition="$(IsAndroid)">
		<DefineConstants>$(DefineConstants);__ANDROID__;XAMARIN</DefineConstants>
		<SupportedOSPlatformVersion>21.0</SupportedOSPlatformVersion>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' != 'uap10.0.19041' and '$(TargetFramework)'!='net7.0-windows10.0.19041.0' and '$(TargetPlatformIdentifier)' != 'UAP'">
		<DefineConstants>$(DefineConstants);HAS_UNO</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'uap10.0.19041' ">
		<TargetPlatformVersion>10.0.19041.0</TargetPlatformVersion>
		<TargetPlatformMinVersion>10.0.19041.0</TargetPlatformMinVersion>
		<DefineConstants>$(DefineConstants);NETFX_CORE</DefineConstants>
	</PropertyGroup>

	<Target Name="_UnoOverrideNuget"
		  AfterTargets="AfterBuild"
		  DependsOnTargets="BuiltProjectOutputGroup"
		  Condition="'$(UnoNugetOverrideVersion)'!='' and ('$(UnoRuntimeIdentifier)'=='' or '$(UnoRuntimeIdentifier)'=='Reference')">

		<PropertyGroup>
			<_OverrideTargetFramework>$(TargetFramework)</_OverrideTargetFramework>
			
			<!-- Current nuget publishing uses netX.0-android30.0 -->
			<_OverrideTargetFramework Condition="$(_OverrideTargetFramework.EndsWith('.0-android'))">$(_OverrideTargetFramework)30.0</_OverrideTargetFramework>

			<_overridePackageId>$(CommonOverridePackageId)</_overridePackageId>
			<_overridePackageId Condition="'$(CommonOverridePackageId)'==''">$(AssemblyName)</_overridePackageId>
			<_overridePackageId Condition="'$(UNO_UWP_BUILD)'=='false'">$(_overridePackageId.Replace('Uno.UI','Uno.WinUI'))</_overridePackageId>
			<_TargetNugetFolder>$(NuGetPackageRoot)\$(_overridePackageId)\$(UnoNugetOverrideVersion)\lib\$(_OverrideTargetFramework)</_TargetNugetFolder>
			<_TargetNugetRefFolder>$(NuGetPackageRoot)\$(_overridePackageId)\$(UnoNugetOverrideVersion)\ref\$(_OverrideTargetFramework)</_TargetNugetRefFolder>
		</PropertyGroup>
		<ItemGroup>
			<_OutputFiles Include="$(TargetDir)\*.*" />
			<_OutputRefFiles Include="$(TargetDir)\ref\*.*" />
		</ItemGroup>
		<MakeDir Directories="$(_TargetNugetFolder)" />

		<!-- Add override file to notify a developer that the used package is modified -->
		<WriteLinestoFile File="$(_TargetNugetFolder)\.packageoverride"
				 Lines="$([System.DateTime]::Now.ToString('yyyyMMddTHHmmss')) from $(MSBuildThisFileDirectory)"
				 Overwrite="True" />
		<Message Importance="high" Text="OVERRIDING NUGET PACKAGE CACHE: $(_TargetNugetFolder) and $(_TargetNugetRefFolder)" />

		<Copy SourceFiles="@(_OutputFiles)"
			  DestinationFiles="@(_OutputFiles->'$(_TargetNugetFolder)\%(RecursiveDir)%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(_OutputRefFiles)"
			  DestinationFiles="@(_OutputRefFiles->'$(_TargetNugetRefFolder)\%(RecursiveDir)%(Filename)%(Extension)')" />
	</Target>


	<Target Name="CommonOverrideNuget" AfterTargets="AfterBuild" DependsOnTargets="BuiltProjectOutputGroup" Condition="'$(UnoNugetOverrideVersion)'!='' and '$(UseCommonOverridePackage)'!=''">
		<PropertyGroup>
			<_OverrideTargetFramework>$(TargetFramework)</_OverrideTargetFramework>

			<!-- Current nuget publishing uses netX.0-android30.0 -->
			<_OverrideTargetFramework Condition="$(_OverrideTargetFramework.EndsWith('.0-android'))">$(_OverrideTargetFramework)30.0</_OverrideTargetFramework>

			<CommonOverridePackageId Condition="'$(CommonOverridePackageId)'==''">$(AssemblyName)</CommonOverridePackageId>
			<CommonOverridePackageId Condition="'$(UNO_UWP_BUILD)'=='false'">$(CommonOverridePackageId.Replace('Uno.UI','Uno.WinUI'))</CommonOverridePackageId>
			<_TargetNugetFolder Condition="'$(UnoRuntimeIdentifier)'=='' or '$(UnoRuntimeIdentifier)'=='Reference'">$(NuGetPackageRoot)\$(CommonOverridePackageId)\$(UnoNugetOverrideVersion)\lib\$(_OverrideTargetFramework)</_TargetNugetFolder>
			<_TargetNugetFolder Condition="'$(UnoRuntimeIdentifier)'!='' and '$(UnoRuntimeIdentifier)'!='Reference'">$(NuGetPackageRoot)\$(CommonOverridePackageId)\$(UnoNugetOverrideVersion)\uno-runtime\$(TargetFramework)\$(UnoRuntimeIdentifier.ToLower())</_TargetNugetFolder>
		</PropertyGroup>

		<ItemGroup>
			<_OutputFiles Include="@(TargetPathWithTargetPlatformMoniker)" />
		</ItemGroup>

		<MakeDir Directories="$(_TargetNugetFolder)" />

		<Message Importance="high" Text="OVERRIDING NUGET PACKAGE CACHE: $(_TargetNugetFolder)" />

		<Copy SourceFiles="@(_OutputFiles)" DestinationFiles="@(_OutputFiles->'$(_TargetNugetFolder)\%(RecursiveDir)%(Filename)%(Extension)')" />
		<Copy SourceFiles="@(_DebugSymbolsIntermediatePath)" DestinationFiles="@(_DebugSymbolsIntermediatePath->'$(_TargetNugetFolder)\%(RecursiveDir)%(Filename)%(Extension)')" />
	</Target>
</Project>
