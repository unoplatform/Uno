<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<IsTool>true</IsTool>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<PackageType>Template</PackageType>
		<ContentTargetFolders>content</ContentTargetFolders>

		<!-- required for .vsconfig -->
		<NoDefaultExcludes>true</NoDefaultExcludes>
		
		<!-- Disable package generation for WinUI converted build -->
		<IsPackable Condition="'$(UNO_UWP_BUILD)'=='false'">false</IsPackable>

		<!-- error NU5128: Some target frameworks declared in the dependencies group of the nuspec and the lib/ref folder do not have exact matches in the other location. Consult the list of actions below: [C:\a\1\s\src\SolutionTemplate\Uno.ProjectTemplates.Dotnet\Uno.ProjectTemplates.Dotnet.csproj] -->
		<!-- error NU5128: - Add lib or ref assemblies for the netstandard2.0 target framework [C:\a\1\s\src\SolutionTemplate\Uno.ProjectTemplates.Dotnet\Uno.ProjectTemplates.Dotnet.csproj] -->
		<NoWarn>$(NoWarn);NU5128</NoWarn>
	</PropertyGroup>

	<PropertyGroup>
		<PackageTags>dotnet-new;templates;uno-platform</PackageTags>
		<Authors>nventive</Authors>
		<PackageProjectUrl>https://github.com/unoplatform/uno</PackageProjectUrl>
		<PackageIcon>uno.png</PackageIcon>
		<RepositoryUrl>https://github.com/unoplatform/uno</RepositoryUrl>
		<Description></Description>
		<Copyright>Copyright (C) 2015-2019 nventive inc. - all rights reserved</Copyright>
		<GeneratePackageOnBuild Condition="'$(Configuration)'=='Release'">true</GeneratePackageOnBuild>
		<PackageTags>dotnet-new;templates;uno-platform;webassembly;ios;android;uwp;winui</PackageTags>
	</PropertyGroup>

	<ItemGroup>
		<UpToDateCheckInput Include="content\**" />
	</ItemGroup>

	<ItemGroup>
		<Compile Remove="content/**/*.cs" />
		<Compile Remove="content\uno-prism-app\UnoQuickStart.macOS\**" />
		<EmbeddedResource Remove="content\uno-prism-app\UnoQuickStart.macOS\**" />
		<None Remove="content\uno-prism-app\UnoQuickStart.macOS\**" />
		<UpToDateCheckInput Remove="content\uno-prism-app\UnoQuickStart.macOS\**" />
		<Content Include="content/xamarinforms-wasm/nuget.config">
			<Pack>true</Pack>
			<PackagePath>content/xamarinforms-wasm</PackagePath>
		</Content>
		<Content Include="content\unoapp-uitest\**\*">
			<PackagePath>content\unoapp-uitest</PackagePath>
			<Pack>true</Pack>
		</Content>
		<Content Include="content/xamarinforms-wasm/UnoXFQuickStart.Wasm/**/*.*">
			<Pack>true</Pack>
			<PackagePath>content/xamarinforms-wasm/UnoXFQuickStart.Wasm</PackagePath>
		</Content>
		<Content Include="content/xamarinforms-wasm/.template.config/*.*">
			<Pack>true</Pack>
			<PackagePath>content/xamarinforms-wasm/.template.config</PackagePath>
		</Content>
		<Content Include="content\unoapp-uwp\**">
			<PackagePath>content\unoapp-uwp</PackagePath>
			<Pack>true</Pack>
		</Content>
		<Content Include="content\unoapp-uwp-net6\**">
			<PackagePath>content\unoapp-uwp-net6</PackagePath>
			<Pack>true</Pack>
		</Content>
		<Content Include="content\unolib\**">
			<PackagePath>content\unolib</PackagePath>
			<Pack>true</Pack>
		</Content>
		<Content Include="content\unoapp-prism\**">
			<PackagePath>content\unoapp-prism</PackagePath>
			<Pack>true</Pack>
		</Content>
		<Content Include="content\unoapp-winui-xamarin\**">
			<PackagePath>content\unoapp-winui-xamarin</PackagePath>
			<Pack>true</Pack>
		</Content>
		<Content Include="content\unoapp\**">
			<PackagePath>content\unoapp</PackagePath>
			<Pack>true</Pack>
		</Content>
		<Content Include="content\unoapp\UnoWinUIQuickStart\**">
			<PackagePath>content\unoapp</PackagePath>
			<Pack>true</Pack>
		</Content>
		<Content Include="content\unolib-crossruntime\**">
			<PackagePath>content\unolib-crossruntime</PackagePath>
			<Pack>true</Pack>
		</Content>
	</ItemGroup>

	<ItemGroup>
		<_UnoAppTemplateFilesExclude Include="..\UnoSolutionTemplate\**\*.vstemplate" />
		<_UnoAppTemplateFilesExclude Include="..\UnoSolutionTemplate\**\__*.png" />
		<_UnoAppTemplateFilesExclude Include="..\UnoSolutionTemplate\**\obj\**" />
		<_UnoAppTemplateFilesExclude Include="..\UnoSolutionTemplate\**\bin\**" />
		<_UnoAppTemplateFilesExclude Include="..\UnoSolutionTemplate\Properties\**" />
		<_UnoAppTemplateFilesExclude Include="..\UnoSolutionTemplate\UnoSolutionTemplate.csproj" />

		<_UnoAppTemplateFiles Include="..\UnoSolutionTemplate\**" Exclude="@(_UnoAppTemplateFilesExclude)" />
	</ItemGroup>

	<ItemGroup>
		<_UnoAppnet6UWPTemplateFilesExclude Include="..\UnoSolutionTemplate.net6\**\*.vstemplate" />
		<_UnoAppnet6UWPTemplateFilesExclude Include="..\UnoSolutionTemplate.net6\**\__*.png" />
		<_UnoAppnet6UWPTemplateFilesExclude Include="..\UnoSolutionTemplate.net6\**\obj\**" />
		<_UnoAppnet6UWPTemplateFilesExclude Include="..\UnoSolutionTemplate.net6\**\bin\**" />
		<_UnoAppnet6UWPTemplateFilesExclude Include="..\UnoSolutionTemplate.net6\Properties\**" />
		<_UnoAppnet6UWPTemplateFilesExclude Include="..\UnoSolutionTemplate.net6\UnoSolutionTemplate.csproj" />

		<_UnoAppnet6UWPTemplateFiles Include="..\UnoSolutionTemplate.net6\**" Exclude="@(_UnoAppnet6UWPTemplateFilesExclude)" />
	</ItemGroup>
	
	<ItemGroup>
		<_UnoAppnet6WinUITemplateFilesExclude Include="..\UnoSolutionTemplate.WinUI.net6\**\*.vstemplate" />
		<_UnoAppnet6WinUITemplateFilesExclude Include="..\UnoSolutionTemplate.WinUI.net6\**\__*.png" />
		<_UnoAppnet6WinUITemplateFilesExclude Include="..\UnoSolutionTemplate.WinUI.net6\**\obj\**" />
		<_UnoAppnet6WinUITemplateFilesExclude Include="..\UnoSolutionTemplate.WinUI.net6\**\bin\**" />
		<_UnoAppnet6WinUITemplateFilesExclude Include="..\UnoSolutionTemplate.WinUI.net6\Properties\**" />
		<_UnoAppnet6WinUITemplateFilesExclude Include="..\UnoSolutionTemplate.WinUI.net6\UnoSolutionTemplate.WinUI.net6.csproj" />

		<_UnoAppnet6WinUITemplateFiles Include="..\UnoSolutionTemplate.WinUI.net6\**" Exclude="@(_UnoAppnet6WinUITemplateFilesExclude)" />
	</ItemGroup>

	<ItemGroup>
		<_UnoLibTemplateFilesExclude Include="..\UnoLibraryTemplate.net6\*.vstemplate" />
		<_UnoLibTemplateFilesExclude Include="..\UnoLibraryTemplate.net6\**\__*.png" />
		<_UnoLibTemplateFilesExclude Include="..\UnoLibraryTemplate.net6\obj\**" />
		<_UnoLibTemplateFilesExclude Include="..\UnoLibraryTemplate.net6\bin\**" />
		<_UnoLibTemplateFilesExclude Include="..\UnoLibraryTemplate.net6\Properties\**" />
		<_UnoLibTemplateFilesExclude Include="..\UnoLibraryTemplate.net6\UnoLibraryTemplate.net6.csproj" />

		<_UnoLibTemplateFiles Include="..\UnoLibraryTemplate.net6\**" Exclude="@(_UnoLibTemplateFilesExclude)" />
	</ItemGroup>
	
	<ItemGroup>
		<_UnoUITestTemplateFilesExclude Include="..\UnoUITestTemplate\*.vstemplate" />
		<_UnoUITestTemplateFilesExclude Include="..\UnoUITestTemplate\**\__*.png" />
		<_UnoUITestTemplateFilesExclude Include="..\UnoUITestTemplate\obj\**" />
		<_UnoUITestTemplateFilesExclude Include="..\UnoUITestTemplate\bin\**" />
		<_UnoUITestTemplateFilesExclude Include="..\UnoUITestTemplate\Properties\**" />
		<_UnoUITestTemplateFilesExclude Include="..\UnoUITestTemplate\UnoUITestTemplate.csproj" />
		
		<_UnoUITestTemplateFiles Include="..\UnoUITestTemplate\**" Exclude="@(_UnoUITestTemplateFilesExclude)" />
	</ItemGroup>

	<ItemGroup>
	  <Content Update="content\unoapp-uwp\UnoQuickStart-vsmac.slnf">
	    <PackagePath>content\unoapp-uwp</PackagePath>
	  </Content>
	  <Content Update="content\unoapp-uwp-net6\UnoQuickStart-vsmac.slnf">
	    <PackagePath>content\unoapp-uwp-net6</PackagePath>
	  </Content>
	  <Content Update="content\unoapp\UnoWinUIQuickStart-vsmac.slnf">
	    <PackagePath>content\unoapp</PackagePath>
	  </Content>
	  <Content Update="content\unoapp-winui-xamarin\UnoWinUIQuickStart-vsmac.slnf">
	    <PackagePath>content\unoapp-winui-xamarin</PackagePath>
	  </Content>
	</ItemGroup>

	<Target Name="CopyUnoAppTemplate" BeforeTargets="Build">
		<PropertyGroup>
			<IntermediateTemplatePath>$(IntermediateOutputPath)\UnoQuickStart</IntermediateTemplatePath>
		</PropertyGroup>

		<RemoveDir Directories="$(IntermediateTemplatePath)" />

		<Copy SourceFiles="@(_UnoAppTemplateFiles)" DestinationFolder="$(IntermediateTemplatePath)\%(RecursiveDir)" />

		<ReplaceContent SourcePath="$(IntermediateTemplatePath)" SafeProjectName="UnoQuickStart" IsWinUI="False" />

		<ItemGroup>
			<Content Include="$(IntermediateTemplatePath)/**/*.*">
				<Pack>true</Pack>
				<PackagePath>content/unoapp-uwp</PackagePath>
			</Content>
		</ItemGroup>
	</Target>

	<Target Name="CopyUnoAppNet6Template" BeforeTargets="Build">
		<PropertyGroup>
			<IntermediateTemplatePath>$(IntermediateOutputPath)\UnoQuickStartNet6</IntermediateTemplatePath>
		</PropertyGroup>

		<RemoveDir Directories="$(IntermediateTemplatePath)" />

		<Copy SourceFiles="@(_UnoAppnet6UWPTemplateFiles)" DestinationFolder="$(IntermediateTemplatePath)\%(RecursiveDir)" />

		<ReplaceContent SourcePath="$(IntermediateTemplatePath)" SafeProjectName="UnoQuickStart" IsWinUI="False" />

		<ItemGroup>
			<Content Include="$(IntermediateTemplatePath)/**/*.*">
				<Pack>true</Pack>
				<PackagePath>content/unoapp-uwp-net6</PackagePath>
			</Content>
		</ItemGroup>
	</Target>

	<Target Name="CopyUnoLibTemplate" BeforeTargets="Build">
		<PropertyGroup>
			<IntermediateTemplatePath>$(IntermediateOutputPath)\unolib</IntermediateTemplatePath>
		</PropertyGroup>

		<RemoveDir Directories="$(IntermediateTemplatePath)" />

		<Copy SourceFiles="@(_UnoLibTemplateFiles)" DestinationFolder="$(IntermediateTemplatePath)\%(RecursiveDir)" />

		<ReplaceContent SourcePath="$(IntermediateTemplatePath)" SafeProjectName="CrossTargetedLibrary" IsWinUI="False" />

		<ItemGroup>
			<Content Include="$(IntermediateTemplatePath)/**/*.*">
				<Pack>true</Pack>
				<PackagePath>content/unolib</PackagePath>
			</Content>
		</ItemGroup>
	</Target>

	<Target Name="CopyUnoUITestTemplate" BeforeTargets="Build">
		<PropertyGroup>
			<IntermediateTemplatePath>$(IntermediateOutputPath)\unoapp-uitest</IntermediateTemplatePath>
		</PropertyGroup>

		<RemoveDir Directories="$(IntermediateTemplatePath)" />

		<Copy SourceFiles="@(_UnoUITestTemplateFiles)" DestinationFolder="$(IntermediateTemplatePath)\%(RecursiveDir)" />

		<ReplaceContent SourcePath="$(IntermediateTemplatePath)" SafeProjectName="UnoUITestsLibrary" IsWinUI="False" />

		<ItemGroup>
			<Content Include="$(IntermediateTemplatePath)/**/*.*">
				<Pack>true</Pack>
				<PackagePath>content/unoapp-uitest</PackagePath>
			</Content>
		</ItemGroup>
	</Target>

	<Target Name="CopyUnoAppWinUITemplate" BeforeTargets="Build">
		<PropertyGroup>
			<IntermediateTemplatePath>$(IntermediateOutputPath)\unoapp-winui-xamarin</IntermediateTemplatePath>
		</PropertyGroup>

		<RemoveDir Directories="$(IntermediateTemplatePath)" />

		<Copy SourceFiles="@(_UnoAppTemplateFiles)" DestinationFolder="$(IntermediateTemplatePath)\%(RecursiveDir)" />

		<ReplaceContent SourcePath="$(IntermediateTemplatePath)" SafeProjectName="UnoQuickStart" IsWinUI="True" />
		<RenameSolution SourcePath="$(IntermediateTemplatePath)" SourceName="UnoQuickStart" TargetName="UnoWinUIQuickStart" />

		<ItemGroup>
			<Content Include="$(IntermediateTemplatePath)/**/*.*">
				<Pack>true</Pack>
				<PackagePath>content/unoapp-winui-xamarin</PackagePath>
			</Content>
		</ItemGroup>
	</Target>

	<Target Name="CopyUnoAppWinUINet6Template" BeforeTargets="Build">
		<PropertyGroup>
			<IntermediateTemplatePath>$(IntermediateOutputPath)\unoapp</IntermediateTemplatePath>
		</PropertyGroup>

		<RemoveDir Directories="$(IntermediateTemplatePath)" />

		<Copy SourceFiles="@(_UnoAppnet6WinUITemplateFiles)" DestinationFolder="$(IntermediateTemplatePath)\%(RecursiveDir)" />

		<ReplaceContent SourcePath="$(IntermediateTemplatePath)" SafeProjectName="UnoQuickStart" IsWinUI="True" />
		<RenameSolution SourcePath="$(IntermediateTemplatePath)" SourceName="UnoQuickStart" TargetName="UnoWinUIQuickStart" />

		<ItemGroup>
			<Content Include="$(IntermediateTemplatePath)/**/*.*">
				<Pack>true</Pack>
				<PackagePath>content/unoapp</PackagePath>
			</Content>
		</ItemGroup>
	</Target>

	<Target Name="AlignVsConfig" BeforeTargets="Build;Pack">
		<!-- The master file for the .vsconfig is located in the wizard project -->
		<Copy SkipUnchangedFiles="true" SourceFiles="..\UnoSolutionTemplate.Wizard.2022\.vsconfig.vs16" DestinationFiles="content/unoapp-uwp/.vsconfig" />
		<Copy SkipUnchangedFiles="true" SourceFiles="..\UnoSolutionTemplate.Wizard.2022\.vsconfig.vs16" DestinationFiles="content/unoapp-prism/.vsconfig" />
		<Copy SkipUnchangedFiles="true" SourceFiles="..\UnoSolutionTemplate.Wizard.2022\.vsconfig.vs16" DestinationFiles="content/unoapp-winui-xamarin/.vsconfig" />

		<Copy SkipUnchangedFiles="true" SourceFiles="..\UnoSolutionTemplate.Wizard.2022\.vsconfig.vs17" DestinationFiles="content/unoapp-uwp-net6/.vsconfig" />
		<Copy SkipUnchangedFiles="true" SourceFiles="..\UnoSolutionTemplate.Wizard.2022\.vsconfig.vs17" DestinationFiles="content/unoapp/.vsconfig" />
	</Target>

	<UsingTask TaskName="ReplaceContent" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<SourcePath ParameterType="System.String" Required="True" Output="False" />
			<SafeProjectName ParameterType="System.String" Required="True" Output="False" />
			<IsWinUI ParameterType="System.Boolean" Required="True" Output="False" />
		</ParameterGroup>
		<Task>
			<Reference Include="System.Xml" />
			<Using Namespace="System" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Using Namespace="System.Linq" />
			<Using Namespace="System.IO" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
					string[] filters = new[] { "*.cs", "*.xml", "*.xaml", "*.plist", "*.js", "*.config", "*.appxmanifest", "*.projitems", "*.shproj", "*.csproj", "*.sln", "*.json", "*.props" };

					foreach (var file in filters.SelectMany(f => Directory.EnumerateFiles(SourcePath, f, SearchOption.AllDirectories)))
					{
						Log.LogMessage("Converting file: " + file);

						var s = File.ReadAllText(file);
						var fileExtension = Path.GetExtension(file).ToLower();

						if(fileExtension == ".cs"
							&& !file.EndsWith("Server\\Program.cs"))
						{
							// Disable conditionals for all imported files
							s = "//-:cnd:noEmit\r\n" + s;
						}

						s = s
							.Replace("$ext_safeprojectname$", SafeProjectName)
							.Replace("$safeprojectname$", SafeProjectName)
							.Replace("UseAndroid", "android")
							.Replace("UseIOS", "ios")
							.Replace("UseAppKit", "macos")
							.Replace("UseCatalyst", "maccatalyst")
							.Replace("UseServer", "hosted")
							.Replace("UseWebAssemblyManifestJson", "wasm-pwa-manifest")
							.Replace("$basetargetframework$", "net6.0")
							;

		
						if(fileExtension == ".csproj" || fileExtension == ".cs")
						{
							// Avoid value replacement with msbuild's CodeTaskFactory expansion
							string pattern = string.Format("^{0}\\$if\\$\\(\\${0}\\${0} == True\\)", "(.*?)");

							s = Regex.Replace(s, pattern, @"$1<!--#if ($2)" + Environment.NewLine + "$1", RegexOptions.Multiline);

							s = s
								.Replace("$endif$", "\n#endif -->");
								;
						}

						if(IsWinUI)
						{
							if(file.EndsWith("UWP.csproj", StringComparison.OrdinalIgnoreCase))
							{
								var replacedProps = @"
		<ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
		<WindowsXamlEnableOverview>true</WindowsXamlEnableOverview>
		<IsWinUIAlpha Condition=""'$(IsWinUIAlpha)' == ''"">true</IsWinUIAlpha>
		<WindowsKitsPath Condition=""'$(IsWinUIAlpha)' == 'true'"">WinUI-Alpha-Projects-Don-t-Use-SDK-Xaml-Tools</WindowsKitsPath>";

								s = s
									.Replace("<ProjectTypeGuids>{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>", replacedProps);

								var replacedNuget = @"
		<PackageReference Include=""Microsoft.WinUI"">
			<Version>3.0.0-preview3.201113.0</Version>
		</PackageReference>
		<PackageReference Include=""Microsoft.NETCore.UniversalWindowsPlatform"">";

								s = s
									.Replace(@"<PackageReference Include=""Microsoft.NETCore.UniversalWindowsPlatform"">", replacedNuget);
							}
							else
							{
								s = s
									.Replace("Include=\"Uno.UI", "Include=\"Uno.WinUI")
									.Replace("Include=\"Uno.WinUI.Adapter.Microsoft.Extensions.Logging", "Include=\"Uno.UI.Adapter.Microsoft.Extensions.Logging")
									.Replace("args.PreviousExecutionState", "args.UWPLaunchActivatedEventArgs.PreviousExecutionState")
									.Replace("args.PrelaunchActivated", "args.UWPLaunchActivatedEventArgs.PrelaunchActivated")
									.Replace("OnLaunched(LaunchActivatedEventArgs", "OnLaunched(Microsoft.UI.Xaml.LaunchActivatedEventArgs")
									.Replace("Windows.UI.Xaml", "Microsoft.UI.Xaml");

								var replacedLogging = @"
						{ ""Windows"", LogLevel.Warning },
						{ ""Microsoft"", LogLevel.Warning },";

								s = s
									.Replace(@"{ ""Windows"", LogLevel.Warning },", replacedLogging);
							}
						}

						File.WriteAllText(file, s);

					}

					var platforms = new string[] { "iOS", "UWP", "Wasm", "Server", "Droid", "macOS", "Mobile", "Shared", "Skia.Gtk", "Skia.WPF", "Skia.WPF.Host", "Skia.Tizen", "Skia.Linux.FrameBuffer" };

					foreach(var platform in platforms)
					{
						var source = Path.Combine(SourcePath, platform);

						if(Directory.Exists(source))
						{
							Directory.Move(Path.Combine(SourcePath, platform), Path.Combine(SourcePath, SafeProjectName + "." + platform));
						}
					}
				]]>
			</Code>
		</Task>
	</UsingTask>

	<UsingTask TaskName="RenameSolution" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<SourcePath ParameterType="System.String" Required="True" Output="False" />
			<SourceName ParameterType="System.String" Required="True" Output="False" />
			<TargetName ParameterType="System.String" Required="True" Output="False" />
		</ParameterGroup>
		<Task>
			<Reference Include="System.Xml" />
			<Using Namespace="System" />
			<Using Namespace="System.Linq" />
			<Using Namespace="System.IO" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
					string[] filters = new[] { "*.cs", "*.xml", "*.xaml", "*.plist", "*.js", "*.json", "*.config", "*.appxmanifest", "*.projitems", "*.shproj", "*.csproj", "*.sln", "*.props" };

					foreach (var file in filters.SelectMany(f => Directory.EnumerateFiles(SourcePath, f, SearchOption.AllDirectories)))
					{
						Log.LogMessage("Converting file: " + file);

						var s = File.ReadAllText(file);

						s = s
							.Replace(SourceName, TargetName)
							;

						var fileName = Path.GetFileName(file);
						var filePath = Path.GetDirectoryName(file);
						var updatedFileName = fileName.Replace(SourceName, TargetName);

						File.WriteAllText(file, s);

						if(updatedFileName != fileName)
						{
							File.Move(file, Path.Combine(filePath, updatedFileName));
						}
					}

					Func<string[]> getFolders = () => Directory.GetDirectories(SourcePath, "*.*", SearchOption.AllDirectories);
					var folders = getFolders();

					for (int i = 0; i < folders.Length; i++)
					{
						var dir = folders[i];

						if(!Directory.Exists(dir)) continue;

						var dirName = Path.GetFileName(dir);
						var path = Path.GetDirectoryName(dir);

						var updatedDirName = dirName.Replace(SourceName, TargetName);

						if(updatedDirName != dirName)
						{
							i = 0;
							folders = getFolders();
							var target = Path.Combine(path, updatedDirName);
							Log.LogMessage("Moving: " + dir + " to " + target);
							Directory.Move(dir, target);
						}
					}
				]]>
			</Code>
		</Task>
	</UsingTask>

	<ItemGroup>
		<None Include="..\..\Common\uno.png" Pack="true" PackagePath="\" Visble="false" />
	</ItemGroup>
</Project>
