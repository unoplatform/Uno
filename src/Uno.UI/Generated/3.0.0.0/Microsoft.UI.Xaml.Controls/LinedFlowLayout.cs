// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Controls
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class LinedFlowLayout : global::Microsoft.UI.Xaml.Controls.VirtualizingLayout
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double MinItemSpacing
		{
			get
			{
				return (double)this.GetValue(MinItemSpacingProperty);
			}
			set
			{
				this.SetValue(MinItemSpacingProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double LineSpacing
		{
			get
			{
				return (double)this.GetValue(LineSpacingProperty);
			}
			set
			{
				this.SetValue(LineSpacingProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double LineHeight
		{
			get
			{
				return (double)this.GetValue(LineHeightProperty);
			}
			set
			{
				this.SetValue(LineHeightProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsStretch ItemsStretch
		{
			get
			{
				return (global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsStretch)this.GetValue(ItemsStretchProperty);
			}
			set
			{
				this.SetValue(ItemsStretchProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsJustification ItemsJustification
		{
			get
			{
				return (global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsJustification)this.GetValue(ItemsJustificationProperty);
			}
			set
			{
				this.SetValue(ItemsJustificationProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public double ActualLineHeight
		{
			get
			{
				return (double)this.GetValue(ActualLineHeightProperty);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int RequestedRangeLength
		{
			get
			{
				throw new global::System.NotImplementedException("The member int LinedFlowLayout.RequestedRangeLength is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20LinedFlowLayout.RequestedRangeLength");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int RequestedRangeStartIndex
		{
			get
			{
				throw new global::System.NotImplementedException("The member int LinedFlowLayout.RequestedRangeStartIndex is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20LinedFlowLayout.RequestedRangeStartIndex");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty ActualLineHeightProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(ActualLineHeight), typeof(double),
			typeof(global::Microsoft.UI.Xaml.Controls.LinedFlowLayout),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(double)));
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty ItemsJustificationProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(ItemsJustification), typeof(global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsJustification),
			typeof(global::Microsoft.UI.Xaml.Controls.LinedFlowLayout),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsJustification)));
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty ItemsStretchProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(ItemsStretch), typeof(global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsStretch),
			typeof(global::Microsoft.UI.Xaml.Controls.LinedFlowLayout),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsStretch)));
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty LineHeightProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(LineHeight), typeof(double),
			typeof(global::Microsoft.UI.Xaml.Controls.LinedFlowLayout),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(double)));
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty LineSpacingProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(LineSpacing), typeof(double),
			typeof(global::Microsoft.UI.Xaml.Controls.LinedFlowLayout),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(double)));
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty MinItemSpacingProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(MinItemSpacing), typeof(double),
			typeof(global::Microsoft.UI.Xaml.Controls.LinedFlowLayout),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(double)));
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public LinedFlowLayout() : base()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.LinedFlowLayout", "LinedFlowLayout.LinedFlowLayout()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.LinedFlowLayout()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ItemsInfoRequested.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ItemsInfoRequested.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ItemsUnlocked.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ItemsUnlocked.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ItemsJustification.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ItemsJustification.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ItemsStretch.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ItemsStretch.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.MinItemSpacing.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.MinItemSpacing.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.LineSpacing.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.LineSpacing.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.LineHeight.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.LineHeight.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ActualLineHeight.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.RequestedRangeStartIndex.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.RequestedRangeLength.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void InvalidateItemsInfo()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.LinedFlowLayout", "void LinedFlowLayout.InvalidateItemsInfo()");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public int LockItemToLine(int itemIndex)
		{
			throw new global::System.NotImplementedException("The member int LinedFlowLayout.LockItemToLine(int itemIndex) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=int%20LinedFlowLayout.LockItemToLine%28int%20itemIndex%29");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ItemsJustificationProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ItemsStretchProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.MinItemSpacingProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.LineSpacingProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.LineHeightProperty.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.LinedFlowLayout.ActualLineHeightProperty.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, global::Microsoft.UI.Xaml.Controls.LinedFlowLayoutItemsInfoRequestedEventArgs> ItemsInfoRequested
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.LinedFlowLayout", "event TypedEventHandler<LinedFlowLayout, LinedFlowLayoutItemsInfoRequestedEventArgs> LinedFlowLayout.ItemsInfoRequested");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.LinedFlowLayout", "event TypedEventHandler<LinedFlowLayout, LinedFlowLayoutItemsInfoRequestedEventArgs> LinedFlowLayout.ItemsInfoRequested");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.LinedFlowLayout, object> ItemsUnlocked
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.LinedFlowLayout", "event TypedEventHandler<LinedFlowLayout, object> LinedFlowLayout.ItemsUnlocked");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.LinedFlowLayout", "event TypedEventHandler<LinedFlowLayout, object> LinedFlowLayout.ItemsUnlocked");
			}
		}
#endif
	}
}
