// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Xaml.Controls
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class MapElementsLayer : global::Microsoft.UI.Xaml.Controls.MapLayer
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MapElement> MapElements
		{
			get
			{
				return (global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MapElement>)this.GetValue(MapElementsProperty);
			}
			set
			{
				this.SetValue(MapElementsProperty, value);
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Xaml.DependencyProperty MapElementsProperty { get; } =
		Microsoft.UI.Xaml.DependencyProperty.Register(
			nameof(MapElements), typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MapElement>),
			typeof(global::Microsoft.UI.Xaml.Controls.MapElementsLayer),
			new Microsoft.UI.Xaml.FrameworkPropertyMetadata(default(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.MapElement>)));
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public MapElementsLayer()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.MapElementsLayer", "MapElementsLayer.MapElementsLayer()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Xaml.Controls.MapElementsLayer.MapElementsLayer()
		// Forced skipping of method Microsoft.UI.Xaml.Controls.MapElementsLayer.MapElements.get
		// Forced skipping of method Microsoft.UI.Xaml.Controls.MapElementsLayer.MapElements.set
		// Forced skipping of method Microsoft.UI.Xaml.Controls.MapElementsLayer.MapElementClick.add
		// Forced skipping of method Microsoft.UI.Xaml.Controls.MapElementsLayer.MapElementClick.remove
		// Forced skipping of method Microsoft.UI.Xaml.Controls.MapElementsLayer.MapElementsProperty.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Windows.Foundation.TypedEventHandler<global::Microsoft.UI.Xaml.Controls.MapElementsLayer, global::Microsoft.UI.Xaml.Controls.MapElementClickEventArgs> MapElementClick
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.MapElementsLayer", "event TypedEventHandler<MapElementsLayer, MapElementClickEventArgs> MapElementsLayer.MapElementClick");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Xaml.Controls.MapElementsLayer", "event TypedEventHandler<MapElementsLayer, MapElementClickEventArgs> MapElementsLayer.MapElementClick");
			}
		}
#endif
	}
}
