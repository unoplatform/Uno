// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.UI.Content
{
#if false || false || false || false || false || false || false
	[global::Uno.NotImplemented]
#endif
	public partial class ContentIsland : global::System.IDisposable, global::Microsoft.UI.IClosableNotifier, global::Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.UI.Composition.CompositionBrush SystemBackdrop
		{
			get
			{
				throw new global::System.NotImplementedException("The member CompositionBrush ContentIsland.SystemBackdrop is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=CompositionBrush%20ContentIsland.SystemBackdrop");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentIsland", "CompositionBrush ContentIsland.SystemBackdrop");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsIslandVisible
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentIsland.IsIslandVisible is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentIsland.IsIslandVisible");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentIsland", "bool ContentIsland.IsIslandVisible");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsIslandEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentIsland.IsIslandEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentIsland.IsIslandEnabled");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentIsland", "bool ContentIsland.IsIslandEnabled");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsHitTestVisibleWhenTransparent
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentIsland.IsHitTestVisibleWhenTransparent is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentIsland.IsHitTestVisibleWhenTransparent");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentIsland", "bool ContentIsland.IsHitTestVisibleWhenTransparent");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public object AppData
		{
			get
			{
				throw new global::System.NotImplementedException("The member object ContentIsland.AppData is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=object%20ContentIsland.AppData");
			}
			set
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentIsland", "object ContentIsland.AppData");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::System.Numerics.Vector2 ActualSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member Vector2 ContentIsland.ActualSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=Vector2%20ContentIsland.ActualSize");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Content.ContentCoordinateConverter CoordinateConverter
		{
			get
			{
				throw new global::System.NotImplementedException("The member ContentCoordinateConverter ContentIsland.CoordinateConverter is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentCoordinateConverter%20ContentIsland.CoordinateConverter");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Windows.Foundation.Collections.IPropertySet CustomProperties
		{
			get
			{
				throw new global::System.NotImplementedException("The member IPropertySet ContentIsland.CustomProperties is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=IPropertySet%20ContentIsland.CustomProperties");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Dispatching.DispatcherQueue DispatcherQueue
		{
			get
			{
				throw new global::System.NotImplementedException("The member DispatcherQueue ContentIsland.DispatcherQueue is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=DispatcherQueue%20ContentIsland.DispatcherQueue");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Content.ContentIslandEnvironment Environment
		{
			get
			{
				throw new global::System.NotImplementedException("The member ContentIslandEnvironment ContentIsland.Environment is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentIslandEnvironment%20ContentIsland.Environment");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public ulong Id
		{
			get
			{
				throw new global::System.NotImplementedException("The member ulong ContentIsland.Id is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ulong%20ContentIsland.Id");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsConnected
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentIsland.IsConnected is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentIsland.IsConnected");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsSiteEnabled
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentIsland.IsSiteEnabled is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentIsland.IsSiteEnabled");
			}
		}
#endif
		// Skipping already declared property IsSiteVisible
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Content.ContentLayoutDirection LayoutDirection
		{
			get
			{
				throw new global::System.NotImplementedException("The member ContentLayoutDirection ContentIsland.LayoutDirection is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentLayoutDirection%20ContentIsland.LayoutDirection");
			}
		}
#endif
		// Skipping already declared property RasterizationScale
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool IsClosed
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool ContentIsland.IsClosed is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20ContentIsland.IsClosed");
			}
		}
#endif
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.IsIslandVisible.set
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.AppData.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.AppData.set
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.CoordinateConverter.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.CustomProperties.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.DispatcherQueue.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.Environment.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.Id.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.IsConnected.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.IsHitTestVisibleWhenTransparent.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.IsHitTestVisibleWhenTransparent.set
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.IsIslandEnabled.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.IsIslandEnabled.set
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.IsIslandVisible.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.IsClosed.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.IsSiteEnabled.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.IsSiteVisible.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.LayoutDirection.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.RasterizationScale.get
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public object GetAutomationHostProvider()
		{
			throw new global::System.NotImplementedException("The member object ContentIsland.GetAutomationHostProvider() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=object%20ContentIsland.GetAutomationHostProvider%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public global::Microsoft.UI.Content.ContentDeferral GetStateChangeDeferral()
		{
			throw new global::System.NotImplementedException("The member ContentDeferral ContentIsland.GetStateChangeDeferral() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentDeferral%20ContentIsland.GetStateChangeDeferral%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void RequestSize(global::System.Numerics.Vector2 size)
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentIsland", "void ContentIsland.RequestSize(Vector2 size)");
		}
#endif
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.AutomationProviderRequested.add
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.AutomationProviderRequested.remove
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.StateChanged.add
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.StateChanged.remove
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public void Dispose()
		{
			global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentIsland", "void ContentIsland.Dispose()");
		}
#endif
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.ActualSize.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.Closed.add
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.Closed.remove
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.FrameworkClosed.add
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.FrameworkClosed.remove
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.SystemBackdrop.get
		// Forced skipping of method Microsoft.UI.Content.ContentIsland.SystemBackdrop.set
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Content.ContentIsland Create(global::Microsoft.UI.Composition.Visual Root)
		{
			throw new global::System.NotImplementedException("The member ContentIsland ContentIsland.Create(Visual Root) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentIsland%20ContentIsland.Create%28Visual%20Root%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Content.ContentIsland[] FindAllForCompositor(global::Microsoft.UI.Composition.Compositor compositor)
		{
			throw new global::System.NotImplementedException("The member ContentIsland[] ContentIsland.FindAllForCompositor(Compositor compositor) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentIsland%5B%5D%20ContentIsland.FindAllForCompositor%28Compositor%20compositor%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Content.ContentIsland[] FindAllForCurrentThread()
		{
			throw new global::System.NotImplementedException("The member ContentIsland[] ContentIsland.FindAllForCurrentThread() is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentIsland%5B%5D%20ContentIsland.FindAllForCurrentThread%28%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Content.ContentIsland GetByVisual(global::Microsoft.UI.Composition.Visual child)
		{
			throw new global::System.NotImplementedException("The member ContentIsland ContentIsland.GetByVisual(Visual child) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentIsland%20ContentIsland.GetByVisual%28Visual%20child%29");
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public static global::Microsoft.UI.Content.ContentIsland GetFromId(ulong id)
		{
			throw new global::System.NotImplementedException("The member ContentIsland ContentIsland.GetFromId(ulong id) is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=ContentIsland%20ContentIsland.GetFromId%28ulong%20id%29");
		}
#endif
		// Skipping already declared event Microsoft.UI.Content.ContentIsland.AutomationProviderRequested
		// Skipping already declared event Microsoft.UI.Content.ContentIsland.StateChanged
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Microsoft.UI.ClosableNotifierHandler Closed
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentIsland", "event ClosableNotifierHandler ContentIsland.Closed");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentIsland", "event ClosableNotifierHandler ContentIsland.Closed");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public event global::Microsoft.UI.ClosableNotifierHandler FrameworkClosed
		{
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			add
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentIsland", "event ClosableNotifierHandler ContentIsland.FrameworkClosed");
			}
			[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
			remove
			{
				global::Windows.Foundation.Metadata.ApiInformation.TryRaiseNotImplemented("Microsoft.UI.Content.ContentIsland", "event ClosableNotifierHandler ContentIsland.FrameworkClosed");
			}
		}
#endif
		// Processing: System.IDisposable
		// Processing: Microsoft.UI.IClosableNotifier
		// Processing: Microsoft.UI.Composition.ICompositionSupportsSystemBackdrop
	}
}
