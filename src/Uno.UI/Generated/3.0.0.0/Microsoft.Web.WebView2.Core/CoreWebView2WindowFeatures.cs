// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace Microsoft.Web.WebView2.Core
{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
	[global::Uno.NotImplemented]
#endif
	public partial class CoreWebView2WindowFeatures
	{
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		internal CoreWebView2WindowFeatures()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool HasPosition
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2WindowFeatures.HasPosition is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2WindowFeatures.HasPosition");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool HasSize
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2WindowFeatures.HasSize is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2WindowFeatures.HasSize");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint Height
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint CoreWebView2WindowFeatures.Height is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20CoreWebView2WindowFeatures.Height");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint Left
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint CoreWebView2WindowFeatures.Left is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20CoreWebView2WindowFeatures.Left");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ShouldDisplayMenuBar
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2WindowFeatures.ShouldDisplayMenuBar is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2WindowFeatures.ShouldDisplayMenuBar");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ShouldDisplayScrollBars
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2WindowFeatures.ShouldDisplayScrollBars is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2WindowFeatures.ShouldDisplayScrollBars");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ShouldDisplayStatus
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2WindowFeatures.ShouldDisplayStatus is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2WindowFeatures.ShouldDisplayStatus");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public bool ShouldDisplayToolbar
		{
			get
			{
				throw new global::System.NotImplementedException("The member bool CoreWebView2WindowFeatures.ShouldDisplayToolbar is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=bool%20CoreWebView2WindowFeatures.ShouldDisplayToolbar");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint Top
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint CoreWebView2WindowFeatures.Top is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20CoreWebView2WindowFeatures.Top");
			}
		}
#endif
#if __ANDROID__ || __IOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__ || __MACOS__
		[global::Uno.NotImplemented("__ANDROID__", "__IOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__", "__MACOS__")]
		public uint Width
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint CoreWebView2WindowFeatures.Width is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20CoreWebView2WindowFeatures.Width");
			}
		}
#endif
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures.HasPosition.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures.HasSize.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures.Left.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures.Top.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures.Height.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures.Width.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures.ShouldDisplayMenuBar.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures.ShouldDisplayStatus.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures.ShouldDisplayToolbar.get
		// Forced skipping of method Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures.ShouldDisplayScrollBars.get
	}
}
