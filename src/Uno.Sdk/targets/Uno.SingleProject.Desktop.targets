<Project>
	<PropertyGroup>
		<ApplicationManifest Condition="$(ApplicationManifest) == '' AND Exists('$(DesktopProjectFolder)app.manifest')">$(DesktopProjectFolder)app.manifest</ApplicationManifest>
		<ApplicationManifest Condition="$(ApplicationManifest) == '' AND Exists('app.manifest')">app.manifest</ApplicationManifest>
		<_DefaultInfoPlist Condition="Exists('$(DesktopProjectFolder)Info.plist')">$(DesktopProjectFolder)Info.plist</_DefaultInfoPlist>
		<_DefaultEntitlementsPlist Condition="Exist('$(DesktopProjectFolder)Entitlements.plist')">$(DesktopProjectFolder)Entitlements.plist</_DefaultEntitlementsPlist>

		<!-- Follow the Android, iOS, & MacCatalyst SDK's -->
		<!-- Default to 1, if blank -->
		<ApplicationVersion Condition=" '$(ApplicationVersion)' == '' ">1</ApplicationVersion>
		<Version Condition=" $([System.Version]::TryParse ('$(ApplicationDisplayVersion)', $([System.Version]::Parse('1.0')))) ">$(ApplicationDisplayVersion)</Version>
		<ApplicationDisplayVersion Condition=" '$(ApplicationDisplayVersion)' == '' ">$(Version)</ApplicationDisplayVersion>
	</PropertyGroup>
	
	<PropertyGroup Condition=" '$(IsUnoHead)' == 'true' AND $(Optimize) == 'true' ">
		<OutputType>WinExe</OutputType>
	</PropertyGroup>

	<ItemGroup>
		<SkiaInfoPlist Include="$(_DefaultInfoPlist)" Condition="$(_DefaultInfoPlist) == ''" IsDefaultItem="true" />
		<SkiaEntitlementsPlist Include="$(_DefaultEntitlementsPlist)" Condition="$(_DefaultEntitlementsPlist) != ''" IsDefaultItem="true" />
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Include="$(DesktopProjectFolder)Package.appxmanifest"
			Condition="Exists('$(DesktopProjectFolder)Package.appxmanifest')"
			Exclude="@(EmbeddedResource)"
			IsDefaultItem="true" />
		<EmbeddedResource Include="Package.appxmanifest"
			Condition="Exists('Package.appxmanifest')"
			Exclude="@(EmbeddedResource)"
			IsDefaultItem="true" />
		<Manifest Include="$(ApplicationManifest)"
			Condition="$(ApplicationManifest) != ''"
			Exclude="@(Manifest)"
			IsDefaultItem="true" />
	</ItemGroup>

	<ItemGroup Condition="$(PlatformsProjectFolder) != '' and Exists($(PlatformsProjectFolder))">
		<_TargetPlatformFiles Include="$(DesktopProjectFolder)/**/*" />
		<_AllPlatformFiles Include="$(PlatformsProjectFolder)/**/*" />
		<_IgnorePlatformFiles Include="@(_AllPlatformFiles)" Exclude="@(_TargetPlatformFiles)" />
		<Compile Remove="@(_IgnorePlatformFiles)" />
		<Content Remove="@(_IgnorePlatformFiles)" />
		<EmbeddedResource Remove="@(_IgnorePlatformFiles)" />
		<Manifest Remove="@(_IgnorePlatformFiles)" />
	</ItemGroup>

	<Import Project="Uno.SingleProject.Desktop.Linux.Publish.targets"
			Condition="$(NETCoreSdkRuntimeIdentifier.Contains('linux')) AND '$(IsUnoHead)' == 'true'" />
	<Import Project="Uno.SingleProject.Desktop.MacOS.Publish.targets"
			Condition="$(NETCoreSdkRuntimeIdentifier.Contains('osx')) AND '$(IsUnoHead)' == 'true'" />
	<Import Project="Uno.SingleProject.Desktop.Windows.Publish.targets"
			Condition="$(NETCoreSdkRuntimeIdentifier.Contains('win')) AND '$(IsUnoHead)' == 'true'" />

	<Target Name="_UnoRemoveTransitiveWPFDependency"
			BeforeTargets="_CheckForTransitiveWindowsDesktopDependencies"
			Condition="('$(OutputType)' == 'WinExe' or '$(OutputType)' == 'Exe') and '$(UnoDisable_RemoveTransitiveWPFDependency)'==''">
		<ItemGroup>
			<!--
			This removes the transitive dependency to WPF which has a requirement to 
			have net8.0-windows and not net8.0.
			-->
			<TransitiveFrameworkReference Remove="Microsoft.WindowsDesktop.App.WPF" />
		</ItemGroup>
	</Target>

	<Target Name="_UnoRemoveRuntimeFrameworkInRuntimeConfigurationFiles"
			BeforeTargets="GenerateBuildRuntimeConfigurationFiles"
			Condition="('$(OutputType)' == 'WinExe' or '$(OutputType)' == 'Exe') and '$(UnoDisable_RemoveRuntimeFrameworkInRuntimeConfigurationFiles)'==''">
		<ItemGroup>
			<!--
			This removes the Microsoft.WindowsDesktop.App from the runtime configuration file in the output layout.
			Uno relies on loading WPF dynamically by searching for the WPF assemblies in the .NET SDK install folder.
			-->
			<_RuntimeFrameworkToRemove Include="@(RuntimeFramework)" Condition="'%(Identity)'=='Microsoft.WindowsDesktop.App'" />
			<RuntimeFramework Remove="@(_RuntimeFrameworkToRemove)" />
		</ItemGroup>
	</Target>

</Project>
