<Project>
	<ItemGroup>
		<!-- Removes native usings to avoid Ambiguous reference -->
		<Using Remove="@(Using->HasMetadata('Platform'))" />
	</ItemGroup>

	<!-- Sanity check ensure that platform files for other targets are not included -->
	<ItemGroup Condition=" $(_IsUnoSingleProjectAndLegacy) == 'true' and $(PlatformsProjectFolder) != '' and Exists($(PlatformsProjectFolder))">
		<Compile Remove="@(_IgnorePlatformFiles)" />
		<Page Remove="@(_IgnorePlatformFiles)" />
		<Content Remove="@(_IgnorePlatformFiles)" />
		<EmbeddedResource Remove="@(_IgnorePlatformFiles)" />
		<Manifest Remove="@(_IgnorePlatformFiles)" />
		<AppxManifest Remove="@(_IgnorePlatformFiles)" />
	</ItemGroup>

	<!--
		Adjust the first target framework to be browserwasm or desktop or windows, if the current debugging
		target is either of those. This portion is linked to the TryReloadTargetAsync in
		the Uno.UI.RemoteControl.VS project.
		
		The _UnoSelectedTargetFramework is defined as a csproj.user property, set when the IDE
		changes the active target framework.
	
		This is required by a WebAssembly/Desktop support issue in VS, where both Publishing/Debugging and other 
		targets hot reload or mobile targets debugging is not supported. See https://aka.platform.uno/singleproject-vs-reload.
	-->
	<PropertyGroup Condition=" '$(BuildingInsideVisualStudio)' == 'true' AND '$(TargetFrameworks)' != '' ">
		<_UnoTargetFrameworkCount>$(TargetFrameworks.Split(';', System.StringSplitOptions.RemoveEmptyEntries).Length)</_UnoTargetFrameworkCount>
		
		<!-- Cleanup the target frameworks so the rewriting becomes simpler -->
		<TargetFrameworks>$([System.Text.RegularExpressions.Regex]::Replace($(TargetFrameworks), '\s', ''))</TargetFrameworks>

		<!-- Ensure that the TFM list ends with a `;` in order for replacements to be tfm specific -->
		<TargetFrameworks Condition="!$(TargetFrameworks.EndsWith(';'))">$(TargetFrameworks);</TargetFrameworks>

		<!-- Select the first original target framework to be replaced-->
		<_UnoFirstOriginalTargetFramework>$(TargetFrameworks.Split(';', System.StringSplitOptions.RemoveEmptyEntries)[0].Trim())</_UnoFirstOriginalTargetFramework>
	</PropertyGroup>

	<Choose>
		<When Condition="
				'$(BuildingInsideVisualStudio)' == 'true'
				AND '$(UnoDisableFirstTargetFrameworkRewrite)' != 'true'
				AND 
				(
					(
						$([MSBuild]::VersionLessThan($(MSBuildVersion), 17.12.0))
						AND (
							$([MSBuild]::GetTargetPlatformIdentifier($(_UnoSelectedTargetFramework))) == 'browserwasm'
							OR $([MSBuild]::GetTargetPlatformIdentifier($(_UnoSelectedTargetFramework))) == 'desktop'
							OR $([MSBuild]::GetTargetPlatformIdentifier($(_UnoSelectedTargetFramework))) == 'windows'
						)
					)
					OR
					(
						$([MSBuild]::VersionGreaterThanOrEquals($(MSBuildVersion), 17.12.0))
						AND (
							$([MSBuild]::GetTargetPlatformIdentifier($(_UnoSelectedTargetFramework))) == 'browserwasm'
						)
					)
				)
				AND '$(TargetFrameworks)' != ''
				AND '$(_UnoFirstOriginalTargetFramework)' != '$(_UnoSelectedTargetFramework)'
				AND $(TargetFrameworks.Contains('$(_UnoSelectedTargetFramework);'))">

			<PropertyGroup>
				<!-- 
					This property is multiline, but only inside the expression. There must be no crlf 
					before the first `$(` or after the last `)`
				-->
				<TargetFrameworks>$(
						[MSBuild]::Unescape(
							$(
								TargetFrameworks
								.Replace('$(_UnoSelectedTargetFramework);','**PLACEHOLDER**;')
								.Replace('$(_UnoFirstOriginalTargetFramework);','$(_UnoSelectedTargetFramework);')
								.Replace('**PLACEHOLDER**;','$(_UnoFirstOriginalTargetFramework);')
							)
						)
					)</TargetFrameworks>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<!-- As we've rewritten the list, we need to make sure that `;` is not escaped -->
				<TargetFrameworks>$([MSBuild]::Unescape($(TargetFrameworks)))</TargetFrameworks>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<Target Name="_UnoVSWarnBrowserIsFirst"
			BeforeTargets="_SetBuildInnerTarget;_ComputeTargetFrameworkItems;ResolveFrameworkReferences"
			Condition=" 
			'$(UnoDisableVSWarnBrowserIsFirst)' != 'true'
			AND '$(BuildingInsideVisualStudio)' == 'true'
			AND '$(OutputType)'!='Library'
			AND '$(_UnoTargetFrameworkCount)' != ''
			AND $(_UnoTargetFrameworkCount) &gt; 1
			AND $(TargetFrameworks.Contains('-browserwasm'))
			AND $([MSBuild]::GetTargetPlatformIdentifier($(_UnoFirstOriginalTargetFramework))) == 'browserwasm'">

		<Warning Code="UNOB0010"
				 Text="The browserwasm TargetFramework must not be placed first in the TargetFrameworks property in order for HotReload to work properly. (See https://aka.platform.uno/UNOB0010)" />
	</Target>

	<Target Name="_UnoVSWarnDesktopIsFirst"
				BeforeTargets="_SetBuildInnerTarget;_ComputeTargetFrameworkItems;ResolveFrameworkReferences"
				Condition="
				'$(UnoDisableVSWarnDesktopIsFirst)' != 'true'
				AND '$(BuildingInsideVisualStudio)' == 'true'
				AND '$(OutputType)'!='Library'
				AND $([MSBuild]::VersionLessThan($(MSBuildVersion), 17.12.0))
				AND '$(_UnoTargetFrameworkCount)' != ''
				AND $(_UnoTargetFrameworkCount) &gt; 1
				AND $([MSBuild]::GetTargetPlatformIdentifier($(_UnoFirstOriginalTargetFramework))) == 'desktop'">

		<Warning Code="UNOB0011"
					Text="The desktop TargetFramework must not be placed first in the TargetFrameworks property in order for other platforms debugging to work. (See https://aka.platform.uno/UNOB0011)" />
	</Target>

	<Target Name="_UnoVSWarnDesktopIsNotFirst"
				BeforeTargets="_SetBuildInnerTarget;_ComputeTargetFrameworkItems;ResolveFrameworkReferences"
				Condition="
				'$(UnoDisableVSWarnDesktopIsNotFirst)' != 'true'
				AND '$(BuildingInsideVisualStudio)' == 'true'
				AND '$(OutputType)'!='Library'
				AND $([MSBuild]::VersionGreaterThanOrEquals($(MSBuildVersion), 17.12.0))
				AND $([MSBuild]::VersionLessThan($(MSBuildVersion), 17.13.0))
				AND '$(_UnoTargetFrameworkCount)' != ''
				AND $(_UnoTargetFrameworkCount) &gt; 1
				AND $(TargetFrameworks.Contains('-desktop'))
				AND (
					$(TargetFrameworks.Contains('-ios'))
					OR $(TargetFrameworks.Contains('-android'))
					OR $(TargetFrameworks.Contains('-maccatalyst'))
				)
				AND $([MSBuild]::GetTargetPlatformIdentifier($(_UnoFirstOriginalTargetFramework))) != 'desktop'">

		<Warning Code="UNOB0015"
					Text="The desktop TargetFramework must be placed first in the TargetFrameworks property in order for WSL debugging to work, when mobile targets are also used. (See https://aka.platform.uno/UNOB0015)" />
	</Target>

	<Target Name="_UnoVSWarnWindowsIsFirst"
				BeforeTargets="_SetBuildInnerTarget;_ComputeTargetFrameworkItems;ResolveFrameworkReferences"
				Condition="
				'$(UnoDisableVSWarnWindowsIsFirst)' != 'true'
				AND '$(BuildingInsideVisualStudio)' == 'true'
				AND '$(OutputType)'!='Library'
				AND '$(_UnoTargetFrameworkCount)' != ''
				AND $(_UnoTargetFrameworkCount) &gt; 1
				AND $(TargetFrameworks.Contains('-windows'))
				AND $([MSBuild]::GetTargetPlatformIdentifier($(_UnoFirstOriginalTargetFramework))) == 'windows'">

		<Warning Code="UNOB0012"
					Text="The windows TargetFramework must not be placed first in the TargetFrameworks property in order for other platforms debugging to work. (See https://aka.platform.uno/UNOB0012)" />
	</Target>

	<Target Name="_UnoVSWarnNetIsFirst"
			BeforeTargets="_SetBuildInnerTarget;_ComputeTargetFrameworkItems;ResolveFrameworkReferences"
			Condition=" 
			'$(UnoDisableVSWarnNetIsFirst)' != 'true'
			AND '$(BuildingInsideVisualStudio)' == 'true'
			AND '$(OutputType)'!='Library'
			AND '$(_UnoTargetFrameworkCount)' != ''
			AND $(_UnoTargetFrameworkCount) &gt; 1
			AND $([MSBuild]::GetTargetPlatformIdentifier($(_UnoFirstOriginalTargetFramework))) == ''
			AND $(_UnoFirstOriginalTargetFramework.StartsWith('net'))">

		<Warning Code="UNOB0013"
				 Text="The $(_UnoFirstOriginalTargetFramework) TargetFramework must not be placed first in the TargetFrameworks property in order for other platforms debugging to work. (See https://aka.platform.uno/UNOB0013)" />
	</Target>

	<!-- Include any additional targets that packages defined by other packages -->
	<Import Project="$(AfterUnoSdkTargets)" Condition="'$(AfterUnoSdkTargets)' != ''"/>

</Project>
