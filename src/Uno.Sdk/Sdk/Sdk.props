<!--
***********************************************************************************************
WARNING:
DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
created a backup copy. Incorrect changes to this file will make it
impossible to load or build your projects from the command-line or the IDE.

Copyright (C) Uno Platform Inc. All rights reserved.
***********************************************************************************************
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<!-- Legacy Project System Support -->
		<_DefaultMicrosoftNETSdk Condition="$(SingleProject) != 'true' AND $(UnoSingleProject) != 'true' AND ($(MSBuildProjectName.EndsWith('.Wasm')) or $(MSBuildProjectName.EndsWith('.WebAssembly')))">Microsoft.NET.Sdk.Web</_DefaultMicrosoftNETSdk>
	</PropertyGroup>

	<!-- Switch to net9's Microsoft.NET.Sdk.WebAssembly, otherwise keep compatibility with Uno.Wasm.Bootstrap's net8 support -->
	<PropertyGroup Condition=" $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'browserwasm' ">
		<_UnoUseMicrosoftNETSdkWebAssembly Condition=" $([MSBuild]::VersionGreaterThanOrEquals( $([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)')), '9.0')) ">true</_UnoUseMicrosoftNETSdkWebAssembly>

		<_DefaultMicrosoftNETSdk Condition=" '$(_UnoUseMicrosoftNETSdkWebAssembly)' != 'true' ">Microsoft.NET.Sdk.Web</_DefaultMicrosoftNETSdk>
		<_DefaultMicrosoftNETSdk Condition=" '$(_UnoUseMicrosoftNETSdkWebAssembly)' == 'true' " >Microsoft.NET.Sdk.WebAssembly</_DefaultMicrosoftNETSdk>
	</PropertyGroup>

	<PropertyGroup>
		<_DefaultMicrosoftNETSdk Condition=" $(_DefaultMicrosoftNETSdk) == '' ">Microsoft.NET.Sdk</_DefaultMicrosoftNETSdk>

		<_DefaultWasmOutputType Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'browserwasm'">$(OutputType)</_DefaultWasmOutputType>
	</PropertyGroup>

	<PropertyGroup>
		<!--
			Indicate to other targets that Uno.Sdk is being used.
			This should be set as early as possible to ensure that Uno.WinUI targets do not
			override or add additional project capabilities.
		-->
		<UsingUnoSdk>true</UsingUnoSdk>
		<UnoVersion>DefaultUnoVersion</UnoVersion>

		<AssetsFolder Condition=" '$(AssetsFolder)' == '' ">Assets\</AssetsFolder>
		<AssetsFolder>$([MSBuild]::EnsureTrailingSlash('$(AssetsFolder)'))</AssetsFolder>

		<_UnoSdkTargetsDirectory>$([MSBuild]::NormalizePath('$(MSBuildThisFileDirectory)..\targets'))</_UnoSdkTargetsDirectory>
		<_UnoSdkTargetsDirectory>$([MSBuild]::EnsureTrailingSlash($(_UnoSdkTargetsDirectory)))</_UnoSdkTargetsDirectory>
		<CustomAfterDirectoryBuildProps>$(CustomAfterDirectoryBuildProps);$(_UnoSdkTargetsDirectory)Uno.Import.SolutionConfig.props</CustomAfterDirectoryBuildProps>
		<CustomAfterDirectoryBuildProps>$(CustomAfterDirectoryBuildProps);$(_UnoSdkTargetsDirectory)Uno.IsPlatform.props</CustomAfterDirectoryBuildProps>
	</PropertyGroup>

	<!-- We want to try to avoid having AnyCPU passed-->
	<PropertyGroup Condition=" '$(VisualStudioVersion)' != '' AND '$(VisualStudioVersion)' > '10.0' AND '$(AvailablePlatforms)' == '' ">
		<AvailablePlatforms Condition=" '$(TargetFramework)' == '' OR !$(TargetFramework.Contains('windows10')) ">AnyCPU,x86,x64,arm64</AvailablePlatforms>
		<AvailablePlatforms Condition=" '$(TargetFramework)' != '' AND $(TargetFramework.Contains('windows10')) ">x86,x64,arm64</AvailablePlatforms>
	</PropertyGroup>

	<PropertyGroup>
		<DisableImplicitUnoPackages Condition=" '$(DisableImplicitUnoPackages)' == '' ">false</DisableImplicitUnoPackages>

		<!-- Disable analyzers provided by Microsoft.AspNetCore.App -->
		<DisableImplicitAspNetCoreAnalyzers Condition=" '$(DisableImplicitAspNetCoreAnalyzers)' == '' ">true</DisableImplicitAspNetCoreAnalyzers>
	</PropertyGroup>

	<Import Project="$(_UnoSdkTargetsDirectory)Uno.IsPlatform.Before.props" />

	<Import Sdk="$(_DefaultMicrosoftNETSdk)" Project="Sdk.props" />

	<PropertyGroup>
		<EnableDefaultItems Condition=" '$(EnableDefaultItems)' == '' ">true</EnableDefaultItems>
		<EnableDefaultUnoItems Condition=" '$(EnableDefaultUnoItems)' == '' ">$(EnableDefaultItems)</EnableDefaultUnoItems>
	</PropertyGroup>

	<ItemGroup>
		<AvailableItemName Include="UnoAsset"/>
		<AvailableItemName Include="UnoImage"/>
		<AvailableItemName Include="UnoIcon"/>
		<AvailableItemName Include="UnoSplashScreen"/>
		<AvailableItemName Include="UnoDspImportColors"/>
	</ItemGroup>

	<!-- 
		Remove the implicitly added FrameworkReference from the Web SDK. 

		This needs to be explicitly manipulated here as a global item, and not in a Target. This is for
		VS to read the global properties and avoid showing a yellow icon being the result of a mismatch 
		between runs of design-time builds (one build defining a FrameworkReference and another one not).
	-->
	<ItemGroup Condition=" '$(_UnoUseMicrosoftNETSdkWebAssembly)' != 'true' ">
		<FrameworkReference Remove="Microsoft.AspNetCore.App" />
	</ItemGroup>
</Project>
